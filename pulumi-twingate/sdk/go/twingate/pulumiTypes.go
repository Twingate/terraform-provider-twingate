// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package twingate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TwingateResourceAccess struct {
	// List of Group IDs that will have permission to access the Resource.
	GroupIds []string `pulumi:"groupIds"`
	// List of Service Account IDs that will have permission to access the Resource.
	ServiceAccountIds []string `pulumi:"serviceAccountIds"`
}

// TwingateResourceAccessInput is an input type that accepts TwingateResourceAccessArgs and TwingateResourceAccessOutput values.
// You can construct a concrete instance of `TwingateResourceAccessInput` via:
//
//	TwingateResourceAccessArgs{...}
type TwingateResourceAccessInput interface {
	pulumi.Input

	ToTwingateResourceAccessOutput() TwingateResourceAccessOutput
	ToTwingateResourceAccessOutputWithContext(context.Context) TwingateResourceAccessOutput
}

type TwingateResourceAccessArgs struct {
	// List of Group IDs that will have permission to access the Resource.
	GroupIds pulumi.StringArrayInput `pulumi:"groupIds"`
	// List of Service Account IDs that will have permission to access the Resource.
	ServiceAccountIds pulumi.StringArrayInput `pulumi:"serviceAccountIds"`
}

func (TwingateResourceAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceAccess)(nil)).Elem()
}

func (i TwingateResourceAccessArgs) ToTwingateResourceAccessOutput() TwingateResourceAccessOutput {
	return i.ToTwingateResourceAccessOutputWithContext(context.Background())
}

func (i TwingateResourceAccessArgs) ToTwingateResourceAccessOutputWithContext(ctx context.Context) TwingateResourceAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceAccessOutput)
}

func (i TwingateResourceAccessArgs) ToTwingateResourceAccessPtrOutput() TwingateResourceAccessPtrOutput {
	return i.ToTwingateResourceAccessPtrOutputWithContext(context.Background())
}

func (i TwingateResourceAccessArgs) ToTwingateResourceAccessPtrOutputWithContext(ctx context.Context) TwingateResourceAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceAccessOutput).ToTwingateResourceAccessPtrOutputWithContext(ctx)
}

// TwingateResourceAccessPtrInput is an input type that accepts TwingateResourceAccessArgs, TwingateResourceAccessPtr and TwingateResourceAccessPtrOutput values.
// You can construct a concrete instance of `TwingateResourceAccessPtrInput` via:
//
//	        TwingateResourceAccessArgs{...}
//
//	or:
//
//	        nil
type TwingateResourceAccessPtrInput interface {
	pulumi.Input

	ToTwingateResourceAccessPtrOutput() TwingateResourceAccessPtrOutput
	ToTwingateResourceAccessPtrOutputWithContext(context.Context) TwingateResourceAccessPtrOutput
}

type twingateResourceAccessPtrType TwingateResourceAccessArgs

func TwingateResourceAccessPtr(v *TwingateResourceAccessArgs) TwingateResourceAccessPtrInput {
	return (*twingateResourceAccessPtrType)(v)
}

func (*twingateResourceAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceAccess)(nil)).Elem()
}

func (i *twingateResourceAccessPtrType) ToTwingateResourceAccessPtrOutput() TwingateResourceAccessPtrOutput {
	return i.ToTwingateResourceAccessPtrOutputWithContext(context.Background())
}

func (i *twingateResourceAccessPtrType) ToTwingateResourceAccessPtrOutputWithContext(ctx context.Context) TwingateResourceAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceAccessPtrOutput)
}

type TwingateResourceAccessOutput struct{ *pulumi.OutputState }

func (TwingateResourceAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceAccess)(nil)).Elem()
}

func (o TwingateResourceAccessOutput) ToTwingateResourceAccessOutput() TwingateResourceAccessOutput {
	return o
}

func (o TwingateResourceAccessOutput) ToTwingateResourceAccessOutputWithContext(ctx context.Context) TwingateResourceAccessOutput {
	return o
}

func (o TwingateResourceAccessOutput) ToTwingateResourceAccessPtrOutput() TwingateResourceAccessPtrOutput {
	return o.ToTwingateResourceAccessPtrOutputWithContext(context.Background())
}

func (o TwingateResourceAccessOutput) ToTwingateResourceAccessPtrOutputWithContext(ctx context.Context) TwingateResourceAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TwingateResourceAccess) *TwingateResourceAccess {
		return &v
	}).(TwingateResourceAccessPtrOutput)
}

// List of Group IDs that will have permission to access the Resource.
func (o TwingateResourceAccessOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TwingateResourceAccess) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

// List of Service Account IDs that will have permission to access the Resource.
func (o TwingateResourceAccessOutput) ServiceAccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TwingateResourceAccess) []string { return v.ServiceAccountIds }).(pulumi.StringArrayOutput)
}

type TwingateResourceAccessPtrOutput struct{ *pulumi.OutputState }

func (TwingateResourceAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceAccess)(nil)).Elem()
}

func (o TwingateResourceAccessPtrOutput) ToTwingateResourceAccessPtrOutput() TwingateResourceAccessPtrOutput {
	return o
}

func (o TwingateResourceAccessPtrOutput) ToTwingateResourceAccessPtrOutputWithContext(ctx context.Context) TwingateResourceAccessPtrOutput {
	return o
}

func (o TwingateResourceAccessPtrOutput) Elem() TwingateResourceAccessOutput {
	return o.ApplyT(func(v *TwingateResourceAccess) TwingateResourceAccess {
		if v != nil {
			return *v
		}
		var ret TwingateResourceAccess
		return ret
	}).(TwingateResourceAccessOutput)
}

// List of Group IDs that will have permission to access the Resource.
func (o TwingateResourceAccessPtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TwingateResourceAccess) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

// List of Service Account IDs that will have permission to access the Resource.
func (o TwingateResourceAccessPtrOutput) ServiceAccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TwingateResourceAccess) []string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountIds
	}).(pulumi.StringArrayOutput)
}

type TwingateResourceProtocols struct {
	// Whether to allow ICMP (ping) traffic
	AllowIcmp *bool                        `pulumi:"allowIcmp"`
	Tcp       TwingateResourceProtocolsTcp `pulumi:"tcp"`
	Udp       TwingateResourceProtocolsUdp `pulumi:"udp"`
}

// TwingateResourceProtocolsInput is an input type that accepts TwingateResourceProtocolsArgs and TwingateResourceProtocolsOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsInput` via:
//
//	TwingateResourceProtocolsArgs{...}
type TwingateResourceProtocolsInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsOutput() TwingateResourceProtocolsOutput
	ToTwingateResourceProtocolsOutputWithContext(context.Context) TwingateResourceProtocolsOutput
}

type TwingateResourceProtocolsArgs struct {
	// Whether to allow ICMP (ping) traffic
	AllowIcmp pulumi.BoolPtrInput               `pulumi:"allowIcmp"`
	Tcp       TwingateResourceProtocolsTcpInput `pulumi:"tcp"`
	Udp       TwingateResourceProtocolsUdpInput `pulumi:"udp"`
}

func (TwingateResourceProtocolsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocols)(nil)).Elem()
}

func (i TwingateResourceProtocolsArgs) ToTwingateResourceProtocolsOutput() TwingateResourceProtocolsOutput {
	return i.ToTwingateResourceProtocolsOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsArgs) ToTwingateResourceProtocolsOutputWithContext(ctx context.Context) TwingateResourceProtocolsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsOutput)
}

func (i TwingateResourceProtocolsArgs) ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput {
	return i.ToTwingateResourceProtocolsPtrOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsArgs) ToTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsOutput).ToTwingateResourceProtocolsPtrOutputWithContext(ctx)
}

// TwingateResourceProtocolsPtrInput is an input type that accepts TwingateResourceProtocolsArgs, TwingateResourceProtocolsPtr and TwingateResourceProtocolsPtrOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsPtrInput` via:
//
//	        TwingateResourceProtocolsArgs{...}
//
//	or:
//
//	        nil
type TwingateResourceProtocolsPtrInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput
	ToTwingateResourceProtocolsPtrOutputWithContext(context.Context) TwingateResourceProtocolsPtrOutput
}

type twingateResourceProtocolsPtrType TwingateResourceProtocolsArgs

func TwingateResourceProtocolsPtr(v *TwingateResourceProtocolsArgs) TwingateResourceProtocolsPtrInput {
	return (*twingateResourceProtocolsPtrType)(v)
}

func (*twingateResourceProtocolsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocols)(nil)).Elem()
}

func (i *twingateResourceProtocolsPtrType) ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput {
	return i.ToTwingateResourceProtocolsPtrOutputWithContext(context.Background())
}

func (i *twingateResourceProtocolsPtrType) ToTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsPtrOutput)
}

type TwingateResourceProtocolsOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocols)(nil)).Elem()
}

func (o TwingateResourceProtocolsOutput) ToTwingateResourceProtocolsOutput() TwingateResourceProtocolsOutput {
	return o
}

func (o TwingateResourceProtocolsOutput) ToTwingateResourceProtocolsOutputWithContext(ctx context.Context) TwingateResourceProtocolsOutput {
	return o
}

func (o TwingateResourceProtocolsOutput) ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput {
	return o.ToTwingateResourceProtocolsPtrOutputWithContext(context.Background())
}

func (o TwingateResourceProtocolsOutput) ToTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TwingateResourceProtocols) *TwingateResourceProtocols {
		return &v
	}).(TwingateResourceProtocolsPtrOutput)
}

// Whether to allow ICMP (ping) traffic
func (o TwingateResourceProtocolsOutput) AllowIcmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TwingateResourceProtocols) *bool { return v.AllowIcmp }).(pulumi.BoolPtrOutput)
}

func (o TwingateResourceProtocolsOutput) Tcp() TwingateResourceProtocolsTcpOutput {
	return o.ApplyT(func(v TwingateResourceProtocols) TwingateResourceProtocolsTcp { return v.Tcp }).(TwingateResourceProtocolsTcpOutput)
}

func (o TwingateResourceProtocolsOutput) Udp() TwingateResourceProtocolsUdpOutput {
	return o.ApplyT(func(v TwingateResourceProtocols) TwingateResourceProtocolsUdp { return v.Udp }).(TwingateResourceProtocolsUdpOutput)
}

type TwingateResourceProtocolsPtrOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocols)(nil)).Elem()
}

func (o TwingateResourceProtocolsPtrOutput) ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput {
	return o
}

func (o TwingateResourceProtocolsPtrOutput) ToTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsPtrOutput {
	return o
}

func (o TwingateResourceProtocolsPtrOutput) Elem() TwingateResourceProtocolsOutput {
	return o.ApplyT(func(v *TwingateResourceProtocols) TwingateResourceProtocols {
		if v != nil {
			return *v
		}
		var ret TwingateResourceProtocols
		return ret
	}).(TwingateResourceProtocolsOutput)
}

// Whether to allow ICMP (ping) traffic
func (o TwingateResourceProtocolsPtrOutput) AllowIcmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocols) *bool {
		if v == nil {
			return nil
		}
		return v.AllowIcmp
	}).(pulumi.BoolPtrOutput)
}

func (o TwingateResourceProtocolsPtrOutput) Tcp() TwingateResourceProtocolsTcpPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocols) *TwingateResourceProtocolsTcp {
		if v == nil {
			return nil
		}
		return &v.Tcp
	}).(TwingateResourceProtocolsTcpPtrOutput)
}

func (o TwingateResourceProtocolsPtrOutput) Udp() TwingateResourceProtocolsUdpPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocols) *TwingateResourceProtocolsUdp {
		if v == nil {
			return nil
		}
		return &v.Udp
	}).(TwingateResourceProtocolsUdpPtrOutput)
}

type TwingateResourceProtocolsTcp struct {
	Policy string   `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// TwingateResourceProtocolsTcpInput is an input type that accepts TwingateResourceProtocolsTcpArgs and TwingateResourceProtocolsTcpOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsTcpInput` via:
//
//	TwingateResourceProtocolsTcpArgs{...}
type TwingateResourceProtocolsTcpInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsTcpOutput() TwingateResourceProtocolsTcpOutput
	ToTwingateResourceProtocolsTcpOutputWithContext(context.Context) TwingateResourceProtocolsTcpOutput
}

type TwingateResourceProtocolsTcpArgs struct {
	Policy pulumi.StringInput      `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (TwingateResourceProtocolsTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocolsTcp)(nil)).Elem()
}

func (i TwingateResourceProtocolsTcpArgs) ToTwingateResourceProtocolsTcpOutput() TwingateResourceProtocolsTcpOutput {
	return i.ToTwingateResourceProtocolsTcpOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsTcpArgs) ToTwingateResourceProtocolsTcpOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsTcpOutput)
}

func (i TwingateResourceProtocolsTcpArgs) ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput {
	return i.ToTwingateResourceProtocolsTcpPtrOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsTcpArgs) ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsTcpOutput).ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx)
}

// TwingateResourceProtocolsTcpPtrInput is an input type that accepts TwingateResourceProtocolsTcpArgs, TwingateResourceProtocolsTcpPtr and TwingateResourceProtocolsTcpPtrOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsTcpPtrInput` via:
//
//	        TwingateResourceProtocolsTcpArgs{...}
//
//	or:
//
//	        nil
type TwingateResourceProtocolsTcpPtrInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput
	ToTwingateResourceProtocolsTcpPtrOutputWithContext(context.Context) TwingateResourceProtocolsTcpPtrOutput
}

type twingateResourceProtocolsTcpPtrType TwingateResourceProtocolsTcpArgs

func TwingateResourceProtocolsTcpPtr(v *TwingateResourceProtocolsTcpArgs) TwingateResourceProtocolsTcpPtrInput {
	return (*twingateResourceProtocolsTcpPtrType)(v)
}

func (*twingateResourceProtocolsTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocolsTcp)(nil)).Elem()
}

func (i *twingateResourceProtocolsTcpPtrType) ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput {
	return i.ToTwingateResourceProtocolsTcpPtrOutputWithContext(context.Background())
}

func (i *twingateResourceProtocolsTcpPtrType) ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsTcpPtrOutput)
}

type TwingateResourceProtocolsTcpOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocolsTcp)(nil)).Elem()
}

func (o TwingateResourceProtocolsTcpOutput) ToTwingateResourceProtocolsTcpOutput() TwingateResourceProtocolsTcpOutput {
	return o
}

func (o TwingateResourceProtocolsTcpOutput) ToTwingateResourceProtocolsTcpOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpOutput {
	return o
}

func (o TwingateResourceProtocolsTcpOutput) ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput {
	return o.ToTwingateResourceProtocolsTcpPtrOutputWithContext(context.Background())
}

func (o TwingateResourceProtocolsTcpOutput) ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TwingateResourceProtocolsTcp) *TwingateResourceProtocolsTcp {
		return &v
	}).(TwingateResourceProtocolsTcpPtrOutput)
}

func (o TwingateResourceProtocolsTcpOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v TwingateResourceProtocolsTcp) string { return v.Policy }).(pulumi.StringOutput)
}

func (o TwingateResourceProtocolsTcpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TwingateResourceProtocolsTcp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type TwingateResourceProtocolsTcpPtrOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocolsTcp)(nil)).Elem()
}

func (o TwingateResourceProtocolsTcpPtrOutput) ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput {
	return o
}

func (o TwingateResourceProtocolsTcpPtrOutput) ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpPtrOutput {
	return o
}

func (o TwingateResourceProtocolsTcpPtrOutput) Elem() TwingateResourceProtocolsTcpOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsTcp) TwingateResourceProtocolsTcp {
		if v != nil {
			return *v
		}
		var ret TwingateResourceProtocolsTcp
		return ret
	}).(TwingateResourceProtocolsTcpOutput)
}

func (o TwingateResourceProtocolsTcpPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsTcp) *string {
		if v == nil {
			return nil
		}
		return &v.Policy
	}).(pulumi.StringPtrOutput)
}

func (o TwingateResourceProtocolsTcpPtrOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsTcp) []string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringArrayOutput)
}

type TwingateResourceProtocolsUdp struct {
	Policy string   `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// TwingateResourceProtocolsUdpInput is an input type that accepts TwingateResourceProtocolsUdpArgs and TwingateResourceProtocolsUdpOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsUdpInput` via:
//
//	TwingateResourceProtocolsUdpArgs{...}
type TwingateResourceProtocolsUdpInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsUdpOutput() TwingateResourceProtocolsUdpOutput
	ToTwingateResourceProtocolsUdpOutputWithContext(context.Context) TwingateResourceProtocolsUdpOutput
}

type TwingateResourceProtocolsUdpArgs struct {
	Policy pulumi.StringInput      `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (TwingateResourceProtocolsUdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocolsUdp)(nil)).Elem()
}

func (i TwingateResourceProtocolsUdpArgs) ToTwingateResourceProtocolsUdpOutput() TwingateResourceProtocolsUdpOutput {
	return i.ToTwingateResourceProtocolsUdpOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsUdpArgs) ToTwingateResourceProtocolsUdpOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsUdpOutput)
}

func (i TwingateResourceProtocolsUdpArgs) ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput {
	return i.ToTwingateResourceProtocolsUdpPtrOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsUdpArgs) ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsUdpOutput).ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx)
}

// TwingateResourceProtocolsUdpPtrInput is an input type that accepts TwingateResourceProtocolsUdpArgs, TwingateResourceProtocolsUdpPtr and TwingateResourceProtocolsUdpPtrOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsUdpPtrInput` via:
//
//	        TwingateResourceProtocolsUdpArgs{...}
//
//	or:
//
//	        nil
type TwingateResourceProtocolsUdpPtrInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput
	ToTwingateResourceProtocolsUdpPtrOutputWithContext(context.Context) TwingateResourceProtocolsUdpPtrOutput
}

type twingateResourceProtocolsUdpPtrType TwingateResourceProtocolsUdpArgs

func TwingateResourceProtocolsUdpPtr(v *TwingateResourceProtocolsUdpArgs) TwingateResourceProtocolsUdpPtrInput {
	return (*twingateResourceProtocolsUdpPtrType)(v)
}

func (*twingateResourceProtocolsUdpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocolsUdp)(nil)).Elem()
}

func (i *twingateResourceProtocolsUdpPtrType) ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput {
	return i.ToTwingateResourceProtocolsUdpPtrOutputWithContext(context.Background())
}

func (i *twingateResourceProtocolsUdpPtrType) ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsUdpPtrOutput)
}

type TwingateResourceProtocolsUdpOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsUdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocolsUdp)(nil)).Elem()
}

func (o TwingateResourceProtocolsUdpOutput) ToTwingateResourceProtocolsUdpOutput() TwingateResourceProtocolsUdpOutput {
	return o
}

func (o TwingateResourceProtocolsUdpOutput) ToTwingateResourceProtocolsUdpOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpOutput {
	return o
}

func (o TwingateResourceProtocolsUdpOutput) ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput {
	return o.ToTwingateResourceProtocolsUdpPtrOutputWithContext(context.Background())
}

func (o TwingateResourceProtocolsUdpOutput) ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TwingateResourceProtocolsUdp) *TwingateResourceProtocolsUdp {
		return &v
	}).(TwingateResourceProtocolsUdpPtrOutput)
}

func (o TwingateResourceProtocolsUdpOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v TwingateResourceProtocolsUdp) string { return v.Policy }).(pulumi.StringOutput)
}

func (o TwingateResourceProtocolsUdpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TwingateResourceProtocolsUdp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type TwingateResourceProtocolsUdpPtrOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsUdpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocolsUdp)(nil)).Elem()
}

func (o TwingateResourceProtocolsUdpPtrOutput) ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput {
	return o
}

func (o TwingateResourceProtocolsUdpPtrOutput) ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpPtrOutput {
	return o
}

func (o TwingateResourceProtocolsUdpPtrOutput) Elem() TwingateResourceProtocolsUdpOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsUdp) TwingateResourceProtocolsUdp {
		if v != nil {
			return *v
		}
		var ret TwingateResourceProtocolsUdp
		return ret
	}).(TwingateResourceProtocolsUdpOutput)
}

func (o TwingateResourceProtocolsUdpPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsUdp) *string {
		if v == nil {
			return nil
		}
		return &v.Policy
	}).(pulumi.StringPtrOutput)
}

func (o TwingateResourceProtocolsUdpPtrOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsUdp) []string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringArrayOutput)
}

type GetTwingateConnectorsConnector struct {
	// The ID of the Connector
	Id string `pulumi:"id"`
	// The Name of the Connector
	Name string `pulumi:"name"`
	// The ID of the Remote Network attached to the Connector
	RemoteNetworkId string `pulumi:"remoteNetworkId"`
}

// GetTwingateConnectorsConnectorInput is an input type that accepts GetTwingateConnectorsConnectorArgs and GetTwingateConnectorsConnectorOutput values.
// You can construct a concrete instance of `GetTwingateConnectorsConnectorInput` via:
//
//	GetTwingateConnectorsConnectorArgs{...}
type GetTwingateConnectorsConnectorInput interface {
	pulumi.Input

	ToGetTwingateConnectorsConnectorOutput() GetTwingateConnectorsConnectorOutput
	ToGetTwingateConnectorsConnectorOutputWithContext(context.Context) GetTwingateConnectorsConnectorOutput
}

type GetTwingateConnectorsConnectorArgs struct {
	// The ID of the Connector
	Id pulumi.StringInput `pulumi:"id"`
	// The Name of the Connector
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the Remote Network attached to the Connector
	RemoteNetworkId pulumi.StringInput `pulumi:"remoteNetworkId"`
}

func (GetTwingateConnectorsConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateConnectorsConnector)(nil)).Elem()
}

func (i GetTwingateConnectorsConnectorArgs) ToGetTwingateConnectorsConnectorOutput() GetTwingateConnectorsConnectorOutput {
	return i.ToGetTwingateConnectorsConnectorOutputWithContext(context.Background())
}

func (i GetTwingateConnectorsConnectorArgs) ToGetTwingateConnectorsConnectorOutputWithContext(ctx context.Context) GetTwingateConnectorsConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateConnectorsConnectorOutput)
}

// GetTwingateConnectorsConnectorArrayInput is an input type that accepts GetTwingateConnectorsConnectorArray and GetTwingateConnectorsConnectorArrayOutput values.
// You can construct a concrete instance of `GetTwingateConnectorsConnectorArrayInput` via:
//
//	GetTwingateConnectorsConnectorArray{ GetTwingateConnectorsConnectorArgs{...} }
type GetTwingateConnectorsConnectorArrayInput interface {
	pulumi.Input

	ToGetTwingateConnectorsConnectorArrayOutput() GetTwingateConnectorsConnectorArrayOutput
	ToGetTwingateConnectorsConnectorArrayOutputWithContext(context.Context) GetTwingateConnectorsConnectorArrayOutput
}

type GetTwingateConnectorsConnectorArray []GetTwingateConnectorsConnectorInput

func (GetTwingateConnectorsConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateConnectorsConnector)(nil)).Elem()
}

func (i GetTwingateConnectorsConnectorArray) ToGetTwingateConnectorsConnectorArrayOutput() GetTwingateConnectorsConnectorArrayOutput {
	return i.ToGetTwingateConnectorsConnectorArrayOutputWithContext(context.Background())
}

func (i GetTwingateConnectorsConnectorArray) ToGetTwingateConnectorsConnectorArrayOutputWithContext(ctx context.Context) GetTwingateConnectorsConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateConnectorsConnectorArrayOutput)
}

type GetTwingateConnectorsConnectorOutput struct{ *pulumi.OutputState }

func (GetTwingateConnectorsConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateConnectorsConnector)(nil)).Elem()
}

func (o GetTwingateConnectorsConnectorOutput) ToGetTwingateConnectorsConnectorOutput() GetTwingateConnectorsConnectorOutput {
	return o
}

func (o GetTwingateConnectorsConnectorOutput) ToGetTwingateConnectorsConnectorOutputWithContext(ctx context.Context) GetTwingateConnectorsConnectorOutput {
	return o
}

// The ID of the Connector
func (o GetTwingateConnectorsConnectorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateConnectorsConnector) string { return v.Id }).(pulumi.StringOutput)
}

// The Name of the Connector
func (o GetTwingateConnectorsConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateConnectorsConnector) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the Remote Network attached to the Connector
func (o GetTwingateConnectorsConnectorOutput) RemoteNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateConnectorsConnector) string { return v.RemoteNetworkId }).(pulumi.StringOutput)
}

type GetTwingateConnectorsConnectorArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateConnectorsConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateConnectorsConnector)(nil)).Elem()
}

func (o GetTwingateConnectorsConnectorArrayOutput) ToGetTwingateConnectorsConnectorArrayOutput() GetTwingateConnectorsConnectorArrayOutput {
	return o
}

func (o GetTwingateConnectorsConnectorArrayOutput) ToGetTwingateConnectorsConnectorArrayOutputWithContext(ctx context.Context) GetTwingateConnectorsConnectorArrayOutput {
	return o
}

func (o GetTwingateConnectorsConnectorArrayOutput) Index(i pulumi.IntInput) GetTwingateConnectorsConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateConnectorsConnector {
		return vs[0].([]GetTwingateConnectorsConnector)[vs[1].(int)]
	}).(GetTwingateConnectorsConnectorOutput)
}

type GetTwingateGroupsGroup struct {
	// The ID of the Group
	Id string `pulumi:"id"`
	// Indicates if the Group is active
	IsActive bool `pulumi:"isActive"`
	// The name of the Group
	Name string `pulumi:"name"`
	// The type of the Group
	Type string `pulumi:"type"`
}

// GetTwingateGroupsGroupInput is an input type that accepts GetTwingateGroupsGroupArgs and GetTwingateGroupsGroupOutput values.
// You can construct a concrete instance of `GetTwingateGroupsGroupInput` via:
//
//	GetTwingateGroupsGroupArgs{...}
type GetTwingateGroupsGroupInput interface {
	pulumi.Input

	ToGetTwingateGroupsGroupOutput() GetTwingateGroupsGroupOutput
	ToGetTwingateGroupsGroupOutputWithContext(context.Context) GetTwingateGroupsGroupOutput
}

type GetTwingateGroupsGroupArgs struct {
	// The ID of the Group
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates if the Group is active
	IsActive pulumi.BoolInput `pulumi:"isActive"`
	// The name of the Group
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the Group
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetTwingateGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateGroupsGroup)(nil)).Elem()
}

func (i GetTwingateGroupsGroupArgs) ToGetTwingateGroupsGroupOutput() GetTwingateGroupsGroupOutput {
	return i.ToGetTwingateGroupsGroupOutputWithContext(context.Background())
}

func (i GetTwingateGroupsGroupArgs) ToGetTwingateGroupsGroupOutputWithContext(ctx context.Context) GetTwingateGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateGroupsGroupOutput)
}

// GetTwingateGroupsGroupArrayInput is an input type that accepts GetTwingateGroupsGroupArray and GetTwingateGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetTwingateGroupsGroupArrayInput` via:
//
//	GetTwingateGroupsGroupArray{ GetTwingateGroupsGroupArgs{...} }
type GetTwingateGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetTwingateGroupsGroupArrayOutput() GetTwingateGroupsGroupArrayOutput
	ToGetTwingateGroupsGroupArrayOutputWithContext(context.Context) GetTwingateGroupsGroupArrayOutput
}

type GetTwingateGroupsGroupArray []GetTwingateGroupsGroupInput

func (GetTwingateGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateGroupsGroup)(nil)).Elem()
}

func (i GetTwingateGroupsGroupArray) ToGetTwingateGroupsGroupArrayOutput() GetTwingateGroupsGroupArrayOutput {
	return i.ToGetTwingateGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetTwingateGroupsGroupArray) ToGetTwingateGroupsGroupArrayOutputWithContext(ctx context.Context) GetTwingateGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateGroupsGroupArrayOutput)
}

type GetTwingateGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetTwingateGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateGroupsGroup)(nil)).Elem()
}

func (o GetTwingateGroupsGroupOutput) ToGetTwingateGroupsGroupOutput() GetTwingateGroupsGroupOutput {
	return o
}

func (o GetTwingateGroupsGroupOutput) ToGetTwingateGroupsGroupOutputWithContext(ctx context.Context) GetTwingateGroupsGroupOutput {
	return o
}

// The ID of the Group
func (o GetTwingateGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates if the Group is active
func (o GetTwingateGroupsGroupOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTwingateGroupsGroup) bool { return v.IsActive }).(pulumi.BoolOutput)
}

// The name of the Group
func (o GetTwingateGroupsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateGroupsGroup) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the Group
func (o GetTwingateGroupsGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateGroupsGroup) string { return v.Type }).(pulumi.StringOutput)
}

type GetTwingateGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateGroupsGroup)(nil)).Elem()
}

func (o GetTwingateGroupsGroupArrayOutput) ToGetTwingateGroupsGroupArrayOutput() GetTwingateGroupsGroupArrayOutput {
	return o
}

func (o GetTwingateGroupsGroupArrayOutput) ToGetTwingateGroupsGroupArrayOutputWithContext(ctx context.Context) GetTwingateGroupsGroupArrayOutput {
	return o
}

func (o GetTwingateGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetTwingateGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateGroupsGroup {
		return vs[0].([]GetTwingateGroupsGroup)[vs[1].(int)]
	}).(GetTwingateGroupsGroupOutput)
}

type GetTwingateRemoteNetworksRemoteNetwork struct {
	// The ID of the Remote Network
	Id string `pulumi:"id"`
	// The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.
	Location string `pulumi:"location"`
	// The name of the Remote Network
	Name string `pulumi:"name"`
}

// GetTwingateRemoteNetworksRemoteNetworkInput is an input type that accepts GetTwingateRemoteNetworksRemoteNetworkArgs and GetTwingateRemoteNetworksRemoteNetworkOutput values.
// You can construct a concrete instance of `GetTwingateRemoteNetworksRemoteNetworkInput` via:
//
//	GetTwingateRemoteNetworksRemoteNetworkArgs{...}
type GetTwingateRemoteNetworksRemoteNetworkInput interface {
	pulumi.Input

	ToGetTwingateRemoteNetworksRemoteNetworkOutput() GetTwingateRemoteNetworksRemoteNetworkOutput
	ToGetTwingateRemoteNetworksRemoteNetworkOutputWithContext(context.Context) GetTwingateRemoteNetworksRemoteNetworkOutput
}

type GetTwingateRemoteNetworksRemoteNetworkArgs struct {
	// The ID of the Remote Network
	Id pulumi.StringInput `pulumi:"id"`
	// The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.
	Location pulumi.StringInput `pulumi:"location"`
	// The name of the Remote Network
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetTwingateRemoteNetworksRemoteNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateRemoteNetworksRemoteNetwork)(nil)).Elem()
}

func (i GetTwingateRemoteNetworksRemoteNetworkArgs) ToGetTwingateRemoteNetworksRemoteNetworkOutput() GetTwingateRemoteNetworksRemoteNetworkOutput {
	return i.ToGetTwingateRemoteNetworksRemoteNetworkOutputWithContext(context.Background())
}

func (i GetTwingateRemoteNetworksRemoteNetworkArgs) ToGetTwingateRemoteNetworksRemoteNetworkOutputWithContext(ctx context.Context) GetTwingateRemoteNetworksRemoteNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateRemoteNetworksRemoteNetworkOutput)
}

// GetTwingateRemoteNetworksRemoteNetworkArrayInput is an input type that accepts GetTwingateRemoteNetworksRemoteNetworkArray and GetTwingateRemoteNetworksRemoteNetworkArrayOutput values.
// You can construct a concrete instance of `GetTwingateRemoteNetworksRemoteNetworkArrayInput` via:
//
//	GetTwingateRemoteNetworksRemoteNetworkArray{ GetTwingateRemoteNetworksRemoteNetworkArgs{...} }
type GetTwingateRemoteNetworksRemoteNetworkArrayInput interface {
	pulumi.Input

	ToGetTwingateRemoteNetworksRemoteNetworkArrayOutput() GetTwingateRemoteNetworksRemoteNetworkArrayOutput
	ToGetTwingateRemoteNetworksRemoteNetworkArrayOutputWithContext(context.Context) GetTwingateRemoteNetworksRemoteNetworkArrayOutput
}

type GetTwingateRemoteNetworksRemoteNetworkArray []GetTwingateRemoteNetworksRemoteNetworkInput

func (GetTwingateRemoteNetworksRemoteNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateRemoteNetworksRemoteNetwork)(nil)).Elem()
}

func (i GetTwingateRemoteNetworksRemoteNetworkArray) ToGetTwingateRemoteNetworksRemoteNetworkArrayOutput() GetTwingateRemoteNetworksRemoteNetworkArrayOutput {
	return i.ToGetTwingateRemoteNetworksRemoteNetworkArrayOutputWithContext(context.Background())
}

func (i GetTwingateRemoteNetworksRemoteNetworkArray) ToGetTwingateRemoteNetworksRemoteNetworkArrayOutputWithContext(ctx context.Context) GetTwingateRemoteNetworksRemoteNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateRemoteNetworksRemoteNetworkArrayOutput)
}

type GetTwingateRemoteNetworksRemoteNetworkOutput struct{ *pulumi.OutputState }

func (GetTwingateRemoteNetworksRemoteNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateRemoteNetworksRemoteNetwork)(nil)).Elem()
}

func (o GetTwingateRemoteNetworksRemoteNetworkOutput) ToGetTwingateRemoteNetworksRemoteNetworkOutput() GetTwingateRemoteNetworksRemoteNetworkOutput {
	return o
}

func (o GetTwingateRemoteNetworksRemoteNetworkOutput) ToGetTwingateRemoteNetworksRemoteNetworkOutputWithContext(ctx context.Context) GetTwingateRemoteNetworksRemoteNetworkOutput {
	return o
}

// The ID of the Remote Network
func (o GetTwingateRemoteNetworksRemoteNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateRemoteNetworksRemoteNetwork) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.
func (o GetTwingateRemoteNetworksRemoteNetworkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateRemoteNetworksRemoteNetwork) string { return v.Location }).(pulumi.StringOutput)
}

// The name of the Remote Network
func (o GetTwingateRemoteNetworksRemoteNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateRemoteNetworksRemoteNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetTwingateRemoteNetworksRemoteNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateRemoteNetworksRemoteNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateRemoteNetworksRemoteNetwork)(nil)).Elem()
}

func (o GetTwingateRemoteNetworksRemoteNetworkArrayOutput) ToGetTwingateRemoteNetworksRemoteNetworkArrayOutput() GetTwingateRemoteNetworksRemoteNetworkArrayOutput {
	return o
}

func (o GetTwingateRemoteNetworksRemoteNetworkArrayOutput) ToGetTwingateRemoteNetworksRemoteNetworkArrayOutputWithContext(ctx context.Context) GetTwingateRemoteNetworksRemoteNetworkArrayOutput {
	return o
}

func (o GetTwingateRemoteNetworksRemoteNetworkArrayOutput) Index(i pulumi.IntInput) GetTwingateRemoteNetworksRemoteNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateRemoteNetworksRemoteNetwork {
		return vs[0].([]GetTwingateRemoteNetworksRemoteNetwork)[vs[1].(int)]
	}).(GetTwingateRemoteNetworksRemoteNetworkOutput)
}

type GetTwingateResourceProtocol struct {
	// Whether to allow ICMP (ping) traffic
	AllowIcmp bool                             `pulumi:"allowIcmp"`
	Tcps      []GetTwingateResourceProtocolTcp `pulumi:"tcps"`
	Udps      []GetTwingateResourceProtocolUdp `pulumi:"udps"`
}

// GetTwingateResourceProtocolInput is an input type that accepts GetTwingateResourceProtocolArgs and GetTwingateResourceProtocolOutput values.
// You can construct a concrete instance of `GetTwingateResourceProtocolInput` via:
//
//	GetTwingateResourceProtocolArgs{...}
type GetTwingateResourceProtocolInput interface {
	pulumi.Input

	ToGetTwingateResourceProtocolOutput() GetTwingateResourceProtocolOutput
	ToGetTwingateResourceProtocolOutputWithContext(context.Context) GetTwingateResourceProtocolOutput
}

type GetTwingateResourceProtocolArgs struct {
	// Whether to allow ICMP (ping) traffic
	AllowIcmp pulumi.BoolInput                         `pulumi:"allowIcmp"`
	Tcps      GetTwingateResourceProtocolTcpArrayInput `pulumi:"tcps"`
	Udps      GetTwingateResourceProtocolUdpArrayInput `pulumi:"udps"`
}

func (GetTwingateResourceProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourceProtocol)(nil)).Elem()
}

func (i GetTwingateResourceProtocolArgs) ToGetTwingateResourceProtocolOutput() GetTwingateResourceProtocolOutput {
	return i.ToGetTwingateResourceProtocolOutputWithContext(context.Background())
}

func (i GetTwingateResourceProtocolArgs) ToGetTwingateResourceProtocolOutputWithContext(ctx context.Context) GetTwingateResourceProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolOutput)
}

// GetTwingateResourceProtocolArrayInput is an input type that accepts GetTwingateResourceProtocolArray and GetTwingateResourceProtocolArrayOutput values.
// You can construct a concrete instance of `GetTwingateResourceProtocolArrayInput` via:
//
//	GetTwingateResourceProtocolArray{ GetTwingateResourceProtocolArgs{...} }
type GetTwingateResourceProtocolArrayInput interface {
	pulumi.Input

	ToGetTwingateResourceProtocolArrayOutput() GetTwingateResourceProtocolArrayOutput
	ToGetTwingateResourceProtocolArrayOutputWithContext(context.Context) GetTwingateResourceProtocolArrayOutput
}

type GetTwingateResourceProtocolArray []GetTwingateResourceProtocolInput

func (GetTwingateResourceProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourceProtocol)(nil)).Elem()
}

func (i GetTwingateResourceProtocolArray) ToGetTwingateResourceProtocolArrayOutput() GetTwingateResourceProtocolArrayOutput {
	return i.ToGetTwingateResourceProtocolArrayOutputWithContext(context.Background())
}

func (i GetTwingateResourceProtocolArray) ToGetTwingateResourceProtocolArrayOutputWithContext(ctx context.Context) GetTwingateResourceProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolArrayOutput)
}

type GetTwingateResourceProtocolOutput struct{ *pulumi.OutputState }

func (GetTwingateResourceProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourceProtocol)(nil)).Elem()
}

func (o GetTwingateResourceProtocolOutput) ToGetTwingateResourceProtocolOutput() GetTwingateResourceProtocolOutput {
	return o
}

func (o GetTwingateResourceProtocolOutput) ToGetTwingateResourceProtocolOutputWithContext(ctx context.Context) GetTwingateResourceProtocolOutput {
	return o
}

// Whether to allow ICMP (ping) traffic
func (o GetTwingateResourceProtocolOutput) AllowIcmp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocol) bool { return v.AllowIcmp }).(pulumi.BoolOutput)
}

func (o GetTwingateResourceProtocolOutput) Tcps() GetTwingateResourceProtocolTcpArrayOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocol) []GetTwingateResourceProtocolTcp { return v.Tcps }).(GetTwingateResourceProtocolTcpArrayOutput)
}

func (o GetTwingateResourceProtocolOutput) Udps() GetTwingateResourceProtocolUdpArrayOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocol) []GetTwingateResourceProtocolUdp { return v.Udps }).(GetTwingateResourceProtocolUdpArrayOutput)
}

type GetTwingateResourceProtocolArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateResourceProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourceProtocol)(nil)).Elem()
}

func (o GetTwingateResourceProtocolArrayOutput) ToGetTwingateResourceProtocolArrayOutput() GetTwingateResourceProtocolArrayOutput {
	return o
}

func (o GetTwingateResourceProtocolArrayOutput) ToGetTwingateResourceProtocolArrayOutputWithContext(ctx context.Context) GetTwingateResourceProtocolArrayOutput {
	return o
}

func (o GetTwingateResourceProtocolArrayOutput) Index(i pulumi.IntInput) GetTwingateResourceProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateResourceProtocol {
		return vs[0].([]GetTwingateResourceProtocol)[vs[1].(int)]
	}).(GetTwingateResourceProtocolOutput)
}

type GetTwingateResourceProtocolTcp struct {
	Policy string   `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// GetTwingateResourceProtocolTcpInput is an input type that accepts GetTwingateResourceProtocolTcpArgs and GetTwingateResourceProtocolTcpOutput values.
// You can construct a concrete instance of `GetTwingateResourceProtocolTcpInput` via:
//
//	GetTwingateResourceProtocolTcpArgs{...}
type GetTwingateResourceProtocolTcpInput interface {
	pulumi.Input

	ToGetTwingateResourceProtocolTcpOutput() GetTwingateResourceProtocolTcpOutput
	ToGetTwingateResourceProtocolTcpOutputWithContext(context.Context) GetTwingateResourceProtocolTcpOutput
}

type GetTwingateResourceProtocolTcpArgs struct {
	Policy pulumi.StringInput      `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (GetTwingateResourceProtocolTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourceProtocolTcp)(nil)).Elem()
}

func (i GetTwingateResourceProtocolTcpArgs) ToGetTwingateResourceProtocolTcpOutput() GetTwingateResourceProtocolTcpOutput {
	return i.ToGetTwingateResourceProtocolTcpOutputWithContext(context.Background())
}

func (i GetTwingateResourceProtocolTcpArgs) ToGetTwingateResourceProtocolTcpOutputWithContext(ctx context.Context) GetTwingateResourceProtocolTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolTcpOutput)
}

// GetTwingateResourceProtocolTcpArrayInput is an input type that accepts GetTwingateResourceProtocolTcpArray and GetTwingateResourceProtocolTcpArrayOutput values.
// You can construct a concrete instance of `GetTwingateResourceProtocolTcpArrayInput` via:
//
//	GetTwingateResourceProtocolTcpArray{ GetTwingateResourceProtocolTcpArgs{...} }
type GetTwingateResourceProtocolTcpArrayInput interface {
	pulumi.Input

	ToGetTwingateResourceProtocolTcpArrayOutput() GetTwingateResourceProtocolTcpArrayOutput
	ToGetTwingateResourceProtocolTcpArrayOutputWithContext(context.Context) GetTwingateResourceProtocolTcpArrayOutput
}

type GetTwingateResourceProtocolTcpArray []GetTwingateResourceProtocolTcpInput

func (GetTwingateResourceProtocolTcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourceProtocolTcp)(nil)).Elem()
}

func (i GetTwingateResourceProtocolTcpArray) ToGetTwingateResourceProtocolTcpArrayOutput() GetTwingateResourceProtocolTcpArrayOutput {
	return i.ToGetTwingateResourceProtocolTcpArrayOutputWithContext(context.Background())
}

func (i GetTwingateResourceProtocolTcpArray) ToGetTwingateResourceProtocolTcpArrayOutputWithContext(ctx context.Context) GetTwingateResourceProtocolTcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolTcpArrayOutput)
}

type GetTwingateResourceProtocolTcpOutput struct{ *pulumi.OutputState }

func (GetTwingateResourceProtocolTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourceProtocolTcp)(nil)).Elem()
}

func (o GetTwingateResourceProtocolTcpOutput) ToGetTwingateResourceProtocolTcpOutput() GetTwingateResourceProtocolTcpOutput {
	return o
}

func (o GetTwingateResourceProtocolTcpOutput) ToGetTwingateResourceProtocolTcpOutputWithContext(ctx context.Context) GetTwingateResourceProtocolTcpOutput {
	return o
}

func (o GetTwingateResourceProtocolTcpOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocolTcp) string { return v.Policy }).(pulumi.StringOutput)
}

func (o GetTwingateResourceProtocolTcpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocolTcp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type GetTwingateResourceProtocolTcpArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateResourceProtocolTcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourceProtocolTcp)(nil)).Elem()
}

func (o GetTwingateResourceProtocolTcpArrayOutput) ToGetTwingateResourceProtocolTcpArrayOutput() GetTwingateResourceProtocolTcpArrayOutput {
	return o
}

func (o GetTwingateResourceProtocolTcpArrayOutput) ToGetTwingateResourceProtocolTcpArrayOutputWithContext(ctx context.Context) GetTwingateResourceProtocolTcpArrayOutput {
	return o
}

func (o GetTwingateResourceProtocolTcpArrayOutput) Index(i pulumi.IntInput) GetTwingateResourceProtocolTcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateResourceProtocolTcp {
		return vs[0].([]GetTwingateResourceProtocolTcp)[vs[1].(int)]
	}).(GetTwingateResourceProtocolTcpOutput)
}

type GetTwingateResourceProtocolUdp struct {
	Policy string   `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// GetTwingateResourceProtocolUdpInput is an input type that accepts GetTwingateResourceProtocolUdpArgs and GetTwingateResourceProtocolUdpOutput values.
// You can construct a concrete instance of `GetTwingateResourceProtocolUdpInput` via:
//
//	GetTwingateResourceProtocolUdpArgs{...}
type GetTwingateResourceProtocolUdpInput interface {
	pulumi.Input

	ToGetTwingateResourceProtocolUdpOutput() GetTwingateResourceProtocolUdpOutput
	ToGetTwingateResourceProtocolUdpOutputWithContext(context.Context) GetTwingateResourceProtocolUdpOutput
}

type GetTwingateResourceProtocolUdpArgs struct {
	Policy pulumi.StringInput      `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (GetTwingateResourceProtocolUdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourceProtocolUdp)(nil)).Elem()
}

func (i GetTwingateResourceProtocolUdpArgs) ToGetTwingateResourceProtocolUdpOutput() GetTwingateResourceProtocolUdpOutput {
	return i.ToGetTwingateResourceProtocolUdpOutputWithContext(context.Background())
}

func (i GetTwingateResourceProtocolUdpArgs) ToGetTwingateResourceProtocolUdpOutputWithContext(ctx context.Context) GetTwingateResourceProtocolUdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolUdpOutput)
}

// GetTwingateResourceProtocolUdpArrayInput is an input type that accepts GetTwingateResourceProtocolUdpArray and GetTwingateResourceProtocolUdpArrayOutput values.
// You can construct a concrete instance of `GetTwingateResourceProtocolUdpArrayInput` via:
//
//	GetTwingateResourceProtocolUdpArray{ GetTwingateResourceProtocolUdpArgs{...} }
type GetTwingateResourceProtocolUdpArrayInput interface {
	pulumi.Input

	ToGetTwingateResourceProtocolUdpArrayOutput() GetTwingateResourceProtocolUdpArrayOutput
	ToGetTwingateResourceProtocolUdpArrayOutputWithContext(context.Context) GetTwingateResourceProtocolUdpArrayOutput
}

type GetTwingateResourceProtocolUdpArray []GetTwingateResourceProtocolUdpInput

func (GetTwingateResourceProtocolUdpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourceProtocolUdp)(nil)).Elem()
}

func (i GetTwingateResourceProtocolUdpArray) ToGetTwingateResourceProtocolUdpArrayOutput() GetTwingateResourceProtocolUdpArrayOutput {
	return i.ToGetTwingateResourceProtocolUdpArrayOutputWithContext(context.Background())
}

func (i GetTwingateResourceProtocolUdpArray) ToGetTwingateResourceProtocolUdpArrayOutputWithContext(ctx context.Context) GetTwingateResourceProtocolUdpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolUdpArrayOutput)
}

type GetTwingateResourceProtocolUdpOutput struct{ *pulumi.OutputState }

func (GetTwingateResourceProtocolUdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourceProtocolUdp)(nil)).Elem()
}

func (o GetTwingateResourceProtocolUdpOutput) ToGetTwingateResourceProtocolUdpOutput() GetTwingateResourceProtocolUdpOutput {
	return o
}

func (o GetTwingateResourceProtocolUdpOutput) ToGetTwingateResourceProtocolUdpOutputWithContext(ctx context.Context) GetTwingateResourceProtocolUdpOutput {
	return o
}

func (o GetTwingateResourceProtocolUdpOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocolUdp) string { return v.Policy }).(pulumi.StringOutput)
}

func (o GetTwingateResourceProtocolUdpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocolUdp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type GetTwingateResourceProtocolUdpArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateResourceProtocolUdpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourceProtocolUdp)(nil)).Elem()
}

func (o GetTwingateResourceProtocolUdpArrayOutput) ToGetTwingateResourceProtocolUdpArrayOutput() GetTwingateResourceProtocolUdpArrayOutput {
	return o
}

func (o GetTwingateResourceProtocolUdpArrayOutput) ToGetTwingateResourceProtocolUdpArrayOutputWithContext(ctx context.Context) GetTwingateResourceProtocolUdpArrayOutput {
	return o
}

func (o GetTwingateResourceProtocolUdpArrayOutput) Index(i pulumi.IntInput) GetTwingateResourceProtocolUdpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateResourceProtocolUdp {
		return vs[0].([]GetTwingateResourceProtocolUdp)[vs[1].(int)]
	}).(GetTwingateResourceProtocolUdpOutput)
}

type GetTwingateResourcesResource struct {
	// The Resource's IP/CIDR or FQDN/DNS zone
	Address string `pulumi:"address"`
	// The id of the Resource
	Id string `pulumi:"id"`
	// The name of the Resource
	Name string `pulumi:"name"`
	// Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no restriction, and all protocols and ports are allowed.
	Protocols []GetTwingateResourcesResourceProtocol `pulumi:"protocols"`
	// Remote Network ID where the Resource lives
	RemoteNetworkId string `pulumi:"remoteNetworkId"`
}

// GetTwingateResourcesResourceInput is an input type that accepts GetTwingateResourcesResourceArgs and GetTwingateResourcesResourceOutput values.
// You can construct a concrete instance of `GetTwingateResourcesResourceInput` via:
//
//	GetTwingateResourcesResourceArgs{...}
type GetTwingateResourcesResourceInput interface {
	pulumi.Input

	ToGetTwingateResourcesResourceOutput() GetTwingateResourcesResourceOutput
	ToGetTwingateResourcesResourceOutputWithContext(context.Context) GetTwingateResourcesResourceOutput
}

type GetTwingateResourcesResourceArgs struct {
	// The Resource's IP/CIDR or FQDN/DNS zone
	Address pulumi.StringInput `pulumi:"address"`
	// The id of the Resource
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the Resource
	Name pulumi.StringInput `pulumi:"name"`
	// Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no restriction, and all protocols and ports are allowed.
	Protocols GetTwingateResourcesResourceProtocolArrayInput `pulumi:"protocols"`
	// Remote Network ID where the Resource lives
	RemoteNetworkId pulumi.StringInput `pulumi:"remoteNetworkId"`
}

func (GetTwingateResourcesResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResource)(nil)).Elem()
}

func (i GetTwingateResourcesResourceArgs) ToGetTwingateResourcesResourceOutput() GetTwingateResourcesResourceOutput {
	return i.ToGetTwingateResourcesResourceOutputWithContext(context.Background())
}

func (i GetTwingateResourcesResourceArgs) ToGetTwingateResourcesResourceOutputWithContext(ctx context.Context) GetTwingateResourcesResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourcesResourceOutput)
}

// GetTwingateResourcesResourceArrayInput is an input type that accepts GetTwingateResourcesResourceArray and GetTwingateResourcesResourceArrayOutput values.
// You can construct a concrete instance of `GetTwingateResourcesResourceArrayInput` via:
//
//	GetTwingateResourcesResourceArray{ GetTwingateResourcesResourceArgs{...} }
type GetTwingateResourcesResourceArrayInput interface {
	pulumi.Input

	ToGetTwingateResourcesResourceArrayOutput() GetTwingateResourcesResourceArrayOutput
	ToGetTwingateResourcesResourceArrayOutputWithContext(context.Context) GetTwingateResourcesResourceArrayOutput
}

type GetTwingateResourcesResourceArray []GetTwingateResourcesResourceInput

func (GetTwingateResourcesResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourcesResource)(nil)).Elem()
}

func (i GetTwingateResourcesResourceArray) ToGetTwingateResourcesResourceArrayOutput() GetTwingateResourcesResourceArrayOutput {
	return i.ToGetTwingateResourcesResourceArrayOutputWithContext(context.Background())
}

func (i GetTwingateResourcesResourceArray) ToGetTwingateResourcesResourceArrayOutputWithContext(ctx context.Context) GetTwingateResourcesResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourcesResourceArrayOutput)
}

type GetTwingateResourcesResourceOutput struct{ *pulumi.OutputState }

func (GetTwingateResourcesResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResource)(nil)).Elem()
}

func (o GetTwingateResourcesResourceOutput) ToGetTwingateResourcesResourceOutput() GetTwingateResourcesResourceOutput {
	return o
}

func (o GetTwingateResourcesResourceOutput) ToGetTwingateResourcesResourceOutputWithContext(ctx context.Context) GetTwingateResourcesResourceOutput {
	return o
}

// The Resource's IP/CIDR or FQDN/DNS zone
func (o GetTwingateResourcesResourceOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourcesResource) string { return v.Address }).(pulumi.StringOutput)
}

// The id of the Resource
func (o GetTwingateResourcesResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourcesResource) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Resource
func (o GetTwingateResourcesResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourcesResource) string { return v.Name }).(pulumi.StringOutput)
}

// Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no restriction, and all protocols and ports are allowed.
func (o GetTwingateResourcesResourceOutput) Protocols() GetTwingateResourcesResourceProtocolArrayOutput {
	return o.ApplyT(func(v GetTwingateResourcesResource) []GetTwingateResourcesResourceProtocol { return v.Protocols }).(GetTwingateResourcesResourceProtocolArrayOutput)
}

// Remote Network ID where the Resource lives
func (o GetTwingateResourcesResourceOutput) RemoteNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourcesResource) string { return v.RemoteNetworkId }).(pulumi.StringOutput)
}

type GetTwingateResourcesResourceArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateResourcesResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourcesResource)(nil)).Elem()
}

func (o GetTwingateResourcesResourceArrayOutput) ToGetTwingateResourcesResourceArrayOutput() GetTwingateResourcesResourceArrayOutput {
	return o
}

func (o GetTwingateResourcesResourceArrayOutput) ToGetTwingateResourcesResourceArrayOutputWithContext(ctx context.Context) GetTwingateResourcesResourceArrayOutput {
	return o
}

func (o GetTwingateResourcesResourceArrayOutput) Index(i pulumi.IntInput) GetTwingateResourcesResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateResourcesResource {
		return vs[0].([]GetTwingateResourcesResource)[vs[1].(int)]
	}).(GetTwingateResourcesResourceOutput)
}

type GetTwingateResourcesResourceProtocol struct {
	AllowIcmp bool                                      `pulumi:"allowIcmp"`
	Tcps      []GetTwingateResourcesResourceProtocolTcp `pulumi:"tcps"`
	Udps      []GetTwingateResourcesResourceProtocolUdp `pulumi:"udps"`
}

// GetTwingateResourcesResourceProtocolInput is an input type that accepts GetTwingateResourcesResourceProtocolArgs and GetTwingateResourcesResourceProtocolOutput values.
// You can construct a concrete instance of `GetTwingateResourcesResourceProtocolInput` via:
//
//	GetTwingateResourcesResourceProtocolArgs{...}
type GetTwingateResourcesResourceProtocolInput interface {
	pulumi.Input

	ToGetTwingateResourcesResourceProtocolOutput() GetTwingateResourcesResourceProtocolOutput
	ToGetTwingateResourcesResourceProtocolOutputWithContext(context.Context) GetTwingateResourcesResourceProtocolOutput
}

type GetTwingateResourcesResourceProtocolArgs struct {
	AllowIcmp pulumi.BoolInput                                  `pulumi:"allowIcmp"`
	Tcps      GetTwingateResourcesResourceProtocolTcpArrayInput `pulumi:"tcps"`
	Udps      GetTwingateResourcesResourceProtocolUdpArrayInput `pulumi:"udps"`
}

func (GetTwingateResourcesResourceProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResourceProtocol)(nil)).Elem()
}

func (i GetTwingateResourcesResourceProtocolArgs) ToGetTwingateResourcesResourceProtocolOutput() GetTwingateResourcesResourceProtocolOutput {
	return i.ToGetTwingateResourcesResourceProtocolOutputWithContext(context.Background())
}

func (i GetTwingateResourcesResourceProtocolArgs) ToGetTwingateResourcesResourceProtocolOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourcesResourceProtocolOutput)
}

// GetTwingateResourcesResourceProtocolArrayInput is an input type that accepts GetTwingateResourcesResourceProtocolArray and GetTwingateResourcesResourceProtocolArrayOutput values.
// You can construct a concrete instance of `GetTwingateResourcesResourceProtocolArrayInput` via:
//
//	GetTwingateResourcesResourceProtocolArray{ GetTwingateResourcesResourceProtocolArgs{...} }
type GetTwingateResourcesResourceProtocolArrayInput interface {
	pulumi.Input

	ToGetTwingateResourcesResourceProtocolArrayOutput() GetTwingateResourcesResourceProtocolArrayOutput
	ToGetTwingateResourcesResourceProtocolArrayOutputWithContext(context.Context) GetTwingateResourcesResourceProtocolArrayOutput
}

type GetTwingateResourcesResourceProtocolArray []GetTwingateResourcesResourceProtocolInput

func (GetTwingateResourcesResourceProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourcesResourceProtocol)(nil)).Elem()
}

func (i GetTwingateResourcesResourceProtocolArray) ToGetTwingateResourcesResourceProtocolArrayOutput() GetTwingateResourcesResourceProtocolArrayOutput {
	return i.ToGetTwingateResourcesResourceProtocolArrayOutputWithContext(context.Background())
}

func (i GetTwingateResourcesResourceProtocolArray) ToGetTwingateResourcesResourceProtocolArrayOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourcesResourceProtocolArrayOutput)
}

type GetTwingateResourcesResourceProtocolOutput struct{ *pulumi.OutputState }

func (GetTwingateResourcesResourceProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResourceProtocol)(nil)).Elem()
}

func (o GetTwingateResourcesResourceProtocolOutput) ToGetTwingateResourcesResourceProtocolOutput() GetTwingateResourcesResourceProtocolOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolOutput) ToGetTwingateResourcesResourceProtocolOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolOutput) AllowIcmp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocol) bool { return v.AllowIcmp }).(pulumi.BoolOutput)
}

func (o GetTwingateResourcesResourceProtocolOutput) Tcps() GetTwingateResourcesResourceProtocolTcpArrayOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocol) []GetTwingateResourcesResourceProtocolTcp { return v.Tcps }).(GetTwingateResourcesResourceProtocolTcpArrayOutput)
}

func (o GetTwingateResourcesResourceProtocolOutput) Udps() GetTwingateResourcesResourceProtocolUdpArrayOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocol) []GetTwingateResourcesResourceProtocolUdp { return v.Udps }).(GetTwingateResourcesResourceProtocolUdpArrayOutput)
}

type GetTwingateResourcesResourceProtocolArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateResourcesResourceProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourcesResourceProtocol)(nil)).Elem()
}

func (o GetTwingateResourcesResourceProtocolArrayOutput) ToGetTwingateResourcesResourceProtocolArrayOutput() GetTwingateResourcesResourceProtocolArrayOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolArrayOutput) ToGetTwingateResourcesResourceProtocolArrayOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolArrayOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolArrayOutput) Index(i pulumi.IntInput) GetTwingateResourcesResourceProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateResourcesResourceProtocol {
		return vs[0].([]GetTwingateResourcesResourceProtocol)[vs[1].(int)]
	}).(GetTwingateResourcesResourceProtocolOutput)
}

type GetTwingateResourcesResourceProtocolTcp struct {
	Policy string   `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// GetTwingateResourcesResourceProtocolTcpInput is an input type that accepts GetTwingateResourcesResourceProtocolTcpArgs and GetTwingateResourcesResourceProtocolTcpOutput values.
// You can construct a concrete instance of `GetTwingateResourcesResourceProtocolTcpInput` via:
//
//	GetTwingateResourcesResourceProtocolTcpArgs{...}
type GetTwingateResourcesResourceProtocolTcpInput interface {
	pulumi.Input

	ToGetTwingateResourcesResourceProtocolTcpOutput() GetTwingateResourcesResourceProtocolTcpOutput
	ToGetTwingateResourcesResourceProtocolTcpOutputWithContext(context.Context) GetTwingateResourcesResourceProtocolTcpOutput
}

type GetTwingateResourcesResourceProtocolTcpArgs struct {
	Policy pulumi.StringInput      `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (GetTwingateResourcesResourceProtocolTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResourceProtocolTcp)(nil)).Elem()
}

func (i GetTwingateResourcesResourceProtocolTcpArgs) ToGetTwingateResourcesResourceProtocolTcpOutput() GetTwingateResourcesResourceProtocolTcpOutput {
	return i.ToGetTwingateResourcesResourceProtocolTcpOutputWithContext(context.Background())
}

func (i GetTwingateResourcesResourceProtocolTcpArgs) ToGetTwingateResourcesResourceProtocolTcpOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourcesResourceProtocolTcpOutput)
}

// GetTwingateResourcesResourceProtocolTcpArrayInput is an input type that accepts GetTwingateResourcesResourceProtocolTcpArray and GetTwingateResourcesResourceProtocolTcpArrayOutput values.
// You can construct a concrete instance of `GetTwingateResourcesResourceProtocolTcpArrayInput` via:
//
//	GetTwingateResourcesResourceProtocolTcpArray{ GetTwingateResourcesResourceProtocolTcpArgs{...} }
type GetTwingateResourcesResourceProtocolTcpArrayInput interface {
	pulumi.Input

	ToGetTwingateResourcesResourceProtocolTcpArrayOutput() GetTwingateResourcesResourceProtocolTcpArrayOutput
	ToGetTwingateResourcesResourceProtocolTcpArrayOutputWithContext(context.Context) GetTwingateResourcesResourceProtocolTcpArrayOutput
}

type GetTwingateResourcesResourceProtocolTcpArray []GetTwingateResourcesResourceProtocolTcpInput

func (GetTwingateResourcesResourceProtocolTcpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourcesResourceProtocolTcp)(nil)).Elem()
}

func (i GetTwingateResourcesResourceProtocolTcpArray) ToGetTwingateResourcesResourceProtocolTcpArrayOutput() GetTwingateResourcesResourceProtocolTcpArrayOutput {
	return i.ToGetTwingateResourcesResourceProtocolTcpArrayOutputWithContext(context.Background())
}

func (i GetTwingateResourcesResourceProtocolTcpArray) ToGetTwingateResourcesResourceProtocolTcpArrayOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolTcpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourcesResourceProtocolTcpArrayOutput)
}

type GetTwingateResourcesResourceProtocolTcpOutput struct{ *pulumi.OutputState }

func (GetTwingateResourcesResourceProtocolTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResourceProtocolTcp)(nil)).Elem()
}

func (o GetTwingateResourcesResourceProtocolTcpOutput) ToGetTwingateResourcesResourceProtocolTcpOutput() GetTwingateResourcesResourceProtocolTcpOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolTcpOutput) ToGetTwingateResourcesResourceProtocolTcpOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolTcpOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolTcpOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocolTcp) string { return v.Policy }).(pulumi.StringOutput)
}

func (o GetTwingateResourcesResourceProtocolTcpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocolTcp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type GetTwingateResourcesResourceProtocolTcpArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateResourcesResourceProtocolTcpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourcesResourceProtocolTcp)(nil)).Elem()
}

func (o GetTwingateResourcesResourceProtocolTcpArrayOutput) ToGetTwingateResourcesResourceProtocolTcpArrayOutput() GetTwingateResourcesResourceProtocolTcpArrayOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolTcpArrayOutput) ToGetTwingateResourcesResourceProtocolTcpArrayOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolTcpArrayOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolTcpArrayOutput) Index(i pulumi.IntInput) GetTwingateResourcesResourceProtocolTcpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateResourcesResourceProtocolTcp {
		return vs[0].([]GetTwingateResourcesResourceProtocolTcp)[vs[1].(int)]
	}).(GetTwingateResourcesResourceProtocolTcpOutput)
}

type GetTwingateResourcesResourceProtocolUdp struct {
	Policy string   `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// GetTwingateResourcesResourceProtocolUdpInput is an input type that accepts GetTwingateResourcesResourceProtocolUdpArgs and GetTwingateResourcesResourceProtocolUdpOutput values.
// You can construct a concrete instance of `GetTwingateResourcesResourceProtocolUdpInput` via:
//
//	GetTwingateResourcesResourceProtocolUdpArgs{...}
type GetTwingateResourcesResourceProtocolUdpInput interface {
	pulumi.Input

	ToGetTwingateResourcesResourceProtocolUdpOutput() GetTwingateResourcesResourceProtocolUdpOutput
	ToGetTwingateResourcesResourceProtocolUdpOutputWithContext(context.Context) GetTwingateResourcesResourceProtocolUdpOutput
}

type GetTwingateResourcesResourceProtocolUdpArgs struct {
	Policy pulumi.StringInput      `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (GetTwingateResourcesResourceProtocolUdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResourceProtocolUdp)(nil)).Elem()
}

func (i GetTwingateResourcesResourceProtocolUdpArgs) ToGetTwingateResourcesResourceProtocolUdpOutput() GetTwingateResourcesResourceProtocolUdpOutput {
	return i.ToGetTwingateResourcesResourceProtocolUdpOutputWithContext(context.Background())
}

func (i GetTwingateResourcesResourceProtocolUdpArgs) ToGetTwingateResourcesResourceProtocolUdpOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolUdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourcesResourceProtocolUdpOutput)
}

// GetTwingateResourcesResourceProtocolUdpArrayInput is an input type that accepts GetTwingateResourcesResourceProtocolUdpArray and GetTwingateResourcesResourceProtocolUdpArrayOutput values.
// You can construct a concrete instance of `GetTwingateResourcesResourceProtocolUdpArrayInput` via:
//
//	GetTwingateResourcesResourceProtocolUdpArray{ GetTwingateResourcesResourceProtocolUdpArgs{...} }
type GetTwingateResourcesResourceProtocolUdpArrayInput interface {
	pulumi.Input

	ToGetTwingateResourcesResourceProtocolUdpArrayOutput() GetTwingateResourcesResourceProtocolUdpArrayOutput
	ToGetTwingateResourcesResourceProtocolUdpArrayOutputWithContext(context.Context) GetTwingateResourcesResourceProtocolUdpArrayOutput
}

type GetTwingateResourcesResourceProtocolUdpArray []GetTwingateResourcesResourceProtocolUdpInput

func (GetTwingateResourcesResourceProtocolUdpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourcesResourceProtocolUdp)(nil)).Elem()
}

func (i GetTwingateResourcesResourceProtocolUdpArray) ToGetTwingateResourcesResourceProtocolUdpArrayOutput() GetTwingateResourcesResourceProtocolUdpArrayOutput {
	return i.ToGetTwingateResourcesResourceProtocolUdpArrayOutputWithContext(context.Background())
}

func (i GetTwingateResourcesResourceProtocolUdpArray) ToGetTwingateResourcesResourceProtocolUdpArrayOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolUdpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourcesResourceProtocolUdpArrayOutput)
}

type GetTwingateResourcesResourceProtocolUdpOutput struct{ *pulumi.OutputState }

func (GetTwingateResourcesResourceProtocolUdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResourceProtocolUdp)(nil)).Elem()
}

func (o GetTwingateResourcesResourceProtocolUdpOutput) ToGetTwingateResourcesResourceProtocolUdpOutput() GetTwingateResourcesResourceProtocolUdpOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolUdpOutput) ToGetTwingateResourcesResourceProtocolUdpOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolUdpOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolUdpOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocolUdp) string { return v.Policy }).(pulumi.StringOutput)
}

func (o GetTwingateResourcesResourceProtocolUdpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocolUdp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type GetTwingateResourcesResourceProtocolUdpArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateResourcesResourceProtocolUdpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourcesResourceProtocolUdp)(nil)).Elem()
}

func (o GetTwingateResourcesResourceProtocolUdpArrayOutput) ToGetTwingateResourcesResourceProtocolUdpArrayOutput() GetTwingateResourcesResourceProtocolUdpArrayOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolUdpArrayOutput) ToGetTwingateResourcesResourceProtocolUdpArrayOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolUdpArrayOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolUdpArrayOutput) Index(i pulumi.IntInput) GetTwingateResourcesResourceProtocolUdpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateResourcesResourceProtocolUdp {
		return vs[0].([]GetTwingateResourcesResourceProtocolUdp)[vs[1].(int)]
	}).(GetTwingateResourcesResourceProtocolUdpOutput)
}

type GetTwingateSecurityPoliciesSecurityPolicy struct {
	// Return a matching Security Policy by its ID. The ID for the Security Policy must be obtained from the Admin API.
	Id string `pulumi:"id"`
	// Return a Security Policy that exactly matches this name.
	Name string `pulumi:"name"`
}

// GetTwingateSecurityPoliciesSecurityPolicyInput is an input type that accepts GetTwingateSecurityPoliciesSecurityPolicyArgs and GetTwingateSecurityPoliciesSecurityPolicyOutput values.
// You can construct a concrete instance of `GetTwingateSecurityPoliciesSecurityPolicyInput` via:
//
//	GetTwingateSecurityPoliciesSecurityPolicyArgs{...}
type GetTwingateSecurityPoliciesSecurityPolicyInput interface {
	pulumi.Input

	ToGetTwingateSecurityPoliciesSecurityPolicyOutput() GetTwingateSecurityPoliciesSecurityPolicyOutput
	ToGetTwingateSecurityPoliciesSecurityPolicyOutputWithContext(context.Context) GetTwingateSecurityPoliciesSecurityPolicyOutput
}

type GetTwingateSecurityPoliciesSecurityPolicyArgs struct {
	// Return a matching Security Policy by its ID. The ID for the Security Policy must be obtained from the Admin API.
	Id pulumi.StringInput `pulumi:"id"`
	// Return a Security Policy that exactly matches this name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetTwingateSecurityPoliciesSecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateSecurityPoliciesSecurityPolicy)(nil)).Elem()
}

func (i GetTwingateSecurityPoliciesSecurityPolicyArgs) ToGetTwingateSecurityPoliciesSecurityPolicyOutput() GetTwingateSecurityPoliciesSecurityPolicyOutput {
	return i.ToGetTwingateSecurityPoliciesSecurityPolicyOutputWithContext(context.Background())
}

func (i GetTwingateSecurityPoliciesSecurityPolicyArgs) ToGetTwingateSecurityPoliciesSecurityPolicyOutputWithContext(ctx context.Context) GetTwingateSecurityPoliciesSecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateSecurityPoliciesSecurityPolicyOutput)
}

// GetTwingateSecurityPoliciesSecurityPolicyArrayInput is an input type that accepts GetTwingateSecurityPoliciesSecurityPolicyArray and GetTwingateSecurityPoliciesSecurityPolicyArrayOutput values.
// You can construct a concrete instance of `GetTwingateSecurityPoliciesSecurityPolicyArrayInput` via:
//
//	GetTwingateSecurityPoliciesSecurityPolicyArray{ GetTwingateSecurityPoliciesSecurityPolicyArgs{...} }
type GetTwingateSecurityPoliciesSecurityPolicyArrayInput interface {
	pulumi.Input

	ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutput() GetTwingateSecurityPoliciesSecurityPolicyArrayOutput
	ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutputWithContext(context.Context) GetTwingateSecurityPoliciesSecurityPolicyArrayOutput
}

type GetTwingateSecurityPoliciesSecurityPolicyArray []GetTwingateSecurityPoliciesSecurityPolicyInput

func (GetTwingateSecurityPoliciesSecurityPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateSecurityPoliciesSecurityPolicy)(nil)).Elem()
}

func (i GetTwingateSecurityPoliciesSecurityPolicyArray) ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutput() GetTwingateSecurityPoliciesSecurityPolicyArrayOutput {
	return i.ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutputWithContext(context.Background())
}

func (i GetTwingateSecurityPoliciesSecurityPolicyArray) ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutputWithContext(ctx context.Context) GetTwingateSecurityPoliciesSecurityPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateSecurityPoliciesSecurityPolicyArrayOutput)
}

type GetTwingateSecurityPoliciesSecurityPolicyOutput struct{ *pulumi.OutputState }

func (GetTwingateSecurityPoliciesSecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateSecurityPoliciesSecurityPolicy)(nil)).Elem()
}

func (o GetTwingateSecurityPoliciesSecurityPolicyOutput) ToGetTwingateSecurityPoliciesSecurityPolicyOutput() GetTwingateSecurityPoliciesSecurityPolicyOutput {
	return o
}

func (o GetTwingateSecurityPoliciesSecurityPolicyOutput) ToGetTwingateSecurityPoliciesSecurityPolicyOutputWithContext(ctx context.Context) GetTwingateSecurityPoliciesSecurityPolicyOutput {
	return o
}

// Return a matching Security Policy by its ID. The ID for the Security Policy must be obtained from the Admin API.
func (o GetTwingateSecurityPoliciesSecurityPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateSecurityPoliciesSecurityPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// Return a Security Policy that exactly matches this name.
func (o GetTwingateSecurityPoliciesSecurityPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateSecurityPoliciesSecurityPolicy) string { return v.Name }).(pulumi.StringOutput)
}

type GetTwingateSecurityPoliciesSecurityPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateSecurityPoliciesSecurityPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateSecurityPoliciesSecurityPolicy)(nil)).Elem()
}

func (o GetTwingateSecurityPoliciesSecurityPolicyArrayOutput) ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutput() GetTwingateSecurityPoliciesSecurityPolicyArrayOutput {
	return o
}

func (o GetTwingateSecurityPoliciesSecurityPolicyArrayOutput) ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutputWithContext(ctx context.Context) GetTwingateSecurityPoliciesSecurityPolicyArrayOutput {
	return o
}

func (o GetTwingateSecurityPoliciesSecurityPolicyArrayOutput) Index(i pulumi.IntInput) GetTwingateSecurityPoliciesSecurityPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateSecurityPoliciesSecurityPolicy {
		return vs[0].([]GetTwingateSecurityPoliciesSecurityPolicy)[vs[1].(int)]
	}).(GetTwingateSecurityPoliciesSecurityPolicyOutput)
}

type GetTwingateServiceAccountsServiceAccount struct {
	// ID of the Service Account resource
	Id string `pulumi:"id"`
	// List of twingate*service*account_key IDs that are assigned to the Service Account.
	KeyIds []string `pulumi:"keyIds"`
	// Name of the Service Account
	Name string `pulumi:"name"`
	// List of TwingateResource IDs that the Service Account is assigned to.
	ResourceIds []string `pulumi:"resourceIds"`
}

// GetTwingateServiceAccountsServiceAccountInput is an input type that accepts GetTwingateServiceAccountsServiceAccountArgs and GetTwingateServiceAccountsServiceAccountOutput values.
// You can construct a concrete instance of `GetTwingateServiceAccountsServiceAccountInput` via:
//
//	GetTwingateServiceAccountsServiceAccountArgs{...}
type GetTwingateServiceAccountsServiceAccountInput interface {
	pulumi.Input

	ToGetTwingateServiceAccountsServiceAccountOutput() GetTwingateServiceAccountsServiceAccountOutput
	ToGetTwingateServiceAccountsServiceAccountOutputWithContext(context.Context) GetTwingateServiceAccountsServiceAccountOutput
}

type GetTwingateServiceAccountsServiceAccountArgs struct {
	// ID of the Service Account resource
	Id pulumi.StringInput `pulumi:"id"`
	// List of twingate*service*account_key IDs that are assigned to the Service Account.
	KeyIds pulumi.StringArrayInput `pulumi:"keyIds"`
	// Name of the Service Account
	Name pulumi.StringInput `pulumi:"name"`
	// List of TwingateResource IDs that the Service Account is assigned to.
	ResourceIds pulumi.StringArrayInput `pulumi:"resourceIds"`
}

func (GetTwingateServiceAccountsServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateServiceAccountsServiceAccount)(nil)).Elem()
}

func (i GetTwingateServiceAccountsServiceAccountArgs) ToGetTwingateServiceAccountsServiceAccountOutput() GetTwingateServiceAccountsServiceAccountOutput {
	return i.ToGetTwingateServiceAccountsServiceAccountOutputWithContext(context.Background())
}

func (i GetTwingateServiceAccountsServiceAccountArgs) ToGetTwingateServiceAccountsServiceAccountOutputWithContext(ctx context.Context) GetTwingateServiceAccountsServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateServiceAccountsServiceAccountOutput)
}

// GetTwingateServiceAccountsServiceAccountArrayInput is an input type that accepts GetTwingateServiceAccountsServiceAccountArray and GetTwingateServiceAccountsServiceAccountArrayOutput values.
// You can construct a concrete instance of `GetTwingateServiceAccountsServiceAccountArrayInput` via:
//
//	GetTwingateServiceAccountsServiceAccountArray{ GetTwingateServiceAccountsServiceAccountArgs{...} }
type GetTwingateServiceAccountsServiceAccountArrayInput interface {
	pulumi.Input

	ToGetTwingateServiceAccountsServiceAccountArrayOutput() GetTwingateServiceAccountsServiceAccountArrayOutput
	ToGetTwingateServiceAccountsServiceAccountArrayOutputWithContext(context.Context) GetTwingateServiceAccountsServiceAccountArrayOutput
}

type GetTwingateServiceAccountsServiceAccountArray []GetTwingateServiceAccountsServiceAccountInput

func (GetTwingateServiceAccountsServiceAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateServiceAccountsServiceAccount)(nil)).Elem()
}

func (i GetTwingateServiceAccountsServiceAccountArray) ToGetTwingateServiceAccountsServiceAccountArrayOutput() GetTwingateServiceAccountsServiceAccountArrayOutput {
	return i.ToGetTwingateServiceAccountsServiceAccountArrayOutputWithContext(context.Background())
}

func (i GetTwingateServiceAccountsServiceAccountArray) ToGetTwingateServiceAccountsServiceAccountArrayOutputWithContext(ctx context.Context) GetTwingateServiceAccountsServiceAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateServiceAccountsServiceAccountArrayOutput)
}

type GetTwingateServiceAccountsServiceAccountOutput struct{ *pulumi.OutputState }

func (GetTwingateServiceAccountsServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateServiceAccountsServiceAccount)(nil)).Elem()
}

func (o GetTwingateServiceAccountsServiceAccountOutput) ToGetTwingateServiceAccountsServiceAccountOutput() GetTwingateServiceAccountsServiceAccountOutput {
	return o
}

func (o GetTwingateServiceAccountsServiceAccountOutput) ToGetTwingateServiceAccountsServiceAccountOutputWithContext(ctx context.Context) GetTwingateServiceAccountsServiceAccountOutput {
	return o
}

// ID of the Service Account resource
func (o GetTwingateServiceAccountsServiceAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateServiceAccountsServiceAccount) string { return v.Id }).(pulumi.StringOutput)
}

// List of twingate*service*account_key IDs that are assigned to the Service Account.
func (o GetTwingateServiceAccountsServiceAccountOutput) KeyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTwingateServiceAccountsServiceAccount) []string { return v.KeyIds }).(pulumi.StringArrayOutput)
}

// Name of the Service Account
func (o GetTwingateServiceAccountsServiceAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateServiceAccountsServiceAccount) string { return v.Name }).(pulumi.StringOutput)
}

// List of TwingateResource IDs that the Service Account is assigned to.
func (o GetTwingateServiceAccountsServiceAccountOutput) ResourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTwingateServiceAccountsServiceAccount) []string { return v.ResourceIds }).(pulumi.StringArrayOutput)
}

type GetTwingateServiceAccountsServiceAccountArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateServiceAccountsServiceAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateServiceAccountsServiceAccount)(nil)).Elem()
}

func (o GetTwingateServiceAccountsServiceAccountArrayOutput) ToGetTwingateServiceAccountsServiceAccountArrayOutput() GetTwingateServiceAccountsServiceAccountArrayOutput {
	return o
}

func (o GetTwingateServiceAccountsServiceAccountArrayOutput) ToGetTwingateServiceAccountsServiceAccountArrayOutputWithContext(ctx context.Context) GetTwingateServiceAccountsServiceAccountArrayOutput {
	return o
}

func (o GetTwingateServiceAccountsServiceAccountArrayOutput) Index(i pulumi.IntInput) GetTwingateServiceAccountsServiceAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateServiceAccountsServiceAccount {
		return vs[0].([]GetTwingateServiceAccountsServiceAccount)[vs[1].(int)]
	}).(GetTwingateServiceAccountsServiceAccountOutput)
}

type GetTwingateUsersUser struct {
	// The email address of the User
	Email string `pulumi:"email"`
	// The first name of the User
	FirstName string `pulumi:"firstName"`
	// The ID of the User
	Id string `pulumi:"id"`
	// Indicates whether the User is an admin
	IsAdmin bool `pulumi:"isAdmin"`
	// The last name of the User
	LastName string `pulumi:"lastName"`
	// Indicates the User's role. Either ADMIN, DEVOPS, SUPPORT, or MEMBER.
	Role string `pulumi:"role"`
}

// GetTwingateUsersUserInput is an input type that accepts GetTwingateUsersUserArgs and GetTwingateUsersUserOutput values.
// You can construct a concrete instance of `GetTwingateUsersUserInput` via:
//
//	GetTwingateUsersUserArgs{...}
type GetTwingateUsersUserInput interface {
	pulumi.Input

	ToGetTwingateUsersUserOutput() GetTwingateUsersUserOutput
	ToGetTwingateUsersUserOutputWithContext(context.Context) GetTwingateUsersUserOutput
}

type GetTwingateUsersUserArgs struct {
	// The email address of the User
	Email pulumi.StringInput `pulumi:"email"`
	// The first name of the User
	FirstName pulumi.StringInput `pulumi:"firstName"`
	// The ID of the User
	Id pulumi.StringInput `pulumi:"id"`
	// Indicates whether the User is an admin
	IsAdmin pulumi.BoolInput `pulumi:"isAdmin"`
	// The last name of the User
	LastName pulumi.StringInput `pulumi:"lastName"`
	// Indicates the User's role. Either ADMIN, DEVOPS, SUPPORT, or MEMBER.
	Role pulumi.StringInput `pulumi:"role"`
}

func (GetTwingateUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateUsersUser)(nil)).Elem()
}

func (i GetTwingateUsersUserArgs) ToGetTwingateUsersUserOutput() GetTwingateUsersUserOutput {
	return i.ToGetTwingateUsersUserOutputWithContext(context.Background())
}

func (i GetTwingateUsersUserArgs) ToGetTwingateUsersUserOutputWithContext(ctx context.Context) GetTwingateUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateUsersUserOutput)
}

// GetTwingateUsersUserArrayInput is an input type that accepts GetTwingateUsersUserArray and GetTwingateUsersUserArrayOutput values.
// You can construct a concrete instance of `GetTwingateUsersUserArrayInput` via:
//
//	GetTwingateUsersUserArray{ GetTwingateUsersUserArgs{...} }
type GetTwingateUsersUserArrayInput interface {
	pulumi.Input

	ToGetTwingateUsersUserArrayOutput() GetTwingateUsersUserArrayOutput
	ToGetTwingateUsersUserArrayOutputWithContext(context.Context) GetTwingateUsersUserArrayOutput
}

type GetTwingateUsersUserArray []GetTwingateUsersUserInput

func (GetTwingateUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateUsersUser)(nil)).Elem()
}

func (i GetTwingateUsersUserArray) ToGetTwingateUsersUserArrayOutput() GetTwingateUsersUserArrayOutput {
	return i.ToGetTwingateUsersUserArrayOutputWithContext(context.Background())
}

func (i GetTwingateUsersUserArray) ToGetTwingateUsersUserArrayOutputWithContext(ctx context.Context) GetTwingateUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateUsersUserArrayOutput)
}

type GetTwingateUsersUserOutput struct{ *pulumi.OutputState }

func (GetTwingateUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateUsersUser)(nil)).Elem()
}

func (o GetTwingateUsersUserOutput) ToGetTwingateUsersUserOutput() GetTwingateUsersUserOutput {
	return o
}

func (o GetTwingateUsersUserOutput) ToGetTwingateUsersUserOutputWithContext(ctx context.Context) GetTwingateUsersUserOutput {
	return o
}

// The email address of the User
func (o GetTwingateUsersUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUsersUser) string { return v.Email }).(pulumi.StringOutput)
}

// The first name of the User
func (o GetTwingateUsersUserOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUsersUser) string { return v.FirstName }).(pulumi.StringOutput)
}

// The ID of the User
func (o GetTwingateUsersUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUsersUser) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether the User is an admin
func (o GetTwingateUsersUserOutput) IsAdmin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTwingateUsersUser) bool { return v.IsAdmin }).(pulumi.BoolOutput)
}

// The last name of the User
func (o GetTwingateUsersUserOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUsersUser) string { return v.LastName }).(pulumi.StringOutput)
}

// Indicates the User's role. Either ADMIN, DEVOPS, SUPPORT, or MEMBER.
func (o GetTwingateUsersUserOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUsersUser) string { return v.Role }).(pulumi.StringOutput)
}

type GetTwingateUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateUsersUser)(nil)).Elem()
}

func (o GetTwingateUsersUserArrayOutput) ToGetTwingateUsersUserArrayOutput() GetTwingateUsersUserArrayOutput {
	return o
}

func (o GetTwingateUsersUserArrayOutput) ToGetTwingateUsersUserArrayOutputWithContext(ctx context.Context) GetTwingateUsersUserArrayOutput {
	return o
}

func (o GetTwingateUsersUserArrayOutput) Index(i pulumi.IntInput) GetTwingateUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateUsersUser {
		return vs[0].([]GetTwingateUsersUser)[vs[1].(int)]
	}).(GetTwingateUsersUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceAccessInput)(nil)).Elem(), TwingateResourceAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceAccessPtrInput)(nil)).Elem(), TwingateResourceAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsInput)(nil)).Elem(), TwingateResourceProtocolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsPtrInput)(nil)).Elem(), TwingateResourceProtocolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsTcpInput)(nil)).Elem(), TwingateResourceProtocolsTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsTcpPtrInput)(nil)).Elem(), TwingateResourceProtocolsTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsUdpInput)(nil)).Elem(), TwingateResourceProtocolsUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsUdpPtrInput)(nil)).Elem(), TwingateResourceProtocolsUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateConnectorsConnectorInput)(nil)).Elem(), GetTwingateConnectorsConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateConnectorsConnectorArrayInput)(nil)).Elem(), GetTwingateConnectorsConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateGroupsGroupInput)(nil)).Elem(), GetTwingateGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateGroupsGroupArrayInput)(nil)).Elem(), GetTwingateGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateRemoteNetworksRemoteNetworkInput)(nil)).Elem(), GetTwingateRemoteNetworksRemoteNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateRemoteNetworksRemoteNetworkArrayInput)(nil)).Elem(), GetTwingateRemoteNetworksRemoteNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourceProtocolInput)(nil)).Elem(), GetTwingateResourceProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourceProtocolArrayInput)(nil)).Elem(), GetTwingateResourceProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourceProtocolTcpInput)(nil)).Elem(), GetTwingateResourceProtocolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourceProtocolTcpArrayInput)(nil)).Elem(), GetTwingateResourceProtocolTcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourceProtocolUdpInput)(nil)).Elem(), GetTwingateResourceProtocolUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourceProtocolUdpArrayInput)(nil)).Elem(), GetTwingateResourceProtocolUdpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourcesResourceInput)(nil)).Elem(), GetTwingateResourcesResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourcesResourceArrayInput)(nil)).Elem(), GetTwingateResourcesResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourcesResourceProtocolInput)(nil)).Elem(), GetTwingateResourcesResourceProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourcesResourceProtocolArrayInput)(nil)).Elem(), GetTwingateResourcesResourceProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourcesResourceProtocolTcpInput)(nil)).Elem(), GetTwingateResourcesResourceProtocolTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourcesResourceProtocolTcpArrayInput)(nil)).Elem(), GetTwingateResourcesResourceProtocolTcpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourcesResourceProtocolUdpInput)(nil)).Elem(), GetTwingateResourcesResourceProtocolUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourcesResourceProtocolUdpArrayInput)(nil)).Elem(), GetTwingateResourcesResourceProtocolUdpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateSecurityPoliciesSecurityPolicyInput)(nil)).Elem(), GetTwingateSecurityPoliciesSecurityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateSecurityPoliciesSecurityPolicyArrayInput)(nil)).Elem(), GetTwingateSecurityPoliciesSecurityPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateServiceAccountsServiceAccountInput)(nil)).Elem(), GetTwingateServiceAccountsServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateServiceAccountsServiceAccountArrayInput)(nil)).Elem(), GetTwingateServiceAccountsServiceAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateUsersUserInput)(nil)).Elem(), GetTwingateUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateUsersUserArrayInput)(nil)).Elem(), GetTwingateUsersUserArray{})
	pulumi.RegisterOutputType(TwingateResourceAccessOutput{})
	pulumi.RegisterOutputType(TwingateResourceAccessPtrOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsPtrOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsTcpOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsTcpPtrOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsUdpOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsUdpPtrOutput{})
	pulumi.RegisterOutputType(GetTwingateConnectorsConnectorOutput{})
	pulumi.RegisterOutputType(GetTwingateConnectorsConnectorArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetTwingateGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateRemoteNetworksRemoteNetworkOutput{})
	pulumi.RegisterOutputType(GetTwingateRemoteNetworksRemoteNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateResourceProtocolOutput{})
	pulumi.RegisterOutputType(GetTwingateResourceProtocolArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateResourceProtocolTcpOutput{})
	pulumi.RegisterOutputType(GetTwingateResourceProtocolTcpArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateResourceProtocolUdpOutput{})
	pulumi.RegisterOutputType(GetTwingateResourceProtocolUdpArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateResourcesResourceOutput{})
	pulumi.RegisterOutputType(GetTwingateResourcesResourceArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateResourcesResourceProtocolOutput{})
	pulumi.RegisterOutputType(GetTwingateResourcesResourceProtocolArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateResourcesResourceProtocolTcpOutput{})
	pulumi.RegisterOutputType(GetTwingateResourcesResourceProtocolTcpArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateResourcesResourceProtocolUdpOutput{})
	pulumi.RegisterOutputType(GetTwingateResourcesResourceProtocolUdpArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateSecurityPoliciesSecurityPolicyOutput{})
	pulumi.RegisterOutputType(GetTwingateSecurityPoliciesSecurityPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateServiceAccountsServiceAccountOutput{})
	pulumi.RegisterOutputType(GetTwingateServiceAccountsServiceAccountArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateUsersUserOutput{})
	pulumi.RegisterOutputType(GetTwingateUsersUserArrayOutput{})
}
