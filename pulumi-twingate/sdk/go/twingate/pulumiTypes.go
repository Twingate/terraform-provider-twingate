// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package twingate

import (
	"context"
	"reflect"

	"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type TwingateResourceAccess struct {
	GroupIds          []string `pulumi:"groupIds"`
	ServiceAccountIds []string `pulumi:"serviceAccountIds"`
}

// TwingateResourceAccessInput is an input type that accepts TwingateResourceAccessArgs and TwingateResourceAccessOutput values.
// You can construct a concrete instance of `TwingateResourceAccessInput` via:
//
//	TwingateResourceAccessArgs{...}
type TwingateResourceAccessInput interface {
	pulumi.Input

	ToTwingateResourceAccessOutput() TwingateResourceAccessOutput
	ToTwingateResourceAccessOutputWithContext(context.Context) TwingateResourceAccessOutput
}

type TwingateResourceAccessArgs struct {
	GroupIds          pulumi.StringArrayInput `pulumi:"groupIds"`
	ServiceAccountIds pulumi.StringArrayInput `pulumi:"serviceAccountIds"`
}

func (TwingateResourceAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceAccess)(nil)).Elem()
}

func (i TwingateResourceAccessArgs) ToTwingateResourceAccessOutput() TwingateResourceAccessOutput {
	return i.ToTwingateResourceAccessOutputWithContext(context.Background())
}

func (i TwingateResourceAccessArgs) ToTwingateResourceAccessOutputWithContext(ctx context.Context) TwingateResourceAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceAccessOutput)
}

func (i TwingateResourceAccessArgs) ToOutput(ctx context.Context) pulumix.Output[TwingateResourceAccess] {
	return pulumix.Output[TwingateResourceAccess]{
		OutputState: i.ToTwingateResourceAccessOutputWithContext(ctx).OutputState,
	}
}

func (i TwingateResourceAccessArgs) ToTwingateResourceAccessPtrOutput() TwingateResourceAccessPtrOutput {
	return i.ToTwingateResourceAccessPtrOutputWithContext(context.Background())
}

func (i TwingateResourceAccessArgs) ToTwingateResourceAccessPtrOutputWithContext(ctx context.Context) TwingateResourceAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceAccessOutput).ToTwingateResourceAccessPtrOutputWithContext(ctx)
}

// TwingateResourceAccessPtrInput is an input type that accepts TwingateResourceAccessArgs, TwingateResourceAccessPtr and TwingateResourceAccessPtrOutput values.
// You can construct a concrete instance of `TwingateResourceAccessPtrInput` via:
//
//	        TwingateResourceAccessArgs{...}
//
//	or:
//
//	        nil
type TwingateResourceAccessPtrInput interface {
	pulumi.Input

	ToTwingateResourceAccessPtrOutput() TwingateResourceAccessPtrOutput
	ToTwingateResourceAccessPtrOutputWithContext(context.Context) TwingateResourceAccessPtrOutput
}

type twingateResourceAccessPtrType TwingateResourceAccessArgs

func TwingateResourceAccessPtr(v *TwingateResourceAccessArgs) TwingateResourceAccessPtrInput {
	return (*twingateResourceAccessPtrType)(v)
}

func (*twingateResourceAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceAccess)(nil)).Elem()
}

func (i *twingateResourceAccessPtrType) ToTwingateResourceAccessPtrOutput() TwingateResourceAccessPtrOutput {
	return i.ToTwingateResourceAccessPtrOutputWithContext(context.Background())
}

func (i *twingateResourceAccessPtrType) ToTwingateResourceAccessPtrOutputWithContext(ctx context.Context) TwingateResourceAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceAccessPtrOutput)
}

func (i *twingateResourceAccessPtrType) ToOutput(ctx context.Context) pulumix.Output[*TwingateResourceAccess] {
	return pulumix.Output[*TwingateResourceAccess]{
		OutputState: i.ToTwingateResourceAccessPtrOutputWithContext(ctx).OutputState,
	}
}

type TwingateResourceAccessOutput struct{ *pulumi.OutputState }

func (TwingateResourceAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceAccess)(nil)).Elem()
}

func (o TwingateResourceAccessOutput) ToTwingateResourceAccessOutput() TwingateResourceAccessOutput {
	return o
}

func (o TwingateResourceAccessOutput) ToTwingateResourceAccessOutputWithContext(ctx context.Context) TwingateResourceAccessOutput {
	return o
}

func (o TwingateResourceAccessOutput) ToTwingateResourceAccessPtrOutput() TwingateResourceAccessPtrOutput {
	return o.ToTwingateResourceAccessPtrOutputWithContext(context.Background())
}

func (o TwingateResourceAccessOutput) ToTwingateResourceAccessPtrOutputWithContext(ctx context.Context) TwingateResourceAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TwingateResourceAccess) *TwingateResourceAccess {
		return &v
	}).(TwingateResourceAccessPtrOutput)
}

func (o TwingateResourceAccessOutput) ToOutput(ctx context.Context) pulumix.Output[TwingateResourceAccess] {
	return pulumix.Output[TwingateResourceAccess]{
		OutputState: o.OutputState,
	}
}

func (o TwingateResourceAccessOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TwingateResourceAccess) []string { return v.GroupIds }).(pulumi.StringArrayOutput)
}

func (o TwingateResourceAccessOutput) ServiceAccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TwingateResourceAccess) []string { return v.ServiceAccountIds }).(pulumi.StringArrayOutput)
}

type TwingateResourceAccessPtrOutput struct{ *pulumi.OutputState }

func (TwingateResourceAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceAccess)(nil)).Elem()
}

func (o TwingateResourceAccessPtrOutput) ToTwingateResourceAccessPtrOutput() TwingateResourceAccessPtrOutput {
	return o
}

func (o TwingateResourceAccessPtrOutput) ToTwingateResourceAccessPtrOutputWithContext(ctx context.Context) TwingateResourceAccessPtrOutput {
	return o
}

func (o TwingateResourceAccessPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TwingateResourceAccess] {
	return pulumix.Output[*TwingateResourceAccess]{
		OutputState: o.OutputState,
	}
}

func (o TwingateResourceAccessPtrOutput) Elem() TwingateResourceAccessOutput {
	return o.ApplyT(func(v *TwingateResourceAccess) TwingateResourceAccess {
		if v != nil {
			return *v
		}
		var ret TwingateResourceAccess
		return ret
	}).(TwingateResourceAccessOutput)
}

func (o TwingateResourceAccessPtrOutput) GroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TwingateResourceAccess) []string {
		if v == nil {
			return nil
		}
		return v.GroupIds
	}).(pulumi.StringArrayOutput)
}

func (o TwingateResourceAccessPtrOutput) ServiceAccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TwingateResourceAccess) []string {
		if v == nil {
			return nil
		}
		return v.ServiceAccountIds
	}).(pulumi.StringArrayOutput)
}

type TwingateResourceProtocols struct {
	AllowIcmp *bool                         `pulumi:"allowIcmp"`
	Tcp       *TwingateResourceProtocolsTcp `pulumi:"tcp"`
	Udp       *TwingateResourceProtocolsUdp `pulumi:"udp"`
}

// TwingateResourceProtocolsInput is an input type that accepts TwingateResourceProtocolsArgs and TwingateResourceProtocolsOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsInput` via:
//
//	TwingateResourceProtocolsArgs{...}
type TwingateResourceProtocolsInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsOutput() TwingateResourceProtocolsOutput
	ToTwingateResourceProtocolsOutputWithContext(context.Context) TwingateResourceProtocolsOutput
}

type TwingateResourceProtocolsArgs struct {
	AllowIcmp pulumi.BoolPtrInput                  `pulumi:"allowIcmp"`
	Tcp       TwingateResourceProtocolsTcpPtrInput `pulumi:"tcp"`
	Udp       TwingateResourceProtocolsUdpPtrInput `pulumi:"udp"`
}

func (TwingateResourceProtocolsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocols)(nil)).Elem()
}

func (i TwingateResourceProtocolsArgs) ToTwingateResourceProtocolsOutput() TwingateResourceProtocolsOutput {
	return i.ToTwingateResourceProtocolsOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsArgs) ToTwingateResourceProtocolsOutputWithContext(ctx context.Context) TwingateResourceProtocolsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsOutput)
}

func (i TwingateResourceProtocolsArgs) ToOutput(ctx context.Context) pulumix.Output[TwingateResourceProtocols] {
	return pulumix.Output[TwingateResourceProtocols]{
		OutputState: i.ToTwingateResourceProtocolsOutputWithContext(ctx).OutputState,
	}
}

func (i TwingateResourceProtocolsArgs) ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput {
	return i.ToTwingateResourceProtocolsPtrOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsArgs) ToTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsOutput).ToTwingateResourceProtocolsPtrOutputWithContext(ctx)
}

// TwingateResourceProtocolsPtrInput is an input type that accepts TwingateResourceProtocolsArgs, TwingateResourceProtocolsPtr and TwingateResourceProtocolsPtrOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsPtrInput` via:
//
//	        TwingateResourceProtocolsArgs{...}
//
//	or:
//
//	        nil
type TwingateResourceProtocolsPtrInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput
	ToTwingateResourceProtocolsPtrOutputWithContext(context.Context) TwingateResourceProtocolsPtrOutput
}

type twingateResourceProtocolsPtrType TwingateResourceProtocolsArgs

func TwingateResourceProtocolsPtr(v *TwingateResourceProtocolsArgs) TwingateResourceProtocolsPtrInput {
	return (*twingateResourceProtocolsPtrType)(v)
}

func (*twingateResourceProtocolsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocols)(nil)).Elem()
}

func (i *twingateResourceProtocolsPtrType) ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput {
	return i.ToTwingateResourceProtocolsPtrOutputWithContext(context.Background())
}

func (i *twingateResourceProtocolsPtrType) ToTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsPtrOutput)
}

func (i *twingateResourceProtocolsPtrType) ToOutput(ctx context.Context) pulumix.Output[*TwingateResourceProtocols] {
	return pulumix.Output[*TwingateResourceProtocols]{
		OutputState: i.ToTwingateResourceProtocolsPtrOutputWithContext(ctx).OutputState,
	}
}

type TwingateResourceProtocolsOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocols)(nil)).Elem()
}

func (o TwingateResourceProtocolsOutput) ToTwingateResourceProtocolsOutput() TwingateResourceProtocolsOutput {
	return o
}

func (o TwingateResourceProtocolsOutput) ToTwingateResourceProtocolsOutputWithContext(ctx context.Context) TwingateResourceProtocolsOutput {
	return o
}

func (o TwingateResourceProtocolsOutput) ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput {
	return o.ToTwingateResourceProtocolsPtrOutputWithContext(context.Background())
}

func (o TwingateResourceProtocolsOutput) ToTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TwingateResourceProtocols) *TwingateResourceProtocols {
		return &v
	}).(TwingateResourceProtocolsPtrOutput)
}

func (o TwingateResourceProtocolsOutput) ToOutput(ctx context.Context) pulumix.Output[TwingateResourceProtocols] {
	return pulumix.Output[TwingateResourceProtocols]{
		OutputState: o.OutputState,
	}
}

func (o TwingateResourceProtocolsOutput) AllowIcmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TwingateResourceProtocols) *bool { return v.AllowIcmp }).(pulumi.BoolPtrOutput)
}

func (o TwingateResourceProtocolsOutput) Tcp() TwingateResourceProtocolsTcpPtrOutput {
	return o.ApplyT(func(v TwingateResourceProtocols) *TwingateResourceProtocolsTcp { return v.Tcp }).(TwingateResourceProtocolsTcpPtrOutput)
}

func (o TwingateResourceProtocolsOutput) Udp() TwingateResourceProtocolsUdpPtrOutput {
	return o.ApplyT(func(v TwingateResourceProtocols) *TwingateResourceProtocolsUdp { return v.Udp }).(TwingateResourceProtocolsUdpPtrOutput)
}

type TwingateResourceProtocolsPtrOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocols)(nil)).Elem()
}

func (o TwingateResourceProtocolsPtrOutput) ToTwingateResourceProtocolsPtrOutput() TwingateResourceProtocolsPtrOutput {
	return o
}

func (o TwingateResourceProtocolsPtrOutput) ToTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsPtrOutput {
	return o
}

func (o TwingateResourceProtocolsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TwingateResourceProtocols] {
	return pulumix.Output[*TwingateResourceProtocols]{
		OutputState: o.OutputState,
	}
}

func (o TwingateResourceProtocolsPtrOutput) Elem() TwingateResourceProtocolsOutput {
	return o.ApplyT(func(v *TwingateResourceProtocols) TwingateResourceProtocols {
		if v != nil {
			return *v
		}
		var ret TwingateResourceProtocols
		return ret
	}).(TwingateResourceProtocolsOutput)
}

func (o TwingateResourceProtocolsPtrOutput) AllowIcmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocols) *bool {
		if v == nil {
			return nil
		}
		return v.AllowIcmp
	}).(pulumi.BoolPtrOutput)
}

func (o TwingateResourceProtocolsPtrOutput) Tcp() TwingateResourceProtocolsTcpPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocols) *TwingateResourceProtocolsTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(TwingateResourceProtocolsTcpPtrOutput)
}

func (o TwingateResourceProtocolsPtrOutput) Udp() TwingateResourceProtocolsUdpPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocols) *TwingateResourceProtocolsUdp {
		if v == nil {
			return nil
		}
		return v.Udp
	}).(TwingateResourceProtocolsUdpPtrOutput)
}

type TwingateResourceProtocolsTcp struct {
	Policy *string  `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// TwingateResourceProtocolsTcpInput is an input type that accepts TwingateResourceProtocolsTcpArgs and TwingateResourceProtocolsTcpOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsTcpInput` via:
//
//	TwingateResourceProtocolsTcpArgs{...}
type TwingateResourceProtocolsTcpInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsTcpOutput() TwingateResourceProtocolsTcpOutput
	ToTwingateResourceProtocolsTcpOutputWithContext(context.Context) TwingateResourceProtocolsTcpOutput
}

type TwingateResourceProtocolsTcpArgs struct {
	Policy pulumi.StringPtrInput   `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (TwingateResourceProtocolsTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocolsTcp)(nil)).Elem()
}

func (i TwingateResourceProtocolsTcpArgs) ToTwingateResourceProtocolsTcpOutput() TwingateResourceProtocolsTcpOutput {
	return i.ToTwingateResourceProtocolsTcpOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsTcpArgs) ToTwingateResourceProtocolsTcpOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsTcpOutput)
}

func (i TwingateResourceProtocolsTcpArgs) ToOutput(ctx context.Context) pulumix.Output[TwingateResourceProtocolsTcp] {
	return pulumix.Output[TwingateResourceProtocolsTcp]{
		OutputState: i.ToTwingateResourceProtocolsTcpOutputWithContext(ctx).OutputState,
	}
}

func (i TwingateResourceProtocolsTcpArgs) ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput {
	return i.ToTwingateResourceProtocolsTcpPtrOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsTcpArgs) ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsTcpOutput).ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx)
}

// TwingateResourceProtocolsTcpPtrInput is an input type that accepts TwingateResourceProtocolsTcpArgs, TwingateResourceProtocolsTcpPtr and TwingateResourceProtocolsTcpPtrOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsTcpPtrInput` via:
//
//	        TwingateResourceProtocolsTcpArgs{...}
//
//	or:
//
//	        nil
type TwingateResourceProtocolsTcpPtrInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput
	ToTwingateResourceProtocolsTcpPtrOutputWithContext(context.Context) TwingateResourceProtocolsTcpPtrOutput
}

type twingateResourceProtocolsTcpPtrType TwingateResourceProtocolsTcpArgs

func TwingateResourceProtocolsTcpPtr(v *TwingateResourceProtocolsTcpArgs) TwingateResourceProtocolsTcpPtrInput {
	return (*twingateResourceProtocolsTcpPtrType)(v)
}

func (*twingateResourceProtocolsTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocolsTcp)(nil)).Elem()
}

func (i *twingateResourceProtocolsTcpPtrType) ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput {
	return i.ToTwingateResourceProtocolsTcpPtrOutputWithContext(context.Background())
}

func (i *twingateResourceProtocolsTcpPtrType) ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsTcpPtrOutput)
}

func (i *twingateResourceProtocolsTcpPtrType) ToOutput(ctx context.Context) pulumix.Output[*TwingateResourceProtocolsTcp] {
	return pulumix.Output[*TwingateResourceProtocolsTcp]{
		OutputState: i.ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx).OutputState,
	}
}

type TwingateResourceProtocolsTcpOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocolsTcp)(nil)).Elem()
}

func (o TwingateResourceProtocolsTcpOutput) ToTwingateResourceProtocolsTcpOutput() TwingateResourceProtocolsTcpOutput {
	return o
}

func (o TwingateResourceProtocolsTcpOutput) ToTwingateResourceProtocolsTcpOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpOutput {
	return o
}

func (o TwingateResourceProtocolsTcpOutput) ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput {
	return o.ToTwingateResourceProtocolsTcpPtrOutputWithContext(context.Background())
}

func (o TwingateResourceProtocolsTcpOutput) ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TwingateResourceProtocolsTcp) *TwingateResourceProtocolsTcp {
		return &v
	}).(TwingateResourceProtocolsTcpPtrOutput)
}

func (o TwingateResourceProtocolsTcpOutput) ToOutput(ctx context.Context) pulumix.Output[TwingateResourceProtocolsTcp] {
	return pulumix.Output[TwingateResourceProtocolsTcp]{
		OutputState: o.OutputState,
	}
}

func (o TwingateResourceProtocolsTcpOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TwingateResourceProtocolsTcp) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

func (o TwingateResourceProtocolsTcpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TwingateResourceProtocolsTcp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type TwingateResourceProtocolsTcpPtrOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocolsTcp)(nil)).Elem()
}

func (o TwingateResourceProtocolsTcpPtrOutput) ToTwingateResourceProtocolsTcpPtrOutput() TwingateResourceProtocolsTcpPtrOutput {
	return o
}

func (o TwingateResourceProtocolsTcpPtrOutput) ToTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsTcpPtrOutput {
	return o
}

func (o TwingateResourceProtocolsTcpPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TwingateResourceProtocolsTcp] {
	return pulumix.Output[*TwingateResourceProtocolsTcp]{
		OutputState: o.OutputState,
	}
}

func (o TwingateResourceProtocolsTcpPtrOutput) Elem() TwingateResourceProtocolsTcpOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsTcp) TwingateResourceProtocolsTcp {
		if v != nil {
			return *v
		}
		var ret TwingateResourceProtocolsTcp
		return ret
	}).(TwingateResourceProtocolsTcpOutput)
}

func (o TwingateResourceProtocolsTcpPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsTcp) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

func (o TwingateResourceProtocolsTcpPtrOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsTcp) []string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringArrayOutput)
}

type TwingateResourceProtocolsUdp struct {
	Policy *string  `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// TwingateResourceProtocolsUdpInput is an input type that accepts TwingateResourceProtocolsUdpArgs and TwingateResourceProtocolsUdpOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsUdpInput` via:
//
//	TwingateResourceProtocolsUdpArgs{...}
type TwingateResourceProtocolsUdpInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsUdpOutput() TwingateResourceProtocolsUdpOutput
	ToTwingateResourceProtocolsUdpOutputWithContext(context.Context) TwingateResourceProtocolsUdpOutput
}

type TwingateResourceProtocolsUdpArgs struct {
	Policy pulumi.StringPtrInput   `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (TwingateResourceProtocolsUdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocolsUdp)(nil)).Elem()
}

func (i TwingateResourceProtocolsUdpArgs) ToTwingateResourceProtocolsUdpOutput() TwingateResourceProtocolsUdpOutput {
	return i.ToTwingateResourceProtocolsUdpOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsUdpArgs) ToTwingateResourceProtocolsUdpOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsUdpOutput)
}

func (i TwingateResourceProtocolsUdpArgs) ToOutput(ctx context.Context) pulumix.Output[TwingateResourceProtocolsUdp] {
	return pulumix.Output[TwingateResourceProtocolsUdp]{
		OutputState: i.ToTwingateResourceProtocolsUdpOutputWithContext(ctx).OutputState,
	}
}

func (i TwingateResourceProtocolsUdpArgs) ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput {
	return i.ToTwingateResourceProtocolsUdpPtrOutputWithContext(context.Background())
}

func (i TwingateResourceProtocolsUdpArgs) ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsUdpOutput).ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx)
}

// TwingateResourceProtocolsUdpPtrInput is an input type that accepts TwingateResourceProtocolsUdpArgs, TwingateResourceProtocolsUdpPtr and TwingateResourceProtocolsUdpPtrOutput values.
// You can construct a concrete instance of `TwingateResourceProtocolsUdpPtrInput` via:
//
//	        TwingateResourceProtocolsUdpArgs{...}
//
//	or:
//
//	        nil
type TwingateResourceProtocolsUdpPtrInput interface {
	pulumi.Input

	ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput
	ToTwingateResourceProtocolsUdpPtrOutputWithContext(context.Context) TwingateResourceProtocolsUdpPtrOutput
}

type twingateResourceProtocolsUdpPtrType TwingateResourceProtocolsUdpArgs

func TwingateResourceProtocolsUdpPtr(v *TwingateResourceProtocolsUdpArgs) TwingateResourceProtocolsUdpPtrInput {
	return (*twingateResourceProtocolsUdpPtrType)(v)
}

func (*twingateResourceProtocolsUdpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocolsUdp)(nil)).Elem()
}

func (i *twingateResourceProtocolsUdpPtrType) ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput {
	return i.ToTwingateResourceProtocolsUdpPtrOutputWithContext(context.Background())
}

func (i *twingateResourceProtocolsUdpPtrType) ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TwingateResourceProtocolsUdpPtrOutput)
}

func (i *twingateResourceProtocolsUdpPtrType) ToOutput(ctx context.Context) pulumix.Output[*TwingateResourceProtocolsUdp] {
	return pulumix.Output[*TwingateResourceProtocolsUdp]{
		OutputState: i.ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx).OutputState,
	}
}

type TwingateResourceProtocolsUdpOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsUdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TwingateResourceProtocolsUdp)(nil)).Elem()
}

func (o TwingateResourceProtocolsUdpOutput) ToTwingateResourceProtocolsUdpOutput() TwingateResourceProtocolsUdpOutput {
	return o
}

func (o TwingateResourceProtocolsUdpOutput) ToTwingateResourceProtocolsUdpOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpOutput {
	return o
}

func (o TwingateResourceProtocolsUdpOutput) ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput {
	return o.ToTwingateResourceProtocolsUdpPtrOutputWithContext(context.Background())
}

func (o TwingateResourceProtocolsUdpOutput) ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TwingateResourceProtocolsUdp) *TwingateResourceProtocolsUdp {
		return &v
	}).(TwingateResourceProtocolsUdpPtrOutput)
}

func (o TwingateResourceProtocolsUdpOutput) ToOutput(ctx context.Context) pulumix.Output[TwingateResourceProtocolsUdp] {
	return pulumix.Output[TwingateResourceProtocolsUdp]{
		OutputState: o.OutputState,
	}
}

func (o TwingateResourceProtocolsUdpOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TwingateResourceProtocolsUdp) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

func (o TwingateResourceProtocolsUdpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v TwingateResourceProtocolsUdp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type TwingateResourceProtocolsUdpPtrOutput struct{ *pulumi.OutputState }

func (TwingateResourceProtocolsUdpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TwingateResourceProtocolsUdp)(nil)).Elem()
}

func (o TwingateResourceProtocolsUdpPtrOutput) ToTwingateResourceProtocolsUdpPtrOutput() TwingateResourceProtocolsUdpPtrOutput {
	return o
}

func (o TwingateResourceProtocolsUdpPtrOutput) ToTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) TwingateResourceProtocolsUdpPtrOutput {
	return o
}

func (o TwingateResourceProtocolsUdpPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*TwingateResourceProtocolsUdp] {
	return pulumix.Output[*TwingateResourceProtocolsUdp]{
		OutputState: o.OutputState,
	}
}

func (o TwingateResourceProtocolsUdpPtrOutput) Elem() TwingateResourceProtocolsUdpOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsUdp) TwingateResourceProtocolsUdp {
		if v != nil {
			return *v
		}
		var ret TwingateResourceProtocolsUdp
		return ret
	}).(TwingateResourceProtocolsUdpOutput)
}

func (o TwingateResourceProtocolsUdpPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsUdp) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

func (o TwingateResourceProtocolsUdpPtrOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TwingateResourceProtocolsUdp) []string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringArrayOutput)
}

type GetTwingateConnectorsConnector struct {
	Id                   string `pulumi:"id"`
	Name                 string `pulumi:"name"`
	RemoteNetworkId      string `pulumi:"remoteNetworkId"`
	StatusUpdatesEnabled bool   `pulumi:"statusUpdatesEnabled"`
}

// GetTwingateConnectorsConnectorInput is an input type that accepts GetTwingateConnectorsConnectorArgs and GetTwingateConnectorsConnectorOutput values.
// You can construct a concrete instance of `GetTwingateConnectorsConnectorInput` via:
//
//	GetTwingateConnectorsConnectorArgs{...}
type GetTwingateConnectorsConnectorInput interface {
	pulumi.Input

	ToGetTwingateConnectorsConnectorOutput() GetTwingateConnectorsConnectorOutput
	ToGetTwingateConnectorsConnectorOutputWithContext(context.Context) GetTwingateConnectorsConnectorOutput
}

type GetTwingateConnectorsConnectorArgs struct {
	Id                   pulumi.StringInput `pulumi:"id"`
	Name                 pulumi.StringInput `pulumi:"name"`
	RemoteNetworkId      pulumi.StringInput `pulumi:"remoteNetworkId"`
	StatusUpdatesEnabled pulumi.BoolInput   `pulumi:"statusUpdatesEnabled"`
}

func (GetTwingateConnectorsConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateConnectorsConnector)(nil)).Elem()
}

func (i GetTwingateConnectorsConnectorArgs) ToGetTwingateConnectorsConnectorOutput() GetTwingateConnectorsConnectorOutput {
	return i.ToGetTwingateConnectorsConnectorOutputWithContext(context.Background())
}

func (i GetTwingateConnectorsConnectorArgs) ToGetTwingateConnectorsConnectorOutputWithContext(ctx context.Context) GetTwingateConnectorsConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateConnectorsConnectorOutput)
}

func (i GetTwingateConnectorsConnectorArgs) ToOutput(ctx context.Context) pulumix.Output[GetTwingateConnectorsConnector] {
	return pulumix.Output[GetTwingateConnectorsConnector]{
		OutputState: i.ToGetTwingateConnectorsConnectorOutputWithContext(ctx).OutputState,
	}
}

// GetTwingateConnectorsConnectorArrayInput is an input type that accepts GetTwingateConnectorsConnectorArray and GetTwingateConnectorsConnectorArrayOutput values.
// You can construct a concrete instance of `GetTwingateConnectorsConnectorArrayInput` via:
//
//	GetTwingateConnectorsConnectorArray{ GetTwingateConnectorsConnectorArgs{...} }
type GetTwingateConnectorsConnectorArrayInput interface {
	pulumi.Input

	ToGetTwingateConnectorsConnectorArrayOutput() GetTwingateConnectorsConnectorArrayOutput
	ToGetTwingateConnectorsConnectorArrayOutputWithContext(context.Context) GetTwingateConnectorsConnectorArrayOutput
}

type GetTwingateConnectorsConnectorArray []GetTwingateConnectorsConnectorInput

func (GetTwingateConnectorsConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateConnectorsConnector)(nil)).Elem()
}

func (i GetTwingateConnectorsConnectorArray) ToGetTwingateConnectorsConnectorArrayOutput() GetTwingateConnectorsConnectorArrayOutput {
	return i.ToGetTwingateConnectorsConnectorArrayOutputWithContext(context.Background())
}

func (i GetTwingateConnectorsConnectorArray) ToGetTwingateConnectorsConnectorArrayOutputWithContext(ctx context.Context) GetTwingateConnectorsConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateConnectorsConnectorArrayOutput)
}

func (i GetTwingateConnectorsConnectorArray) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateConnectorsConnector] {
	return pulumix.Output[[]GetTwingateConnectorsConnector]{
		OutputState: i.ToGetTwingateConnectorsConnectorArrayOutputWithContext(ctx).OutputState,
	}
}

type GetTwingateConnectorsConnectorOutput struct{ *pulumi.OutputState }

func (GetTwingateConnectorsConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateConnectorsConnector)(nil)).Elem()
}

func (o GetTwingateConnectorsConnectorOutput) ToGetTwingateConnectorsConnectorOutput() GetTwingateConnectorsConnectorOutput {
	return o
}

func (o GetTwingateConnectorsConnectorOutput) ToGetTwingateConnectorsConnectorOutputWithContext(ctx context.Context) GetTwingateConnectorsConnectorOutput {
	return o
}

func (o GetTwingateConnectorsConnectorOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateConnectorsConnector] {
	return pulumix.Output[GetTwingateConnectorsConnector]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateConnectorsConnectorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateConnectorsConnector) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTwingateConnectorsConnectorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateConnectorsConnector) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTwingateConnectorsConnectorOutput) RemoteNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateConnectorsConnector) string { return v.RemoteNetworkId }).(pulumi.StringOutput)
}

func (o GetTwingateConnectorsConnectorOutput) StatusUpdatesEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTwingateConnectorsConnector) bool { return v.StatusUpdatesEnabled }).(pulumi.BoolOutput)
}

type GetTwingateConnectorsConnectorArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateConnectorsConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateConnectorsConnector)(nil)).Elem()
}

func (o GetTwingateConnectorsConnectorArrayOutput) ToGetTwingateConnectorsConnectorArrayOutput() GetTwingateConnectorsConnectorArrayOutput {
	return o
}

func (o GetTwingateConnectorsConnectorArrayOutput) ToGetTwingateConnectorsConnectorArrayOutputWithContext(ctx context.Context) GetTwingateConnectorsConnectorArrayOutput {
	return o
}

func (o GetTwingateConnectorsConnectorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateConnectorsConnector] {
	return pulumix.Output[[]GetTwingateConnectorsConnector]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateConnectorsConnectorArrayOutput) Index(i pulumi.IntInput) GetTwingateConnectorsConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateConnectorsConnector {
		return vs[0].([]GetTwingateConnectorsConnector)[vs[1].(int)]
	}).(GetTwingateConnectorsConnectorOutput)
}

type GetTwingateGroupsGroup struct {
	Id               string `pulumi:"id"`
	IsActive         bool   `pulumi:"isActive"`
	Name             string `pulumi:"name"`
	SecurityPolicyId string `pulumi:"securityPolicyId"`
	Type             string `pulumi:"type"`
}

// GetTwingateGroupsGroupInput is an input type that accepts GetTwingateGroupsGroupArgs and GetTwingateGroupsGroupOutput values.
// You can construct a concrete instance of `GetTwingateGroupsGroupInput` via:
//
//	GetTwingateGroupsGroupArgs{...}
type GetTwingateGroupsGroupInput interface {
	pulumi.Input

	ToGetTwingateGroupsGroupOutput() GetTwingateGroupsGroupOutput
	ToGetTwingateGroupsGroupOutputWithContext(context.Context) GetTwingateGroupsGroupOutput
}

type GetTwingateGroupsGroupArgs struct {
	Id               pulumi.StringInput `pulumi:"id"`
	IsActive         pulumi.BoolInput   `pulumi:"isActive"`
	Name             pulumi.StringInput `pulumi:"name"`
	SecurityPolicyId pulumi.StringInput `pulumi:"securityPolicyId"`
	Type             pulumi.StringInput `pulumi:"type"`
}

func (GetTwingateGroupsGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateGroupsGroup)(nil)).Elem()
}

func (i GetTwingateGroupsGroupArgs) ToGetTwingateGroupsGroupOutput() GetTwingateGroupsGroupOutput {
	return i.ToGetTwingateGroupsGroupOutputWithContext(context.Background())
}

func (i GetTwingateGroupsGroupArgs) ToGetTwingateGroupsGroupOutputWithContext(ctx context.Context) GetTwingateGroupsGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateGroupsGroupOutput)
}

func (i GetTwingateGroupsGroupArgs) ToOutput(ctx context.Context) pulumix.Output[GetTwingateGroupsGroup] {
	return pulumix.Output[GetTwingateGroupsGroup]{
		OutputState: i.ToGetTwingateGroupsGroupOutputWithContext(ctx).OutputState,
	}
}

// GetTwingateGroupsGroupArrayInput is an input type that accepts GetTwingateGroupsGroupArray and GetTwingateGroupsGroupArrayOutput values.
// You can construct a concrete instance of `GetTwingateGroupsGroupArrayInput` via:
//
//	GetTwingateGroupsGroupArray{ GetTwingateGroupsGroupArgs{...} }
type GetTwingateGroupsGroupArrayInput interface {
	pulumi.Input

	ToGetTwingateGroupsGroupArrayOutput() GetTwingateGroupsGroupArrayOutput
	ToGetTwingateGroupsGroupArrayOutputWithContext(context.Context) GetTwingateGroupsGroupArrayOutput
}

type GetTwingateGroupsGroupArray []GetTwingateGroupsGroupInput

func (GetTwingateGroupsGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateGroupsGroup)(nil)).Elem()
}

func (i GetTwingateGroupsGroupArray) ToGetTwingateGroupsGroupArrayOutput() GetTwingateGroupsGroupArrayOutput {
	return i.ToGetTwingateGroupsGroupArrayOutputWithContext(context.Background())
}

func (i GetTwingateGroupsGroupArray) ToGetTwingateGroupsGroupArrayOutputWithContext(ctx context.Context) GetTwingateGroupsGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateGroupsGroupArrayOutput)
}

func (i GetTwingateGroupsGroupArray) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateGroupsGroup] {
	return pulumix.Output[[]GetTwingateGroupsGroup]{
		OutputState: i.ToGetTwingateGroupsGroupArrayOutputWithContext(ctx).OutputState,
	}
}

type GetTwingateGroupsGroupOutput struct{ *pulumi.OutputState }

func (GetTwingateGroupsGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateGroupsGroup)(nil)).Elem()
}

func (o GetTwingateGroupsGroupOutput) ToGetTwingateGroupsGroupOutput() GetTwingateGroupsGroupOutput {
	return o
}

func (o GetTwingateGroupsGroupOutput) ToGetTwingateGroupsGroupOutputWithContext(ctx context.Context) GetTwingateGroupsGroupOutput {
	return o
}

func (o GetTwingateGroupsGroupOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateGroupsGroup] {
	return pulumix.Output[GetTwingateGroupsGroup]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateGroupsGroupOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateGroupsGroup) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTwingateGroupsGroupOutput) IsActive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTwingateGroupsGroup) bool { return v.IsActive }).(pulumi.BoolOutput)
}

func (o GetTwingateGroupsGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateGroupsGroup) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTwingateGroupsGroupOutput) SecurityPolicyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateGroupsGroup) string { return v.SecurityPolicyId }).(pulumi.StringOutput)
}

func (o GetTwingateGroupsGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateGroupsGroup) string { return v.Type }).(pulumi.StringOutput)
}

type GetTwingateGroupsGroupArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateGroupsGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateGroupsGroup)(nil)).Elem()
}

func (o GetTwingateGroupsGroupArrayOutput) ToGetTwingateGroupsGroupArrayOutput() GetTwingateGroupsGroupArrayOutput {
	return o
}

func (o GetTwingateGroupsGroupArrayOutput) ToGetTwingateGroupsGroupArrayOutputWithContext(ctx context.Context) GetTwingateGroupsGroupArrayOutput {
	return o
}

func (o GetTwingateGroupsGroupArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateGroupsGroup] {
	return pulumix.Output[[]GetTwingateGroupsGroup]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateGroupsGroupArrayOutput) Index(i pulumi.IntInput) GetTwingateGroupsGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateGroupsGroup {
		return vs[0].([]GetTwingateGroupsGroup)[vs[1].(int)]
	}).(GetTwingateGroupsGroupOutput)
}

type GetTwingateRemoteNetworksRemoteNetwork struct {
	Id       string `pulumi:"id"`
	Location string `pulumi:"location"`
	Name     string `pulumi:"name"`
}

// GetTwingateRemoteNetworksRemoteNetworkInput is an input type that accepts GetTwingateRemoteNetworksRemoteNetworkArgs and GetTwingateRemoteNetworksRemoteNetworkOutput values.
// You can construct a concrete instance of `GetTwingateRemoteNetworksRemoteNetworkInput` via:
//
//	GetTwingateRemoteNetworksRemoteNetworkArgs{...}
type GetTwingateRemoteNetworksRemoteNetworkInput interface {
	pulumi.Input

	ToGetTwingateRemoteNetworksRemoteNetworkOutput() GetTwingateRemoteNetworksRemoteNetworkOutput
	ToGetTwingateRemoteNetworksRemoteNetworkOutputWithContext(context.Context) GetTwingateRemoteNetworksRemoteNetworkOutput
}

type GetTwingateRemoteNetworksRemoteNetworkArgs struct {
	Id       pulumi.StringInput `pulumi:"id"`
	Location pulumi.StringInput `pulumi:"location"`
	Name     pulumi.StringInput `pulumi:"name"`
}

func (GetTwingateRemoteNetworksRemoteNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateRemoteNetworksRemoteNetwork)(nil)).Elem()
}

func (i GetTwingateRemoteNetworksRemoteNetworkArgs) ToGetTwingateRemoteNetworksRemoteNetworkOutput() GetTwingateRemoteNetworksRemoteNetworkOutput {
	return i.ToGetTwingateRemoteNetworksRemoteNetworkOutputWithContext(context.Background())
}

func (i GetTwingateRemoteNetworksRemoteNetworkArgs) ToGetTwingateRemoteNetworksRemoteNetworkOutputWithContext(ctx context.Context) GetTwingateRemoteNetworksRemoteNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateRemoteNetworksRemoteNetworkOutput)
}

func (i GetTwingateRemoteNetworksRemoteNetworkArgs) ToOutput(ctx context.Context) pulumix.Output[GetTwingateRemoteNetworksRemoteNetwork] {
	return pulumix.Output[GetTwingateRemoteNetworksRemoteNetwork]{
		OutputState: i.ToGetTwingateRemoteNetworksRemoteNetworkOutputWithContext(ctx).OutputState,
	}
}

// GetTwingateRemoteNetworksRemoteNetworkArrayInput is an input type that accepts GetTwingateRemoteNetworksRemoteNetworkArray and GetTwingateRemoteNetworksRemoteNetworkArrayOutput values.
// You can construct a concrete instance of `GetTwingateRemoteNetworksRemoteNetworkArrayInput` via:
//
//	GetTwingateRemoteNetworksRemoteNetworkArray{ GetTwingateRemoteNetworksRemoteNetworkArgs{...} }
type GetTwingateRemoteNetworksRemoteNetworkArrayInput interface {
	pulumi.Input

	ToGetTwingateRemoteNetworksRemoteNetworkArrayOutput() GetTwingateRemoteNetworksRemoteNetworkArrayOutput
	ToGetTwingateRemoteNetworksRemoteNetworkArrayOutputWithContext(context.Context) GetTwingateRemoteNetworksRemoteNetworkArrayOutput
}

type GetTwingateRemoteNetworksRemoteNetworkArray []GetTwingateRemoteNetworksRemoteNetworkInput

func (GetTwingateRemoteNetworksRemoteNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateRemoteNetworksRemoteNetwork)(nil)).Elem()
}

func (i GetTwingateRemoteNetworksRemoteNetworkArray) ToGetTwingateRemoteNetworksRemoteNetworkArrayOutput() GetTwingateRemoteNetworksRemoteNetworkArrayOutput {
	return i.ToGetTwingateRemoteNetworksRemoteNetworkArrayOutputWithContext(context.Background())
}

func (i GetTwingateRemoteNetworksRemoteNetworkArray) ToGetTwingateRemoteNetworksRemoteNetworkArrayOutputWithContext(ctx context.Context) GetTwingateRemoteNetworksRemoteNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateRemoteNetworksRemoteNetworkArrayOutput)
}

func (i GetTwingateRemoteNetworksRemoteNetworkArray) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateRemoteNetworksRemoteNetwork] {
	return pulumix.Output[[]GetTwingateRemoteNetworksRemoteNetwork]{
		OutputState: i.ToGetTwingateRemoteNetworksRemoteNetworkArrayOutputWithContext(ctx).OutputState,
	}
}

type GetTwingateRemoteNetworksRemoteNetworkOutput struct{ *pulumi.OutputState }

func (GetTwingateRemoteNetworksRemoteNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateRemoteNetworksRemoteNetwork)(nil)).Elem()
}

func (o GetTwingateRemoteNetworksRemoteNetworkOutput) ToGetTwingateRemoteNetworksRemoteNetworkOutput() GetTwingateRemoteNetworksRemoteNetworkOutput {
	return o
}

func (o GetTwingateRemoteNetworksRemoteNetworkOutput) ToGetTwingateRemoteNetworksRemoteNetworkOutputWithContext(ctx context.Context) GetTwingateRemoteNetworksRemoteNetworkOutput {
	return o
}

func (o GetTwingateRemoteNetworksRemoteNetworkOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateRemoteNetworksRemoteNetwork] {
	return pulumix.Output[GetTwingateRemoteNetworksRemoteNetwork]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateRemoteNetworksRemoteNetworkOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateRemoteNetworksRemoteNetwork) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTwingateRemoteNetworksRemoteNetworkOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateRemoteNetworksRemoteNetwork) string { return v.Location }).(pulumi.StringOutput)
}

func (o GetTwingateRemoteNetworksRemoteNetworkOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateRemoteNetworksRemoteNetwork) string { return v.Name }).(pulumi.StringOutput)
}

type GetTwingateRemoteNetworksRemoteNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateRemoteNetworksRemoteNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateRemoteNetworksRemoteNetwork)(nil)).Elem()
}

func (o GetTwingateRemoteNetworksRemoteNetworkArrayOutput) ToGetTwingateRemoteNetworksRemoteNetworkArrayOutput() GetTwingateRemoteNetworksRemoteNetworkArrayOutput {
	return o
}

func (o GetTwingateRemoteNetworksRemoteNetworkArrayOutput) ToGetTwingateRemoteNetworksRemoteNetworkArrayOutputWithContext(ctx context.Context) GetTwingateRemoteNetworksRemoteNetworkArrayOutput {
	return o
}

func (o GetTwingateRemoteNetworksRemoteNetworkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateRemoteNetworksRemoteNetwork] {
	return pulumix.Output[[]GetTwingateRemoteNetworksRemoteNetwork]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateRemoteNetworksRemoteNetworkArrayOutput) Index(i pulumi.IntInput) GetTwingateRemoteNetworksRemoteNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateRemoteNetworksRemoteNetwork {
		return vs[0].([]GetTwingateRemoteNetworksRemoteNetwork)[vs[1].(int)]
	}).(GetTwingateRemoteNetworksRemoteNetworkOutput)
}

type GetTwingateResourceProtocols struct {
	AllowIcmp bool                             `pulumi:"allowIcmp"`
	Tcp       *GetTwingateResourceProtocolsTcp `pulumi:"tcp"`
	Udp       *GetTwingateResourceProtocolsUdp `pulumi:"udp"`
}

// GetTwingateResourceProtocolsInput is an input type that accepts GetTwingateResourceProtocolsArgs and GetTwingateResourceProtocolsOutput values.
// You can construct a concrete instance of `GetTwingateResourceProtocolsInput` via:
//
//	GetTwingateResourceProtocolsArgs{...}
type GetTwingateResourceProtocolsInput interface {
	pulumi.Input

	ToGetTwingateResourceProtocolsOutput() GetTwingateResourceProtocolsOutput
	ToGetTwingateResourceProtocolsOutputWithContext(context.Context) GetTwingateResourceProtocolsOutput
}

type GetTwingateResourceProtocolsArgs struct {
	AllowIcmp pulumi.BoolInput                        `pulumi:"allowIcmp"`
	Tcp       GetTwingateResourceProtocolsTcpPtrInput `pulumi:"tcp"`
	Udp       GetTwingateResourceProtocolsUdpPtrInput `pulumi:"udp"`
}

func (GetTwingateResourceProtocolsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourceProtocols)(nil)).Elem()
}

func (i GetTwingateResourceProtocolsArgs) ToGetTwingateResourceProtocolsOutput() GetTwingateResourceProtocolsOutput {
	return i.ToGetTwingateResourceProtocolsOutputWithContext(context.Background())
}

func (i GetTwingateResourceProtocolsArgs) ToGetTwingateResourceProtocolsOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolsOutput)
}

func (i GetTwingateResourceProtocolsArgs) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourceProtocols] {
	return pulumix.Output[GetTwingateResourceProtocols]{
		OutputState: i.ToGetTwingateResourceProtocolsOutputWithContext(ctx).OutputState,
	}
}

func (i GetTwingateResourceProtocolsArgs) ToGetTwingateResourceProtocolsPtrOutput() GetTwingateResourceProtocolsPtrOutput {
	return i.ToGetTwingateResourceProtocolsPtrOutputWithContext(context.Background())
}

func (i GetTwingateResourceProtocolsArgs) ToGetTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolsOutput).ToGetTwingateResourceProtocolsPtrOutputWithContext(ctx)
}

// GetTwingateResourceProtocolsPtrInput is an input type that accepts GetTwingateResourceProtocolsArgs, GetTwingateResourceProtocolsPtr and GetTwingateResourceProtocolsPtrOutput values.
// You can construct a concrete instance of `GetTwingateResourceProtocolsPtrInput` via:
//
//	        GetTwingateResourceProtocolsArgs{...}
//
//	or:
//
//	        nil
type GetTwingateResourceProtocolsPtrInput interface {
	pulumi.Input

	ToGetTwingateResourceProtocolsPtrOutput() GetTwingateResourceProtocolsPtrOutput
	ToGetTwingateResourceProtocolsPtrOutputWithContext(context.Context) GetTwingateResourceProtocolsPtrOutput
}

type getTwingateResourceProtocolsPtrType GetTwingateResourceProtocolsArgs

func GetTwingateResourceProtocolsPtr(v *GetTwingateResourceProtocolsArgs) GetTwingateResourceProtocolsPtrInput {
	return (*getTwingateResourceProtocolsPtrType)(v)
}

func (*getTwingateResourceProtocolsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTwingateResourceProtocols)(nil)).Elem()
}

func (i *getTwingateResourceProtocolsPtrType) ToGetTwingateResourceProtocolsPtrOutput() GetTwingateResourceProtocolsPtrOutput {
	return i.ToGetTwingateResourceProtocolsPtrOutputWithContext(context.Background())
}

func (i *getTwingateResourceProtocolsPtrType) ToGetTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolsPtrOutput)
}

func (i *getTwingateResourceProtocolsPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetTwingateResourceProtocols] {
	return pulumix.Output[*GetTwingateResourceProtocols]{
		OutputState: i.ToGetTwingateResourceProtocolsPtrOutputWithContext(ctx).OutputState,
	}
}

type GetTwingateResourceProtocolsOutput struct{ *pulumi.OutputState }

func (GetTwingateResourceProtocolsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourceProtocols)(nil)).Elem()
}

func (o GetTwingateResourceProtocolsOutput) ToGetTwingateResourceProtocolsOutput() GetTwingateResourceProtocolsOutput {
	return o
}

func (o GetTwingateResourceProtocolsOutput) ToGetTwingateResourceProtocolsOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsOutput {
	return o
}

func (o GetTwingateResourceProtocolsOutput) ToGetTwingateResourceProtocolsPtrOutput() GetTwingateResourceProtocolsPtrOutput {
	return o.ToGetTwingateResourceProtocolsPtrOutputWithContext(context.Background())
}

func (o GetTwingateResourceProtocolsOutput) ToGetTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetTwingateResourceProtocols) *GetTwingateResourceProtocols {
		return &v
	}).(GetTwingateResourceProtocolsPtrOutput)
}

func (o GetTwingateResourceProtocolsOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourceProtocols] {
	return pulumix.Output[GetTwingateResourceProtocols]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateResourceProtocolsOutput) AllowIcmp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocols) bool { return v.AllowIcmp }).(pulumi.BoolOutput)
}

func (o GetTwingateResourceProtocolsOutput) Tcp() GetTwingateResourceProtocolsTcpPtrOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocols) *GetTwingateResourceProtocolsTcp { return v.Tcp }).(GetTwingateResourceProtocolsTcpPtrOutput)
}

func (o GetTwingateResourceProtocolsOutput) Udp() GetTwingateResourceProtocolsUdpPtrOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocols) *GetTwingateResourceProtocolsUdp { return v.Udp }).(GetTwingateResourceProtocolsUdpPtrOutput)
}

type GetTwingateResourceProtocolsPtrOutput struct{ *pulumi.OutputState }

func (GetTwingateResourceProtocolsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTwingateResourceProtocols)(nil)).Elem()
}

func (o GetTwingateResourceProtocolsPtrOutput) ToGetTwingateResourceProtocolsPtrOutput() GetTwingateResourceProtocolsPtrOutput {
	return o
}

func (o GetTwingateResourceProtocolsPtrOutput) ToGetTwingateResourceProtocolsPtrOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsPtrOutput {
	return o
}

func (o GetTwingateResourceProtocolsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetTwingateResourceProtocols] {
	return pulumix.Output[*GetTwingateResourceProtocols]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateResourceProtocolsPtrOutput) Elem() GetTwingateResourceProtocolsOutput {
	return o.ApplyT(func(v *GetTwingateResourceProtocols) GetTwingateResourceProtocols {
		if v != nil {
			return *v
		}
		var ret GetTwingateResourceProtocols
		return ret
	}).(GetTwingateResourceProtocolsOutput)
}

func (o GetTwingateResourceProtocolsPtrOutput) AllowIcmp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetTwingateResourceProtocols) *bool {
		if v == nil {
			return nil
		}
		return &v.AllowIcmp
	}).(pulumi.BoolPtrOutput)
}

func (o GetTwingateResourceProtocolsPtrOutput) Tcp() GetTwingateResourceProtocolsTcpPtrOutput {
	return o.ApplyT(func(v *GetTwingateResourceProtocols) *GetTwingateResourceProtocolsTcp {
		if v == nil {
			return nil
		}
		return v.Tcp
	}).(GetTwingateResourceProtocolsTcpPtrOutput)
}

func (o GetTwingateResourceProtocolsPtrOutput) Udp() GetTwingateResourceProtocolsUdpPtrOutput {
	return o.ApplyT(func(v *GetTwingateResourceProtocols) *GetTwingateResourceProtocolsUdp {
		if v == nil {
			return nil
		}
		return v.Udp
	}).(GetTwingateResourceProtocolsUdpPtrOutput)
}

type GetTwingateResourceProtocolsTcp struct {
	Policy string   `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// GetTwingateResourceProtocolsTcpInput is an input type that accepts GetTwingateResourceProtocolsTcpArgs and GetTwingateResourceProtocolsTcpOutput values.
// You can construct a concrete instance of `GetTwingateResourceProtocolsTcpInput` via:
//
//	GetTwingateResourceProtocolsTcpArgs{...}
type GetTwingateResourceProtocolsTcpInput interface {
	pulumi.Input

	ToGetTwingateResourceProtocolsTcpOutput() GetTwingateResourceProtocolsTcpOutput
	ToGetTwingateResourceProtocolsTcpOutputWithContext(context.Context) GetTwingateResourceProtocolsTcpOutput
}

type GetTwingateResourceProtocolsTcpArgs struct {
	Policy pulumi.StringInput      `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (GetTwingateResourceProtocolsTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourceProtocolsTcp)(nil)).Elem()
}

func (i GetTwingateResourceProtocolsTcpArgs) ToGetTwingateResourceProtocolsTcpOutput() GetTwingateResourceProtocolsTcpOutput {
	return i.ToGetTwingateResourceProtocolsTcpOutputWithContext(context.Background())
}

func (i GetTwingateResourceProtocolsTcpArgs) ToGetTwingateResourceProtocolsTcpOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolsTcpOutput)
}

func (i GetTwingateResourceProtocolsTcpArgs) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourceProtocolsTcp] {
	return pulumix.Output[GetTwingateResourceProtocolsTcp]{
		OutputState: i.ToGetTwingateResourceProtocolsTcpOutputWithContext(ctx).OutputState,
	}
}

func (i GetTwingateResourceProtocolsTcpArgs) ToGetTwingateResourceProtocolsTcpPtrOutput() GetTwingateResourceProtocolsTcpPtrOutput {
	return i.ToGetTwingateResourceProtocolsTcpPtrOutputWithContext(context.Background())
}

func (i GetTwingateResourceProtocolsTcpArgs) ToGetTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolsTcpOutput).ToGetTwingateResourceProtocolsTcpPtrOutputWithContext(ctx)
}

// GetTwingateResourceProtocolsTcpPtrInput is an input type that accepts GetTwingateResourceProtocolsTcpArgs, GetTwingateResourceProtocolsTcpPtr and GetTwingateResourceProtocolsTcpPtrOutput values.
// You can construct a concrete instance of `GetTwingateResourceProtocolsTcpPtrInput` via:
//
//	        GetTwingateResourceProtocolsTcpArgs{...}
//
//	or:
//
//	        nil
type GetTwingateResourceProtocolsTcpPtrInput interface {
	pulumi.Input

	ToGetTwingateResourceProtocolsTcpPtrOutput() GetTwingateResourceProtocolsTcpPtrOutput
	ToGetTwingateResourceProtocolsTcpPtrOutputWithContext(context.Context) GetTwingateResourceProtocolsTcpPtrOutput
}

type getTwingateResourceProtocolsTcpPtrType GetTwingateResourceProtocolsTcpArgs

func GetTwingateResourceProtocolsTcpPtr(v *GetTwingateResourceProtocolsTcpArgs) GetTwingateResourceProtocolsTcpPtrInput {
	return (*getTwingateResourceProtocolsTcpPtrType)(v)
}

func (*getTwingateResourceProtocolsTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTwingateResourceProtocolsTcp)(nil)).Elem()
}

func (i *getTwingateResourceProtocolsTcpPtrType) ToGetTwingateResourceProtocolsTcpPtrOutput() GetTwingateResourceProtocolsTcpPtrOutput {
	return i.ToGetTwingateResourceProtocolsTcpPtrOutputWithContext(context.Background())
}

func (i *getTwingateResourceProtocolsTcpPtrType) ToGetTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolsTcpPtrOutput)
}

func (i *getTwingateResourceProtocolsTcpPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetTwingateResourceProtocolsTcp] {
	return pulumix.Output[*GetTwingateResourceProtocolsTcp]{
		OutputState: i.ToGetTwingateResourceProtocolsTcpPtrOutputWithContext(ctx).OutputState,
	}
}

type GetTwingateResourceProtocolsTcpOutput struct{ *pulumi.OutputState }

func (GetTwingateResourceProtocolsTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourceProtocolsTcp)(nil)).Elem()
}

func (o GetTwingateResourceProtocolsTcpOutput) ToGetTwingateResourceProtocolsTcpOutput() GetTwingateResourceProtocolsTcpOutput {
	return o
}

func (o GetTwingateResourceProtocolsTcpOutput) ToGetTwingateResourceProtocolsTcpOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsTcpOutput {
	return o
}

func (o GetTwingateResourceProtocolsTcpOutput) ToGetTwingateResourceProtocolsTcpPtrOutput() GetTwingateResourceProtocolsTcpPtrOutput {
	return o.ToGetTwingateResourceProtocolsTcpPtrOutputWithContext(context.Background())
}

func (o GetTwingateResourceProtocolsTcpOutput) ToGetTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetTwingateResourceProtocolsTcp) *GetTwingateResourceProtocolsTcp {
		return &v
	}).(GetTwingateResourceProtocolsTcpPtrOutput)
}

func (o GetTwingateResourceProtocolsTcpOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourceProtocolsTcp] {
	return pulumix.Output[GetTwingateResourceProtocolsTcp]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateResourceProtocolsTcpOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocolsTcp) string { return v.Policy }).(pulumi.StringOutput)
}

func (o GetTwingateResourceProtocolsTcpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocolsTcp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type GetTwingateResourceProtocolsTcpPtrOutput struct{ *pulumi.OutputState }

func (GetTwingateResourceProtocolsTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTwingateResourceProtocolsTcp)(nil)).Elem()
}

func (o GetTwingateResourceProtocolsTcpPtrOutput) ToGetTwingateResourceProtocolsTcpPtrOutput() GetTwingateResourceProtocolsTcpPtrOutput {
	return o
}

func (o GetTwingateResourceProtocolsTcpPtrOutput) ToGetTwingateResourceProtocolsTcpPtrOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsTcpPtrOutput {
	return o
}

func (o GetTwingateResourceProtocolsTcpPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetTwingateResourceProtocolsTcp] {
	return pulumix.Output[*GetTwingateResourceProtocolsTcp]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateResourceProtocolsTcpPtrOutput) Elem() GetTwingateResourceProtocolsTcpOutput {
	return o.ApplyT(func(v *GetTwingateResourceProtocolsTcp) GetTwingateResourceProtocolsTcp {
		if v != nil {
			return *v
		}
		var ret GetTwingateResourceProtocolsTcp
		return ret
	}).(GetTwingateResourceProtocolsTcpOutput)
}

func (o GetTwingateResourceProtocolsTcpPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTwingateResourceProtocolsTcp) *string {
		if v == nil {
			return nil
		}
		return &v.Policy
	}).(pulumi.StringPtrOutput)
}

func (o GetTwingateResourceProtocolsTcpPtrOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetTwingateResourceProtocolsTcp) []string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringArrayOutput)
}

type GetTwingateResourceProtocolsUdp struct {
	Policy string   `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// GetTwingateResourceProtocolsUdpInput is an input type that accepts GetTwingateResourceProtocolsUdpArgs and GetTwingateResourceProtocolsUdpOutput values.
// You can construct a concrete instance of `GetTwingateResourceProtocolsUdpInput` via:
//
//	GetTwingateResourceProtocolsUdpArgs{...}
type GetTwingateResourceProtocolsUdpInput interface {
	pulumi.Input

	ToGetTwingateResourceProtocolsUdpOutput() GetTwingateResourceProtocolsUdpOutput
	ToGetTwingateResourceProtocolsUdpOutputWithContext(context.Context) GetTwingateResourceProtocolsUdpOutput
}

type GetTwingateResourceProtocolsUdpArgs struct {
	Policy pulumi.StringInput      `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (GetTwingateResourceProtocolsUdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourceProtocolsUdp)(nil)).Elem()
}

func (i GetTwingateResourceProtocolsUdpArgs) ToGetTwingateResourceProtocolsUdpOutput() GetTwingateResourceProtocolsUdpOutput {
	return i.ToGetTwingateResourceProtocolsUdpOutputWithContext(context.Background())
}

func (i GetTwingateResourceProtocolsUdpArgs) ToGetTwingateResourceProtocolsUdpOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsUdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolsUdpOutput)
}

func (i GetTwingateResourceProtocolsUdpArgs) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourceProtocolsUdp] {
	return pulumix.Output[GetTwingateResourceProtocolsUdp]{
		OutputState: i.ToGetTwingateResourceProtocolsUdpOutputWithContext(ctx).OutputState,
	}
}

func (i GetTwingateResourceProtocolsUdpArgs) ToGetTwingateResourceProtocolsUdpPtrOutput() GetTwingateResourceProtocolsUdpPtrOutput {
	return i.ToGetTwingateResourceProtocolsUdpPtrOutputWithContext(context.Background())
}

func (i GetTwingateResourceProtocolsUdpArgs) ToGetTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsUdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolsUdpOutput).ToGetTwingateResourceProtocolsUdpPtrOutputWithContext(ctx)
}

// GetTwingateResourceProtocolsUdpPtrInput is an input type that accepts GetTwingateResourceProtocolsUdpArgs, GetTwingateResourceProtocolsUdpPtr and GetTwingateResourceProtocolsUdpPtrOutput values.
// You can construct a concrete instance of `GetTwingateResourceProtocolsUdpPtrInput` via:
//
//	        GetTwingateResourceProtocolsUdpArgs{...}
//
//	or:
//
//	        nil
type GetTwingateResourceProtocolsUdpPtrInput interface {
	pulumi.Input

	ToGetTwingateResourceProtocolsUdpPtrOutput() GetTwingateResourceProtocolsUdpPtrOutput
	ToGetTwingateResourceProtocolsUdpPtrOutputWithContext(context.Context) GetTwingateResourceProtocolsUdpPtrOutput
}

type getTwingateResourceProtocolsUdpPtrType GetTwingateResourceProtocolsUdpArgs

func GetTwingateResourceProtocolsUdpPtr(v *GetTwingateResourceProtocolsUdpArgs) GetTwingateResourceProtocolsUdpPtrInput {
	return (*getTwingateResourceProtocolsUdpPtrType)(v)
}

func (*getTwingateResourceProtocolsUdpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTwingateResourceProtocolsUdp)(nil)).Elem()
}

func (i *getTwingateResourceProtocolsUdpPtrType) ToGetTwingateResourceProtocolsUdpPtrOutput() GetTwingateResourceProtocolsUdpPtrOutput {
	return i.ToGetTwingateResourceProtocolsUdpPtrOutputWithContext(context.Background())
}

func (i *getTwingateResourceProtocolsUdpPtrType) ToGetTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsUdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourceProtocolsUdpPtrOutput)
}

func (i *getTwingateResourceProtocolsUdpPtrType) ToOutput(ctx context.Context) pulumix.Output[*GetTwingateResourceProtocolsUdp] {
	return pulumix.Output[*GetTwingateResourceProtocolsUdp]{
		OutputState: i.ToGetTwingateResourceProtocolsUdpPtrOutputWithContext(ctx).OutputState,
	}
}

type GetTwingateResourceProtocolsUdpOutput struct{ *pulumi.OutputState }

func (GetTwingateResourceProtocolsUdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourceProtocolsUdp)(nil)).Elem()
}

func (o GetTwingateResourceProtocolsUdpOutput) ToGetTwingateResourceProtocolsUdpOutput() GetTwingateResourceProtocolsUdpOutput {
	return o
}

func (o GetTwingateResourceProtocolsUdpOutput) ToGetTwingateResourceProtocolsUdpOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsUdpOutput {
	return o
}

func (o GetTwingateResourceProtocolsUdpOutput) ToGetTwingateResourceProtocolsUdpPtrOutput() GetTwingateResourceProtocolsUdpPtrOutput {
	return o.ToGetTwingateResourceProtocolsUdpPtrOutputWithContext(context.Background())
}

func (o GetTwingateResourceProtocolsUdpOutput) ToGetTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsUdpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetTwingateResourceProtocolsUdp) *GetTwingateResourceProtocolsUdp {
		return &v
	}).(GetTwingateResourceProtocolsUdpPtrOutput)
}

func (o GetTwingateResourceProtocolsUdpOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourceProtocolsUdp] {
	return pulumix.Output[GetTwingateResourceProtocolsUdp]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateResourceProtocolsUdpOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocolsUdp) string { return v.Policy }).(pulumi.StringOutput)
}

func (o GetTwingateResourceProtocolsUdpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTwingateResourceProtocolsUdp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type GetTwingateResourceProtocolsUdpPtrOutput struct{ *pulumi.OutputState }

func (GetTwingateResourceProtocolsUdpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetTwingateResourceProtocolsUdp)(nil)).Elem()
}

func (o GetTwingateResourceProtocolsUdpPtrOutput) ToGetTwingateResourceProtocolsUdpPtrOutput() GetTwingateResourceProtocolsUdpPtrOutput {
	return o
}

func (o GetTwingateResourceProtocolsUdpPtrOutput) ToGetTwingateResourceProtocolsUdpPtrOutputWithContext(ctx context.Context) GetTwingateResourceProtocolsUdpPtrOutput {
	return o
}

func (o GetTwingateResourceProtocolsUdpPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*GetTwingateResourceProtocolsUdp] {
	return pulumix.Output[*GetTwingateResourceProtocolsUdp]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateResourceProtocolsUdpPtrOutput) Elem() GetTwingateResourceProtocolsUdpOutput {
	return o.ApplyT(func(v *GetTwingateResourceProtocolsUdp) GetTwingateResourceProtocolsUdp {
		if v != nil {
			return *v
		}
		var ret GetTwingateResourceProtocolsUdp
		return ret
	}).(GetTwingateResourceProtocolsUdpOutput)
}

func (o GetTwingateResourceProtocolsUdpPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetTwingateResourceProtocolsUdp) *string {
		if v == nil {
			return nil
		}
		return &v.Policy
	}).(pulumi.StringPtrOutput)
}

func (o GetTwingateResourceProtocolsUdpPtrOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetTwingateResourceProtocolsUdp) []string {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(pulumi.StringArrayOutput)
}

type GetTwingateResourcesResource struct {
	Address         string                                `pulumi:"address"`
	Id              string                                `pulumi:"id"`
	Name            string                                `pulumi:"name"`
	Protocols       GetTwingateResourcesResourceProtocols `pulumi:"protocols"`
	RemoteNetworkId string                                `pulumi:"remoteNetworkId"`
}

// GetTwingateResourcesResourceInput is an input type that accepts GetTwingateResourcesResourceArgs and GetTwingateResourcesResourceOutput values.
// You can construct a concrete instance of `GetTwingateResourcesResourceInput` via:
//
//	GetTwingateResourcesResourceArgs{...}
type GetTwingateResourcesResourceInput interface {
	pulumi.Input

	ToGetTwingateResourcesResourceOutput() GetTwingateResourcesResourceOutput
	ToGetTwingateResourcesResourceOutputWithContext(context.Context) GetTwingateResourcesResourceOutput
}

type GetTwingateResourcesResourceArgs struct {
	Address         pulumi.StringInput                         `pulumi:"address"`
	Id              pulumi.StringInput                         `pulumi:"id"`
	Name            pulumi.StringInput                         `pulumi:"name"`
	Protocols       GetTwingateResourcesResourceProtocolsInput `pulumi:"protocols"`
	RemoteNetworkId pulumi.StringInput                         `pulumi:"remoteNetworkId"`
}

func (GetTwingateResourcesResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResource)(nil)).Elem()
}

func (i GetTwingateResourcesResourceArgs) ToGetTwingateResourcesResourceOutput() GetTwingateResourcesResourceOutput {
	return i.ToGetTwingateResourcesResourceOutputWithContext(context.Background())
}

func (i GetTwingateResourcesResourceArgs) ToGetTwingateResourcesResourceOutputWithContext(ctx context.Context) GetTwingateResourcesResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourcesResourceOutput)
}

func (i GetTwingateResourcesResourceArgs) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourcesResource] {
	return pulumix.Output[GetTwingateResourcesResource]{
		OutputState: i.ToGetTwingateResourcesResourceOutputWithContext(ctx).OutputState,
	}
}

// GetTwingateResourcesResourceArrayInput is an input type that accepts GetTwingateResourcesResourceArray and GetTwingateResourcesResourceArrayOutput values.
// You can construct a concrete instance of `GetTwingateResourcesResourceArrayInput` via:
//
//	GetTwingateResourcesResourceArray{ GetTwingateResourcesResourceArgs{...} }
type GetTwingateResourcesResourceArrayInput interface {
	pulumi.Input

	ToGetTwingateResourcesResourceArrayOutput() GetTwingateResourcesResourceArrayOutput
	ToGetTwingateResourcesResourceArrayOutputWithContext(context.Context) GetTwingateResourcesResourceArrayOutput
}

type GetTwingateResourcesResourceArray []GetTwingateResourcesResourceInput

func (GetTwingateResourcesResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourcesResource)(nil)).Elem()
}

func (i GetTwingateResourcesResourceArray) ToGetTwingateResourcesResourceArrayOutput() GetTwingateResourcesResourceArrayOutput {
	return i.ToGetTwingateResourcesResourceArrayOutputWithContext(context.Background())
}

func (i GetTwingateResourcesResourceArray) ToGetTwingateResourcesResourceArrayOutputWithContext(ctx context.Context) GetTwingateResourcesResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourcesResourceArrayOutput)
}

func (i GetTwingateResourcesResourceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateResourcesResource] {
	return pulumix.Output[[]GetTwingateResourcesResource]{
		OutputState: i.ToGetTwingateResourcesResourceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetTwingateResourcesResourceOutput struct{ *pulumi.OutputState }

func (GetTwingateResourcesResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResource)(nil)).Elem()
}

func (o GetTwingateResourcesResourceOutput) ToGetTwingateResourcesResourceOutput() GetTwingateResourcesResourceOutput {
	return o
}

func (o GetTwingateResourcesResourceOutput) ToGetTwingateResourcesResourceOutputWithContext(ctx context.Context) GetTwingateResourcesResourceOutput {
	return o
}

func (o GetTwingateResourcesResourceOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourcesResource] {
	return pulumix.Output[GetTwingateResourcesResource]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateResourcesResourceOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourcesResource) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetTwingateResourcesResourceOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourcesResource) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTwingateResourcesResourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourcesResource) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTwingateResourcesResourceOutput) Protocols() GetTwingateResourcesResourceProtocolsOutput {
	return o.ApplyT(func(v GetTwingateResourcesResource) GetTwingateResourcesResourceProtocols { return v.Protocols }).(GetTwingateResourcesResourceProtocolsOutput)
}

func (o GetTwingateResourcesResourceOutput) RemoteNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourcesResource) string { return v.RemoteNetworkId }).(pulumi.StringOutput)
}

type GetTwingateResourcesResourceArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateResourcesResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateResourcesResource)(nil)).Elem()
}

func (o GetTwingateResourcesResourceArrayOutput) ToGetTwingateResourcesResourceArrayOutput() GetTwingateResourcesResourceArrayOutput {
	return o
}

func (o GetTwingateResourcesResourceArrayOutput) ToGetTwingateResourcesResourceArrayOutputWithContext(ctx context.Context) GetTwingateResourcesResourceArrayOutput {
	return o
}

func (o GetTwingateResourcesResourceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateResourcesResource] {
	return pulumix.Output[[]GetTwingateResourcesResource]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateResourcesResourceArrayOutput) Index(i pulumi.IntInput) GetTwingateResourcesResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateResourcesResource {
		return vs[0].([]GetTwingateResourcesResource)[vs[1].(int)]
	}).(GetTwingateResourcesResourceOutput)
}

type GetTwingateResourcesResourceProtocols struct {
	AllowIcmp bool                                     `pulumi:"allowIcmp"`
	Tcp       GetTwingateResourcesResourceProtocolsTcp `pulumi:"tcp"`
	Udp       GetTwingateResourcesResourceProtocolsUdp `pulumi:"udp"`
}

// GetTwingateResourcesResourceProtocolsInput is an input type that accepts GetTwingateResourcesResourceProtocolsArgs and GetTwingateResourcesResourceProtocolsOutput values.
// You can construct a concrete instance of `GetTwingateResourcesResourceProtocolsInput` via:
//
//	GetTwingateResourcesResourceProtocolsArgs{...}
type GetTwingateResourcesResourceProtocolsInput interface {
	pulumi.Input

	ToGetTwingateResourcesResourceProtocolsOutput() GetTwingateResourcesResourceProtocolsOutput
	ToGetTwingateResourcesResourceProtocolsOutputWithContext(context.Context) GetTwingateResourcesResourceProtocolsOutput
}

type GetTwingateResourcesResourceProtocolsArgs struct {
	AllowIcmp pulumi.BoolInput                              `pulumi:"allowIcmp"`
	Tcp       GetTwingateResourcesResourceProtocolsTcpInput `pulumi:"tcp"`
	Udp       GetTwingateResourcesResourceProtocolsUdpInput `pulumi:"udp"`
}

func (GetTwingateResourcesResourceProtocolsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResourceProtocols)(nil)).Elem()
}

func (i GetTwingateResourcesResourceProtocolsArgs) ToGetTwingateResourcesResourceProtocolsOutput() GetTwingateResourcesResourceProtocolsOutput {
	return i.ToGetTwingateResourcesResourceProtocolsOutputWithContext(context.Background())
}

func (i GetTwingateResourcesResourceProtocolsArgs) ToGetTwingateResourcesResourceProtocolsOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourcesResourceProtocolsOutput)
}

func (i GetTwingateResourcesResourceProtocolsArgs) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourcesResourceProtocols] {
	return pulumix.Output[GetTwingateResourcesResourceProtocols]{
		OutputState: i.ToGetTwingateResourcesResourceProtocolsOutputWithContext(ctx).OutputState,
	}
}

type GetTwingateResourcesResourceProtocolsOutput struct{ *pulumi.OutputState }

func (GetTwingateResourcesResourceProtocolsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResourceProtocols)(nil)).Elem()
}

func (o GetTwingateResourcesResourceProtocolsOutput) ToGetTwingateResourcesResourceProtocolsOutput() GetTwingateResourcesResourceProtocolsOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolsOutput) ToGetTwingateResourcesResourceProtocolsOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolsOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolsOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourcesResourceProtocols] {
	return pulumix.Output[GetTwingateResourcesResourceProtocols]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateResourcesResourceProtocolsOutput) AllowIcmp() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocols) bool { return v.AllowIcmp }).(pulumi.BoolOutput)
}

func (o GetTwingateResourcesResourceProtocolsOutput) Tcp() GetTwingateResourcesResourceProtocolsTcpOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocols) GetTwingateResourcesResourceProtocolsTcp { return v.Tcp }).(GetTwingateResourcesResourceProtocolsTcpOutput)
}

func (o GetTwingateResourcesResourceProtocolsOutput) Udp() GetTwingateResourcesResourceProtocolsUdpOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocols) GetTwingateResourcesResourceProtocolsUdp { return v.Udp }).(GetTwingateResourcesResourceProtocolsUdpOutput)
}

type GetTwingateResourcesResourceProtocolsTcp struct {
	Policy string   `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// GetTwingateResourcesResourceProtocolsTcpInput is an input type that accepts GetTwingateResourcesResourceProtocolsTcpArgs and GetTwingateResourcesResourceProtocolsTcpOutput values.
// You can construct a concrete instance of `GetTwingateResourcesResourceProtocolsTcpInput` via:
//
//	GetTwingateResourcesResourceProtocolsTcpArgs{...}
type GetTwingateResourcesResourceProtocolsTcpInput interface {
	pulumi.Input

	ToGetTwingateResourcesResourceProtocolsTcpOutput() GetTwingateResourcesResourceProtocolsTcpOutput
	ToGetTwingateResourcesResourceProtocolsTcpOutputWithContext(context.Context) GetTwingateResourcesResourceProtocolsTcpOutput
}

type GetTwingateResourcesResourceProtocolsTcpArgs struct {
	Policy pulumi.StringInput      `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (GetTwingateResourcesResourceProtocolsTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResourceProtocolsTcp)(nil)).Elem()
}

func (i GetTwingateResourcesResourceProtocolsTcpArgs) ToGetTwingateResourcesResourceProtocolsTcpOutput() GetTwingateResourcesResourceProtocolsTcpOutput {
	return i.ToGetTwingateResourcesResourceProtocolsTcpOutputWithContext(context.Background())
}

func (i GetTwingateResourcesResourceProtocolsTcpArgs) ToGetTwingateResourcesResourceProtocolsTcpOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolsTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourcesResourceProtocolsTcpOutput)
}

func (i GetTwingateResourcesResourceProtocolsTcpArgs) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourcesResourceProtocolsTcp] {
	return pulumix.Output[GetTwingateResourcesResourceProtocolsTcp]{
		OutputState: i.ToGetTwingateResourcesResourceProtocolsTcpOutputWithContext(ctx).OutputState,
	}
}

type GetTwingateResourcesResourceProtocolsTcpOutput struct{ *pulumi.OutputState }

func (GetTwingateResourcesResourceProtocolsTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResourceProtocolsTcp)(nil)).Elem()
}

func (o GetTwingateResourcesResourceProtocolsTcpOutput) ToGetTwingateResourcesResourceProtocolsTcpOutput() GetTwingateResourcesResourceProtocolsTcpOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolsTcpOutput) ToGetTwingateResourcesResourceProtocolsTcpOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolsTcpOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolsTcpOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourcesResourceProtocolsTcp] {
	return pulumix.Output[GetTwingateResourcesResourceProtocolsTcp]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateResourcesResourceProtocolsTcpOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocolsTcp) string { return v.Policy }).(pulumi.StringOutput)
}

func (o GetTwingateResourcesResourceProtocolsTcpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocolsTcp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type GetTwingateResourcesResourceProtocolsUdp struct {
	Policy string   `pulumi:"policy"`
	Ports  []string `pulumi:"ports"`
}

// GetTwingateResourcesResourceProtocolsUdpInput is an input type that accepts GetTwingateResourcesResourceProtocolsUdpArgs and GetTwingateResourcesResourceProtocolsUdpOutput values.
// You can construct a concrete instance of `GetTwingateResourcesResourceProtocolsUdpInput` via:
//
//	GetTwingateResourcesResourceProtocolsUdpArgs{...}
type GetTwingateResourcesResourceProtocolsUdpInput interface {
	pulumi.Input

	ToGetTwingateResourcesResourceProtocolsUdpOutput() GetTwingateResourcesResourceProtocolsUdpOutput
	ToGetTwingateResourcesResourceProtocolsUdpOutputWithContext(context.Context) GetTwingateResourcesResourceProtocolsUdpOutput
}

type GetTwingateResourcesResourceProtocolsUdpArgs struct {
	Policy pulumi.StringInput      `pulumi:"policy"`
	Ports  pulumi.StringArrayInput `pulumi:"ports"`
}

func (GetTwingateResourcesResourceProtocolsUdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResourceProtocolsUdp)(nil)).Elem()
}

func (i GetTwingateResourcesResourceProtocolsUdpArgs) ToGetTwingateResourcesResourceProtocolsUdpOutput() GetTwingateResourcesResourceProtocolsUdpOutput {
	return i.ToGetTwingateResourcesResourceProtocolsUdpOutputWithContext(context.Background())
}

func (i GetTwingateResourcesResourceProtocolsUdpArgs) ToGetTwingateResourcesResourceProtocolsUdpOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolsUdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateResourcesResourceProtocolsUdpOutput)
}

func (i GetTwingateResourcesResourceProtocolsUdpArgs) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourcesResourceProtocolsUdp] {
	return pulumix.Output[GetTwingateResourcesResourceProtocolsUdp]{
		OutputState: i.ToGetTwingateResourcesResourceProtocolsUdpOutputWithContext(ctx).OutputState,
	}
}

type GetTwingateResourcesResourceProtocolsUdpOutput struct{ *pulumi.OutputState }

func (GetTwingateResourcesResourceProtocolsUdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateResourcesResourceProtocolsUdp)(nil)).Elem()
}

func (o GetTwingateResourcesResourceProtocolsUdpOutput) ToGetTwingateResourcesResourceProtocolsUdpOutput() GetTwingateResourcesResourceProtocolsUdpOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolsUdpOutput) ToGetTwingateResourcesResourceProtocolsUdpOutputWithContext(ctx context.Context) GetTwingateResourcesResourceProtocolsUdpOutput {
	return o
}

func (o GetTwingateResourcesResourceProtocolsUdpOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateResourcesResourceProtocolsUdp] {
	return pulumix.Output[GetTwingateResourcesResourceProtocolsUdp]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateResourcesResourceProtocolsUdpOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocolsUdp) string { return v.Policy }).(pulumi.StringOutput)
}

func (o GetTwingateResourcesResourceProtocolsUdpOutput) Ports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTwingateResourcesResourceProtocolsUdp) []string { return v.Ports }).(pulumi.StringArrayOutput)
}

type GetTwingateSecurityPoliciesSecurityPolicy struct {
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetTwingateSecurityPoliciesSecurityPolicyInput is an input type that accepts GetTwingateSecurityPoliciesSecurityPolicyArgs and GetTwingateSecurityPoliciesSecurityPolicyOutput values.
// You can construct a concrete instance of `GetTwingateSecurityPoliciesSecurityPolicyInput` via:
//
//	GetTwingateSecurityPoliciesSecurityPolicyArgs{...}
type GetTwingateSecurityPoliciesSecurityPolicyInput interface {
	pulumi.Input

	ToGetTwingateSecurityPoliciesSecurityPolicyOutput() GetTwingateSecurityPoliciesSecurityPolicyOutput
	ToGetTwingateSecurityPoliciesSecurityPolicyOutputWithContext(context.Context) GetTwingateSecurityPoliciesSecurityPolicyOutput
}

type GetTwingateSecurityPoliciesSecurityPolicyArgs struct {
	Id   pulumi.StringInput `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetTwingateSecurityPoliciesSecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateSecurityPoliciesSecurityPolicy)(nil)).Elem()
}

func (i GetTwingateSecurityPoliciesSecurityPolicyArgs) ToGetTwingateSecurityPoliciesSecurityPolicyOutput() GetTwingateSecurityPoliciesSecurityPolicyOutput {
	return i.ToGetTwingateSecurityPoliciesSecurityPolicyOutputWithContext(context.Background())
}

func (i GetTwingateSecurityPoliciesSecurityPolicyArgs) ToGetTwingateSecurityPoliciesSecurityPolicyOutputWithContext(ctx context.Context) GetTwingateSecurityPoliciesSecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateSecurityPoliciesSecurityPolicyOutput)
}

func (i GetTwingateSecurityPoliciesSecurityPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[GetTwingateSecurityPoliciesSecurityPolicy] {
	return pulumix.Output[GetTwingateSecurityPoliciesSecurityPolicy]{
		OutputState: i.ToGetTwingateSecurityPoliciesSecurityPolicyOutputWithContext(ctx).OutputState,
	}
}

// GetTwingateSecurityPoliciesSecurityPolicyArrayInput is an input type that accepts GetTwingateSecurityPoliciesSecurityPolicyArray and GetTwingateSecurityPoliciesSecurityPolicyArrayOutput values.
// You can construct a concrete instance of `GetTwingateSecurityPoliciesSecurityPolicyArrayInput` via:
//
//	GetTwingateSecurityPoliciesSecurityPolicyArray{ GetTwingateSecurityPoliciesSecurityPolicyArgs{...} }
type GetTwingateSecurityPoliciesSecurityPolicyArrayInput interface {
	pulumi.Input

	ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutput() GetTwingateSecurityPoliciesSecurityPolicyArrayOutput
	ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutputWithContext(context.Context) GetTwingateSecurityPoliciesSecurityPolicyArrayOutput
}

type GetTwingateSecurityPoliciesSecurityPolicyArray []GetTwingateSecurityPoliciesSecurityPolicyInput

func (GetTwingateSecurityPoliciesSecurityPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateSecurityPoliciesSecurityPolicy)(nil)).Elem()
}

func (i GetTwingateSecurityPoliciesSecurityPolicyArray) ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutput() GetTwingateSecurityPoliciesSecurityPolicyArrayOutput {
	return i.ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutputWithContext(context.Background())
}

func (i GetTwingateSecurityPoliciesSecurityPolicyArray) ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutputWithContext(ctx context.Context) GetTwingateSecurityPoliciesSecurityPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateSecurityPoliciesSecurityPolicyArrayOutput)
}

func (i GetTwingateSecurityPoliciesSecurityPolicyArray) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateSecurityPoliciesSecurityPolicy] {
	return pulumix.Output[[]GetTwingateSecurityPoliciesSecurityPolicy]{
		OutputState: i.ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutputWithContext(ctx).OutputState,
	}
}

type GetTwingateSecurityPoliciesSecurityPolicyOutput struct{ *pulumi.OutputState }

func (GetTwingateSecurityPoliciesSecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateSecurityPoliciesSecurityPolicy)(nil)).Elem()
}

func (o GetTwingateSecurityPoliciesSecurityPolicyOutput) ToGetTwingateSecurityPoliciesSecurityPolicyOutput() GetTwingateSecurityPoliciesSecurityPolicyOutput {
	return o
}

func (o GetTwingateSecurityPoliciesSecurityPolicyOutput) ToGetTwingateSecurityPoliciesSecurityPolicyOutputWithContext(ctx context.Context) GetTwingateSecurityPoliciesSecurityPolicyOutput {
	return o
}

func (o GetTwingateSecurityPoliciesSecurityPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateSecurityPoliciesSecurityPolicy] {
	return pulumix.Output[GetTwingateSecurityPoliciesSecurityPolicy]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateSecurityPoliciesSecurityPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateSecurityPoliciesSecurityPolicy) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTwingateSecurityPoliciesSecurityPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateSecurityPoliciesSecurityPolicy) string { return v.Name }).(pulumi.StringOutput)
}

type GetTwingateSecurityPoliciesSecurityPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateSecurityPoliciesSecurityPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateSecurityPoliciesSecurityPolicy)(nil)).Elem()
}

func (o GetTwingateSecurityPoliciesSecurityPolicyArrayOutput) ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutput() GetTwingateSecurityPoliciesSecurityPolicyArrayOutput {
	return o
}

func (o GetTwingateSecurityPoliciesSecurityPolicyArrayOutput) ToGetTwingateSecurityPoliciesSecurityPolicyArrayOutputWithContext(ctx context.Context) GetTwingateSecurityPoliciesSecurityPolicyArrayOutput {
	return o
}

func (o GetTwingateSecurityPoliciesSecurityPolicyArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateSecurityPoliciesSecurityPolicy] {
	return pulumix.Output[[]GetTwingateSecurityPoliciesSecurityPolicy]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateSecurityPoliciesSecurityPolicyArrayOutput) Index(i pulumi.IntInput) GetTwingateSecurityPoliciesSecurityPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateSecurityPoliciesSecurityPolicy {
		return vs[0].([]GetTwingateSecurityPoliciesSecurityPolicy)[vs[1].(int)]
	}).(GetTwingateSecurityPoliciesSecurityPolicyOutput)
}

type GetTwingateServiceAccountsServiceAccount struct {
	Id          string   `pulumi:"id"`
	KeyIds      []string `pulumi:"keyIds"`
	Name        string   `pulumi:"name"`
	ResourceIds []string `pulumi:"resourceIds"`
}

// GetTwingateServiceAccountsServiceAccountInput is an input type that accepts GetTwingateServiceAccountsServiceAccountArgs and GetTwingateServiceAccountsServiceAccountOutput values.
// You can construct a concrete instance of `GetTwingateServiceAccountsServiceAccountInput` via:
//
//	GetTwingateServiceAccountsServiceAccountArgs{...}
type GetTwingateServiceAccountsServiceAccountInput interface {
	pulumi.Input

	ToGetTwingateServiceAccountsServiceAccountOutput() GetTwingateServiceAccountsServiceAccountOutput
	ToGetTwingateServiceAccountsServiceAccountOutputWithContext(context.Context) GetTwingateServiceAccountsServiceAccountOutput
}

type GetTwingateServiceAccountsServiceAccountArgs struct {
	Id          pulumi.StringInput      `pulumi:"id"`
	KeyIds      pulumi.StringArrayInput `pulumi:"keyIds"`
	Name        pulumi.StringInput      `pulumi:"name"`
	ResourceIds pulumi.StringArrayInput `pulumi:"resourceIds"`
}

func (GetTwingateServiceAccountsServiceAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateServiceAccountsServiceAccount)(nil)).Elem()
}

func (i GetTwingateServiceAccountsServiceAccountArgs) ToGetTwingateServiceAccountsServiceAccountOutput() GetTwingateServiceAccountsServiceAccountOutput {
	return i.ToGetTwingateServiceAccountsServiceAccountOutputWithContext(context.Background())
}

func (i GetTwingateServiceAccountsServiceAccountArgs) ToGetTwingateServiceAccountsServiceAccountOutputWithContext(ctx context.Context) GetTwingateServiceAccountsServiceAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateServiceAccountsServiceAccountOutput)
}

func (i GetTwingateServiceAccountsServiceAccountArgs) ToOutput(ctx context.Context) pulumix.Output[GetTwingateServiceAccountsServiceAccount] {
	return pulumix.Output[GetTwingateServiceAccountsServiceAccount]{
		OutputState: i.ToGetTwingateServiceAccountsServiceAccountOutputWithContext(ctx).OutputState,
	}
}

// GetTwingateServiceAccountsServiceAccountArrayInput is an input type that accepts GetTwingateServiceAccountsServiceAccountArray and GetTwingateServiceAccountsServiceAccountArrayOutput values.
// You can construct a concrete instance of `GetTwingateServiceAccountsServiceAccountArrayInput` via:
//
//	GetTwingateServiceAccountsServiceAccountArray{ GetTwingateServiceAccountsServiceAccountArgs{...} }
type GetTwingateServiceAccountsServiceAccountArrayInput interface {
	pulumi.Input

	ToGetTwingateServiceAccountsServiceAccountArrayOutput() GetTwingateServiceAccountsServiceAccountArrayOutput
	ToGetTwingateServiceAccountsServiceAccountArrayOutputWithContext(context.Context) GetTwingateServiceAccountsServiceAccountArrayOutput
}

type GetTwingateServiceAccountsServiceAccountArray []GetTwingateServiceAccountsServiceAccountInput

func (GetTwingateServiceAccountsServiceAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateServiceAccountsServiceAccount)(nil)).Elem()
}

func (i GetTwingateServiceAccountsServiceAccountArray) ToGetTwingateServiceAccountsServiceAccountArrayOutput() GetTwingateServiceAccountsServiceAccountArrayOutput {
	return i.ToGetTwingateServiceAccountsServiceAccountArrayOutputWithContext(context.Background())
}

func (i GetTwingateServiceAccountsServiceAccountArray) ToGetTwingateServiceAccountsServiceAccountArrayOutputWithContext(ctx context.Context) GetTwingateServiceAccountsServiceAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateServiceAccountsServiceAccountArrayOutput)
}

func (i GetTwingateServiceAccountsServiceAccountArray) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateServiceAccountsServiceAccount] {
	return pulumix.Output[[]GetTwingateServiceAccountsServiceAccount]{
		OutputState: i.ToGetTwingateServiceAccountsServiceAccountArrayOutputWithContext(ctx).OutputState,
	}
}

type GetTwingateServiceAccountsServiceAccountOutput struct{ *pulumi.OutputState }

func (GetTwingateServiceAccountsServiceAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateServiceAccountsServiceAccount)(nil)).Elem()
}

func (o GetTwingateServiceAccountsServiceAccountOutput) ToGetTwingateServiceAccountsServiceAccountOutput() GetTwingateServiceAccountsServiceAccountOutput {
	return o
}

func (o GetTwingateServiceAccountsServiceAccountOutput) ToGetTwingateServiceAccountsServiceAccountOutputWithContext(ctx context.Context) GetTwingateServiceAccountsServiceAccountOutput {
	return o
}

func (o GetTwingateServiceAccountsServiceAccountOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateServiceAccountsServiceAccount] {
	return pulumix.Output[GetTwingateServiceAccountsServiceAccount]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateServiceAccountsServiceAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateServiceAccountsServiceAccount) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTwingateServiceAccountsServiceAccountOutput) KeyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTwingateServiceAccountsServiceAccount) []string { return v.KeyIds }).(pulumi.StringArrayOutput)
}

func (o GetTwingateServiceAccountsServiceAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateServiceAccountsServiceAccount) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetTwingateServiceAccountsServiceAccountOutput) ResourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTwingateServiceAccountsServiceAccount) []string { return v.ResourceIds }).(pulumi.StringArrayOutput)
}

type GetTwingateServiceAccountsServiceAccountArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateServiceAccountsServiceAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateServiceAccountsServiceAccount)(nil)).Elem()
}

func (o GetTwingateServiceAccountsServiceAccountArrayOutput) ToGetTwingateServiceAccountsServiceAccountArrayOutput() GetTwingateServiceAccountsServiceAccountArrayOutput {
	return o
}

func (o GetTwingateServiceAccountsServiceAccountArrayOutput) ToGetTwingateServiceAccountsServiceAccountArrayOutputWithContext(ctx context.Context) GetTwingateServiceAccountsServiceAccountArrayOutput {
	return o
}

func (o GetTwingateServiceAccountsServiceAccountArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateServiceAccountsServiceAccount] {
	return pulumix.Output[[]GetTwingateServiceAccountsServiceAccount]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateServiceAccountsServiceAccountArrayOutput) Index(i pulumi.IntInput) GetTwingateServiceAccountsServiceAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateServiceAccountsServiceAccount {
		return vs[0].([]GetTwingateServiceAccountsServiceAccount)[vs[1].(int)]
	}).(GetTwingateServiceAccountsServiceAccountOutput)
}

type GetTwingateUsersUser struct {
	Email     string `pulumi:"email"`
	FirstName string `pulumi:"firstName"`
	Id        string `pulumi:"id"`
	// Deprecated: This read-only Boolean value will be deprecated in a future release. You may use the `role` value instead.
	IsAdmin  bool   `pulumi:"isAdmin"`
	LastName string `pulumi:"lastName"`
	Role     string `pulumi:"role"`
	Type     string `pulumi:"type"`
}

// GetTwingateUsersUserInput is an input type that accepts GetTwingateUsersUserArgs and GetTwingateUsersUserOutput values.
// You can construct a concrete instance of `GetTwingateUsersUserInput` via:
//
//	GetTwingateUsersUserArgs{...}
type GetTwingateUsersUserInput interface {
	pulumi.Input

	ToGetTwingateUsersUserOutput() GetTwingateUsersUserOutput
	ToGetTwingateUsersUserOutputWithContext(context.Context) GetTwingateUsersUserOutput
}

type GetTwingateUsersUserArgs struct {
	Email     pulumi.StringInput `pulumi:"email"`
	FirstName pulumi.StringInput `pulumi:"firstName"`
	Id        pulumi.StringInput `pulumi:"id"`
	// Deprecated: This read-only Boolean value will be deprecated in a future release. You may use the `role` value instead.
	IsAdmin  pulumi.BoolInput   `pulumi:"isAdmin"`
	LastName pulumi.StringInput `pulumi:"lastName"`
	Role     pulumi.StringInput `pulumi:"role"`
	Type     pulumi.StringInput `pulumi:"type"`
}

func (GetTwingateUsersUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateUsersUser)(nil)).Elem()
}

func (i GetTwingateUsersUserArgs) ToGetTwingateUsersUserOutput() GetTwingateUsersUserOutput {
	return i.ToGetTwingateUsersUserOutputWithContext(context.Background())
}

func (i GetTwingateUsersUserArgs) ToGetTwingateUsersUserOutputWithContext(ctx context.Context) GetTwingateUsersUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateUsersUserOutput)
}

func (i GetTwingateUsersUserArgs) ToOutput(ctx context.Context) pulumix.Output[GetTwingateUsersUser] {
	return pulumix.Output[GetTwingateUsersUser]{
		OutputState: i.ToGetTwingateUsersUserOutputWithContext(ctx).OutputState,
	}
}

// GetTwingateUsersUserArrayInput is an input type that accepts GetTwingateUsersUserArray and GetTwingateUsersUserArrayOutput values.
// You can construct a concrete instance of `GetTwingateUsersUserArrayInput` via:
//
//	GetTwingateUsersUserArray{ GetTwingateUsersUserArgs{...} }
type GetTwingateUsersUserArrayInput interface {
	pulumi.Input

	ToGetTwingateUsersUserArrayOutput() GetTwingateUsersUserArrayOutput
	ToGetTwingateUsersUserArrayOutputWithContext(context.Context) GetTwingateUsersUserArrayOutput
}

type GetTwingateUsersUserArray []GetTwingateUsersUserInput

func (GetTwingateUsersUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateUsersUser)(nil)).Elem()
}

func (i GetTwingateUsersUserArray) ToGetTwingateUsersUserArrayOutput() GetTwingateUsersUserArrayOutput {
	return i.ToGetTwingateUsersUserArrayOutputWithContext(context.Background())
}

func (i GetTwingateUsersUserArray) ToGetTwingateUsersUserArrayOutputWithContext(ctx context.Context) GetTwingateUsersUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTwingateUsersUserArrayOutput)
}

func (i GetTwingateUsersUserArray) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateUsersUser] {
	return pulumix.Output[[]GetTwingateUsersUser]{
		OutputState: i.ToGetTwingateUsersUserArrayOutputWithContext(ctx).OutputState,
	}
}

type GetTwingateUsersUserOutput struct{ *pulumi.OutputState }

func (GetTwingateUsersUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateUsersUser)(nil)).Elem()
}

func (o GetTwingateUsersUserOutput) ToGetTwingateUsersUserOutput() GetTwingateUsersUserOutput {
	return o
}

func (o GetTwingateUsersUserOutput) ToGetTwingateUsersUserOutputWithContext(ctx context.Context) GetTwingateUsersUserOutput {
	return o
}

func (o GetTwingateUsersUserOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateUsersUser] {
	return pulumix.Output[GetTwingateUsersUser]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateUsersUserOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUsersUser) string { return v.Email }).(pulumi.StringOutput)
}

func (o GetTwingateUsersUserOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUsersUser) string { return v.FirstName }).(pulumi.StringOutput)
}

func (o GetTwingateUsersUserOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUsersUser) string { return v.Id }).(pulumi.StringOutput)
}

// Deprecated: This read-only Boolean value will be deprecated in a future release. You may use the `role` value instead.
func (o GetTwingateUsersUserOutput) IsAdmin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTwingateUsersUser) bool { return v.IsAdmin }).(pulumi.BoolOutput)
}

func (o GetTwingateUsersUserOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUsersUser) string { return v.LastName }).(pulumi.StringOutput)
}

func (o GetTwingateUsersUserOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUsersUser) string { return v.Role }).(pulumi.StringOutput)
}

func (o GetTwingateUsersUserOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUsersUser) string { return v.Type }).(pulumi.StringOutput)
}

type GetTwingateUsersUserArrayOutput struct{ *pulumi.OutputState }

func (GetTwingateUsersUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTwingateUsersUser)(nil)).Elem()
}

func (o GetTwingateUsersUserArrayOutput) ToGetTwingateUsersUserArrayOutput() GetTwingateUsersUserArrayOutput {
	return o
}

func (o GetTwingateUsersUserArrayOutput) ToGetTwingateUsersUserArrayOutputWithContext(ctx context.Context) GetTwingateUsersUserArrayOutput {
	return o
}

func (o GetTwingateUsersUserArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetTwingateUsersUser] {
	return pulumix.Output[[]GetTwingateUsersUser]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateUsersUserArrayOutput) Index(i pulumi.IntInput) GetTwingateUsersUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTwingateUsersUser {
		return vs[0].([]GetTwingateUsersUser)[vs[1].(int)]
	}).(GetTwingateUsersUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceAccessInput)(nil)).Elem(), TwingateResourceAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceAccessPtrInput)(nil)).Elem(), TwingateResourceAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsInput)(nil)).Elem(), TwingateResourceProtocolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsPtrInput)(nil)).Elem(), TwingateResourceProtocolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsTcpInput)(nil)).Elem(), TwingateResourceProtocolsTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsTcpPtrInput)(nil)).Elem(), TwingateResourceProtocolsTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsUdpInput)(nil)).Elem(), TwingateResourceProtocolsUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TwingateResourceProtocolsUdpPtrInput)(nil)).Elem(), TwingateResourceProtocolsUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateConnectorsConnectorInput)(nil)).Elem(), GetTwingateConnectorsConnectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateConnectorsConnectorArrayInput)(nil)).Elem(), GetTwingateConnectorsConnectorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateGroupsGroupInput)(nil)).Elem(), GetTwingateGroupsGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateGroupsGroupArrayInput)(nil)).Elem(), GetTwingateGroupsGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateRemoteNetworksRemoteNetworkInput)(nil)).Elem(), GetTwingateRemoteNetworksRemoteNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateRemoteNetworksRemoteNetworkArrayInput)(nil)).Elem(), GetTwingateRemoteNetworksRemoteNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourceProtocolsInput)(nil)).Elem(), GetTwingateResourceProtocolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourceProtocolsPtrInput)(nil)).Elem(), GetTwingateResourceProtocolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourceProtocolsTcpInput)(nil)).Elem(), GetTwingateResourceProtocolsTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourceProtocolsTcpPtrInput)(nil)).Elem(), GetTwingateResourceProtocolsTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourceProtocolsUdpInput)(nil)).Elem(), GetTwingateResourceProtocolsUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourceProtocolsUdpPtrInput)(nil)).Elem(), GetTwingateResourceProtocolsUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourcesResourceInput)(nil)).Elem(), GetTwingateResourcesResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourcesResourceArrayInput)(nil)).Elem(), GetTwingateResourcesResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourcesResourceProtocolsInput)(nil)).Elem(), GetTwingateResourcesResourceProtocolsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourcesResourceProtocolsTcpInput)(nil)).Elem(), GetTwingateResourcesResourceProtocolsTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateResourcesResourceProtocolsUdpInput)(nil)).Elem(), GetTwingateResourcesResourceProtocolsUdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateSecurityPoliciesSecurityPolicyInput)(nil)).Elem(), GetTwingateSecurityPoliciesSecurityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateSecurityPoliciesSecurityPolicyArrayInput)(nil)).Elem(), GetTwingateSecurityPoliciesSecurityPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateServiceAccountsServiceAccountInput)(nil)).Elem(), GetTwingateServiceAccountsServiceAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateServiceAccountsServiceAccountArrayInput)(nil)).Elem(), GetTwingateServiceAccountsServiceAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateUsersUserInput)(nil)).Elem(), GetTwingateUsersUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTwingateUsersUserArrayInput)(nil)).Elem(), GetTwingateUsersUserArray{})
	pulumi.RegisterOutputType(TwingateResourceAccessOutput{})
	pulumi.RegisterOutputType(TwingateResourceAccessPtrOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsPtrOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsTcpOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsTcpPtrOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsUdpOutput{})
	pulumi.RegisterOutputType(TwingateResourceProtocolsUdpPtrOutput{})
	pulumi.RegisterOutputType(GetTwingateConnectorsConnectorOutput{})
	pulumi.RegisterOutputType(GetTwingateConnectorsConnectorArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateGroupsGroupOutput{})
	pulumi.RegisterOutputType(GetTwingateGroupsGroupArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateRemoteNetworksRemoteNetworkOutput{})
	pulumi.RegisterOutputType(GetTwingateRemoteNetworksRemoteNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateResourceProtocolsOutput{})
	pulumi.RegisterOutputType(GetTwingateResourceProtocolsPtrOutput{})
	pulumi.RegisterOutputType(GetTwingateResourceProtocolsTcpOutput{})
	pulumi.RegisterOutputType(GetTwingateResourceProtocolsTcpPtrOutput{})
	pulumi.RegisterOutputType(GetTwingateResourceProtocolsUdpOutput{})
	pulumi.RegisterOutputType(GetTwingateResourceProtocolsUdpPtrOutput{})
	pulumi.RegisterOutputType(GetTwingateResourcesResourceOutput{})
	pulumi.RegisterOutputType(GetTwingateResourcesResourceArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateResourcesResourceProtocolsOutput{})
	pulumi.RegisterOutputType(GetTwingateResourcesResourceProtocolsTcpOutput{})
	pulumi.RegisterOutputType(GetTwingateResourcesResourceProtocolsUdpOutput{})
	pulumi.RegisterOutputType(GetTwingateSecurityPoliciesSecurityPolicyOutput{})
	pulumi.RegisterOutputType(GetTwingateSecurityPoliciesSecurityPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateServiceAccountsServiceAccountOutput{})
	pulumi.RegisterOutputType(GetTwingateServiceAccountsServiceAccountArrayOutput{})
	pulumi.RegisterOutputType(GetTwingateUsersUserOutput{})
	pulumi.RegisterOutputType(GetTwingateUsersUserArrayOutput{})
}
