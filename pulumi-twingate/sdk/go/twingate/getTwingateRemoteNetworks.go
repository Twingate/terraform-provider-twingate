// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package twingate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// A Remote Network represents a single private network in Twingate that can have one or more Connectors and Resources assigned to it. You must create a Remote Network before creating Resources and Connectors that belong to it. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/remote-networks).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := twingate.GetTwingateRemoteNetworks(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTwingateRemoteNetworks(ctx *pulumi.Context, args *GetTwingateRemoteNetworksArgs, opts ...pulumi.InvokeOption) (*GetTwingateRemoteNetworksResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetTwingateRemoteNetworksResult
	err := ctx.Invoke("twingate:index/getTwingateRemoteNetworks:getTwingateRemoteNetworks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTwingateRemoteNetworks.
type GetTwingateRemoteNetworksArgs struct {
	// List of Remote Networks
	RemoteNetworks []GetTwingateRemoteNetworksRemoteNetwork `pulumi:"remoteNetworks"`
}

// A collection of values returned by getTwingateRemoteNetworks.
type GetTwingateRemoteNetworksResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of Remote Networks
	RemoteNetworks []GetTwingateRemoteNetworksRemoteNetwork `pulumi:"remoteNetworks"`
}

func GetTwingateRemoteNetworksOutput(ctx *pulumi.Context, args GetTwingateRemoteNetworksOutputArgs, opts ...pulumi.InvokeOption) GetTwingateRemoteNetworksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTwingateRemoteNetworksResult, error) {
			args := v.(GetTwingateRemoteNetworksArgs)
			r, err := GetTwingateRemoteNetworks(ctx, &args, opts...)
			var s GetTwingateRemoteNetworksResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTwingateRemoteNetworksResultOutput)
}

// A collection of arguments for invoking getTwingateRemoteNetworks.
type GetTwingateRemoteNetworksOutputArgs struct {
	// List of Remote Networks
	RemoteNetworks GetTwingateRemoteNetworksRemoteNetworkArrayInput `pulumi:"remoteNetworks"`
}

func (GetTwingateRemoteNetworksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateRemoteNetworksArgs)(nil)).Elem()
}

// A collection of values returned by getTwingateRemoteNetworks.
type GetTwingateRemoteNetworksResultOutput struct{ *pulumi.OutputState }

func (GetTwingateRemoteNetworksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateRemoteNetworksResult)(nil)).Elem()
}

func (o GetTwingateRemoteNetworksResultOutput) ToGetTwingateRemoteNetworksResultOutput() GetTwingateRemoteNetworksResultOutput {
	return o
}

func (o GetTwingateRemoteNetworksResultOutput) ToGetTwingateRemoteNetworksResultOutputWithContext(ctx context.Context) GetTwingateRemoteNetworksResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTwingateRemoteNetworksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateRemoteNetworksResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of Remote Networks
func (o GetTwingateRemoteNetworksResultOutput) RemoteNetworks() GetTwingateRemoteNetworksRemoteNetworkArrayOutput {
	return o.ApplyT(func(v GetTwingateRemoteNetworksResult) []GetTwingateRemoteNetworksRemoteNetwork {
		return v.RemoteNetworks
	}).(GetTwingateRemoteNetworksRemoteNetworkArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTwingateRemoteNetworksResultOutput{})
}
