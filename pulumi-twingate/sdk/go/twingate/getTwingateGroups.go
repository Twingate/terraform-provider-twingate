// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package twingate

import (
	"context"
	"reflect"

	"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func GetTwingateGroups(ctx *pulumi.Context, args *GetTwingateGroupsArgs, opts ...pulumi.InvokeOption) (*GetTwingateGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTwingateGroupsResult
	err := ctx.Invoke("twingate:index/getTwingateGroups:getTwingateGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTwingateGroups.
type GetTwingateGroupsArgs struct {
	Groups   []GetTwingateGroupsGroup `pulumi:"groups"`
	IsActive *bool                    `pulumi:"isActive"`
	Name     *string                  `pulumi:"name"`
	Type     *string                  `pulumi:"type"`
}

// A collection of values returned by getTwingateGroups.
type GetTwingateGroupsResult struct {
	Groups []GetTwingateGroupsGroup `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id       string  `pulumi:"id"`
	IsActive *bool   `pulumi:"isActive"`
	Name     *string `pulumi:"name"`
	Type     *string `pulumi:"type"`
}

func GetTwingateGroupsOutput(ctx *pulumi.Context, args GetTwingateGroupsOutputArgs, opts ...pulumi.InvokeOption) GetTwingateGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTwingateGroupsResult, error) {
			args := v.(GetTwingateGroupsArgs)
			r, err := GetTwingateGroups(ctx, &args, opts...)
			var s GetTwingateGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTwingateGroupsResultOutput)
}

// A collection of arguments for invoking getTwingateGroups.
type GetTwingateGroupsOutputArgs struct {
	Groups   GetTwingateGroupsGroupArrayInput `pulumi:"groups"`
	IsActive pulumi.BoolPtrInput              `pulumi:"isActive"`
	Name     pulumi.StringPtrInput            `pulumi:"name"`
	Type     pulumi.StringPtrInput            `pulumi:"type"`
}

func (GetTwingateGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getTwingateGroups.
type GetTwingateGroupsResultOutput struct{ *pulumi.OutputState }

func (GetTwingateGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateGroupsResult)(nil)).Elem()
}

func (o GetTwingateGroupsResultOutput) ToGetTwingateGroupsResultOutput() GetTwingateGroupsResultOutput {
	return o
}

func (o GetTwingateGroupsResultOutput) ToGetTwingateGroupsResultOutputWithContext(ctx context.Context) GetTwingateGroupsResultOutput {
	return o
}

func (o GetTwingateGroupsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetTwingateGroupsResult] {
	return pulumix.Output[GetTwingateGroupsResult]{
		OutputState: o.OutputState,
	}
}

func (o GetTwingateGroupsResultOutput) Groups() GetTwingateGroupsGroupArrayOutput {
	return o.ApplyT(func(v GetTwingateGroupsResult) []GetTwingateGroupsGroup { return v.Groups }).(GetTwingateGroupsGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetTwingateGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTwingateGroupsResultOutput) IsActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTwingateGroupsResult) *bool { return v.IsActive }).(pulumi.BoolPtrOutput)
}

func (o GetTwingateGroupsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTwingateGroupsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetTwingateGroupsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTwingateGroupsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTwingateGroupsResultOutput{})
}
