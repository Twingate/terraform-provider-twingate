// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package twingate

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Users in Twingate can be given access to Twingate Resources and may either be added manually or automatically synchronized with a 3rd party identity provider. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/users).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := twingate.GetTwingateUser(ctx, &twingate.GetTwingateUserArgs{
//				Id: "<your user's id>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetTwingateUser(ctx *pulumi.Context, args *GetTwingateUserArgs, opts ...pulumi.InvokeOption) (*GetTwingateUserResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetTwingateUserResult
	err := ctx.Invoke("twingate:index/getTwingateUser:getTwingateUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTwingateUser.
type GetTwingateUserArgs struct {
	// The ID of the User. The ID for the User must be obtained from the Admin API.
	Id string `pulumi:"id"`
}

// A collection of values returned by getTwingateUser.
type GetTwingateUserResult struct {
	// The email address of the User
	Email string `pulumi:"email"`
	// The first name of the User
	FirstName string `pulumi:"firstName"`
	// The ID of the User. The ID for the User must be obtained from the Admin API.
	Id string `pulumi:"id"`
	// Indicates whether the User is an admin
	IsAdmin bool `pulumi:"isAdmin"`
	// The last name of the User
	LastName string `pulumi:"lastName"`
	// Indicates the User's role. Either ADMIN, DEVOPS, SUPPORT, or MEMBER
	Role string `pulumi:"role"`
}

func GetTwingateUserOutput(ctx *pulumi.Context, args GetTwingateUserOutputArgs, opts ...pulumi.InvokeOption) GetTwingateUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTwingateUserResult, error) {
			args := v.(GetTwingateUserArgs)
			r, err := GetTwingateUser(ctx, &args, opts...)
			var s GetTwingateUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTwingateUserResultOutput)
}

// A collection of arguments for invoking getTwingateUser.
type GetTwingateUserOutputArgs struct {
	// The ID of the User. The ID for the User must be obtained from the Admin API.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetTwingateUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateUserArgs)(nil)).Elem()
}

// A collection of values returned by getTwingateUser.
type GetTwingateUserResultOutput struct{ *pulumi.OutputState }

func (GetTwingateUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTwingateUserResult)(nil)).Elem()
}

func (o GetTwingateUserResultOutput) ToGetTwingateUserResultOutput() GetTwingateUserResultOutput {
	return o
}

func (o GetTwingateUserResultOutput) ToGetTwingateUserResultOutputWithContext(ctx context.Context) GetTwingateUserResultOutput {
	return o
}

// The email address of the User
func (o GetTwingateUserResultOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUserResult) string { return v.Email }).(pulumi.StringOutput)
}

// The first name of the User
func (o GetTwingateUserResultOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUserResult) string { return v.FirstName }).(pulumi.StringOutput)
}

// The ID of the User. The ID for the User must be obtained from the Admin API.
func (o GetTwingateUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// Indicates whether the User is an admin
func (o GetTwingateUserResultOutput) IsAdmin() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTwingateUserResult) bool { return v.IsAdmin }).(pulumi.BoolOutput)
}

// The last name of the User
func (o GetTwingateUserResultOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUserResult) string { return v.LastName }).(pulumi.StringOutput)
}

// Indicates the User's role. Either ADMIN, DEVOPS, SUPPORT, or MEMBER
func (o GetTwingateUserResultOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetTwingateUserResult) string { return v.Role }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTwingateUserResultOutput{})
}
