# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetTwingateUsersResult',
    'AwaitableGetTwingateUsersResult',
    'get_twingate_users',
    'get_twingate_users_output',
]

@pulumi.output_type
class GetTwingateUsersResult:
    """
    A collection of values returned by getTwingateUsers.
    """
    def __init__(__self__, id=None, users=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if users and not isinstance(users, list):
            raise TypeError("Expected argument 'users' to be a list")
        pulumi.set(__self__, "users", users)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def users(self) -> Optional[Sequence['outputs.GetTwingateUsersUserResult']]:
        return pulumi.get(self, "users")


class AwaitableGetTwingateUsersResult(GetTwingateUsersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetTwingateUsersResult(
            id=self.id,
            users=self.users)


def get_twingate_users(users: Optional[Sequence[pulumi.InputType['GetTwingateUsersUserArgs']]] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetTwingateUsersResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['users'] = users
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('twingate:index/getTwingateUsers:getTwingateUsers', __args__, opts=opts, typ=GetTwingateUsersResult).value

    return AwaitableGetTwingateUsersResult(
        id=pulumi.get(__ret__, 'id'),
        users=pulumi.get(__ret__, 'users'))


@_utilities.lift_output_func(get_twingate_users)
def get_twingate_users_output(users: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetTwingateUsersUserArgs']]]]] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetTwingateUsersResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
