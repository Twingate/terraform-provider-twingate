// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Users in Twingate can be given access to Twingate Resources and may either be added manually or automatically synchronized with a 3rd party identity provider. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/users).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as twingate from "@pulumi/twingate";
 *
 * const foo = twingate.getTwingateUser({
 *     id: "<your user's id>",
 * });
 * ```
 */
export function getTwingateUser(args: GetTwingateUserArgs, opts?: pulumi.InvokeOptions): Promise<GetTwingateUserResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("twingate:index/getTwingateUser:getTwingateUser", {
        "id": args.id,
    }, opts);
}

/**
 * A collection of arguments for invoking getTwingateUser.
 */
export interface GetTwingateUserArgs {
    /**
     * The ID of the User. The ID for the User must be obtained from the Admin API.
     */
    id: string;
}

/**
 * A collection of values returned by getTwingateUser.
 */
export interface GetTwingateUserResult {
    /**
     * The email address of the User
     */
    readonly email: string;
    /**
     * The first name of the User
     */
    readonly firstName: string;
    /**
     * The ID of the User. The ID for the User must be obtained from the Admin API.
     */
    readonly id: string;
    /**
     * Indicates whether the User is an admin
     */
    readonly isAdmin: boolean;
    /**
     * The last name of the User
     */
    readonly lastName: string;
    /**
     * Indicates the User's role. Either ADMIN, DEVOPS, SUPPORT, or MEMBER
     */
    readonly role: string;
}
/**
 * Users in Twingate can be given access to Twingate Resources and may either be added manually or automatically synchronized with a 3rd party identity provider. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/users).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as twingate from "@pulumi/twingate";
 *
 * const foo = twingate.getTwingateUser({
 *     id: "<your user's id>",
 * });
 * ```
 */
export function getTwingateUserOutput(args: GetTwingateUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTwingateUserResult> {
    return pulumi.output(args).apply((a: any) => getTwingateUser(a, opts))
}

/**
 * A collection of arguments for invoking getTwingateUser.
 */
export interface GetTwingateUserOutputArgs {
    /**
     * The ID of the User. The ID for the User must be obtained from the Admin API.
     */
    id: pulumi.Input<string>;
}
