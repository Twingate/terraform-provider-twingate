// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * A Remote Network represents a single private network in Twingate that can have one or more Connectors and Resources assigned to it. You must create a Remote Network before creating Resources and Connectors that belong to it. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/remote-networks).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as twingate from "@pulumi/twingate";
 *
 * const foo = twingate.getTwingateRemoteNetwork({
 *     name: "<your network's name>",
 * });
 * ```
 */
export function getTwingateRemoteNetwork(args?: GetTwingateRemoteNetworkArgs, opts?: pulumi.InvokeOptions): Promise<GetTwingateRemoteNetworkResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("twingate:index/getTwingateRemoteNetwork:getTwingateRemoteNetwork", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getTwingateRemoteNetwork.
 */
export interface GetTwingateRemoteNetworkArgs {
    /**
     * The ID of the Remote Network
     */
    id?: string;
    /**
     * The name of the Remote Network
     */
    name?: string;
}

/**
 * A collection of values returned by getTwingateRemoteNetwork.
 */
export interface GetTwingateRemoteNetworkResult {
    /**
     * The ID of the Remote Network
     */
    readonly id?: string;
    /**
     * The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.
     */
    readonly location: string;
    /**
     * The name of the Remote Network
     */
    readonly name?: string;
}
/**
 * A Remote Network represents a single private network in Twingate that can have one or more Connectors and Resources assigned to it. You must create a Remote Network before creating Resources and Connectors that belong to it. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/remote-networks).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as twingate from "@pulumi/twingate";
 *
 * const foo = twingate.getTwingateRemoteNetwork({
 *     name: "<your network's name>",
 * });
 * ```
 */
export function getTwingateRemoteNetworkOutput(args?: GetTwingateRemoteNetworkOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTwingateRemoteNetworkResult> {
    return pulumi.output(args).apply((a: any) => getTwingateRemoteNetwork(a, opts))
}

/**
 * A collection of arguments for invoking getTwingateRemoteNetwork.
 */
export interface GetTwingateRemoteNetworkOutputArgs {
    /**
     * The ID of the Remote Network
     */
    id?: pulumi.Input<string>;
    /**
     * The name of the Remote Network
     */
    name?: pulumi.Input<string>;
}
