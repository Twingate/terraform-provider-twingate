// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TwingateLabs.Twingate
{
    public static class GetTwingateGroup
    {
        public static Task<GetTwingateGroupResult> InvokeAsync(GetTwingateGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTwingateGroupResult>("twingate:index/getTwingateGroup:getTwingateGroup", args ?? new GetTwingateGroupArgs(), options.WithDefaults());

        public static Output<GetTwingateGroupResult> Invoke(GetTwingateGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTwingateGroupResult>("twingate:index/getTwingateGroup:getTwingateGroup", args ?? new GetTwingateGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTwingateGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetTwingateGroupArgs()
        {
        }
        public static new GetTwingateGroupArgs Empty => new GetTwingateGroupArgs();
    }

    public sealed class GetTwingateGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetTwingateGroupInvokeArgs()
        {
        }
        public static new GetTwingateGroupInvokeArgs Empty => new GetTwingateGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetTwingateGroupResult
    {
        public readonly string Id;
        public readonly bool IsActive;
        public readonly string Name;
        public readonly string SecurityPolicyId;
        public readonly string Type;

        [OutputConstructor]
        private GetTwingateGroupResult(
            string id,

            bool isActive,

            string name,

            string securityPolicyId,

            string type)
        {
            Id = id;
            IsActive = isActive;
            Name = name;
            SecurityPolicyId = securityPolicyId;
            Type = type;
        }
    }
}
