// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace TwingateLabs.Twingate
{
    public static class GetTwingateConnectors
    {
        /// <summary>
        /// Connectors provide connectivity to Remote Networks. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/understanding-access-nodes).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Twingate = Pulumi.Twingate;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Twingate.GetTwingateConnectors.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetTwingateConnectorsResult> InvokeAsync(GetTwingateConnectorsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTwingateConnectorsResult>("twingate:index/getTwingateConnectors:getTwingateConnectors", args ?? new GetTwingateConnectorsArgs(), options.WithDefaults());

        /// <summary>
        /// Connectors provide connectivity to Remote Networks. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/understanding-access-nodes).
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Twingate = Pulumi.Twingate;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Twingate.GetTwingateConnectors.Invoke();
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetTwingateConnectorsResult> Invoke(GetTwingateConnectorsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTwingateConnectorsResult>("twingate:index/getTwingateConnectors:getTwingateConnectors", args ?? new GetTwingateConnectorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTwingateConnectorsArgs : global::Pulumi.InvokeArgs
    {
        [Input("connectors")]
        private List<Inputs.GetTwingateConnectorsConnectorArgs>? _connectors;

        /// <summary>
        /// List of Connectors
        /// </summary>
        public List<Inputs.GetTwingateConnectorsConnectorArgs> Connectors
        {
            get => _connectors ?? (_connectors = new List<Inputs.GetTwingateConnectorsConnectorArgs>());
            set => _connectors = value;
        }

        public GetTwingateConnectorsArgs()
        {
        }
        public static new GetTwingateConnectorsArgs Empty => new GetTwingateConnectorsArgs();
    }

    public sealed class GetTwingateConnectorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("connectors")]
        private InputList<Inputs.GetTwingateConnectorsConnectorInputArgs>? _connectors;

        /// <summary>
        /// List of Connectors
        /// </summary>
        public InputList<Inputs.GetTwingateConnectorsConnectorInputArgs> Connectors
        {
            get => _connectors ?? (_connectors = new InputList<Inputs.GetTwingateConnectorsConnectorInputArgs>());
            set => _connectors = value;
        }

        public GetTwingateConnectorsInvokeArgs()
        {
        }
        public static new GetTwingateConnectorsInvokeArgs Empty => new GetTwingateConnectorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTwingateConnectorsResult
    {
        /// <summary>
        /// List of Connectors
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTwingateConnectorsConnectorResult> Connectors;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetTwingateConnectorsResult(
            ImmutableArray<Outputs.GetTwingateConnectorsConnectorResult> connectors,

            string id)
        {
            Connectors = connectors;
            Id = id;
        }
    }
}
