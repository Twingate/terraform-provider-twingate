{
    "name": "twingate",
    "displayName": "Twingate",
    "description": "A Pulumi package for creating and managing Twingate cloud resources.",
    "keywords": [
        "pulumi",
        "twingate",
        "category/infrastructure"
    ],
    "homepage": "https://www.twingate.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`twingate` Terraform Provider](https://github.com/Twingate/terraform-provider-twingate).",
    "repository": "https://github.com/Twingate-Labs/pulumi-twingate",
    "pluginDownloadURL": "github://api.github.com/twingate-labs",
    "publisher": "Twingate",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "TwingateLabs"
        },
        "go": {
            "importBasePath": "github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@twingate-labs/pulumi-twingate",
            "packageDescription": "A Pulumi package for creating and managing Twingate cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Twingate/terraform-provider-twingate)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-twingate` repo](https://github.com/Twingate-Labs/pulumi-twingate/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-twingate` repo](https://github.com/Twingate/terraform-provider-twingate/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Twingate/terraform-provider-twingate)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-twingate` repo](https://github.com/Twingate-Labs/pulumi-twingate/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-twingate` repo](https://github.com/Twingate/terraform-provider-twingate/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "apiToken": {
                "type": "string",
                "description": "The access key for API operations. You can retrieve this from the Twingate Admin Console\n([documentation](https://docs.twingate.com/docs/api-overview)). Alternatively, this can be specified using the\nTWINGATE_API_TOKEN environment variable.\n",
                "secret": true
            },
            "httpMaxRetry": {
                "type": "integer",
                "description": "Specifies a retry limit for the http requests made. The default value is 10. Alternatively, this can be specified using\nthe TWINGATE_HTTP_MAX_RETRY environment variable\n",
                "default": 5
            },
            "httpTimeout": {
                "type": "integer",
                "description": "Specifies a time limit in seconds for the http requests made. The default value is 35 seconds. Alternatively, this can\nbe specified using the TWINGATE_HTTP_TIMEOUT environment variable\n",
                "default": 10
            },
            "network": {
                "type": "string",
                "description": "Your Twingate network ID for API operations. You can find it in the Admin Console URL, for example:\n`autoco.twingate.com`, where `autoco` is your network ID Alternatively, this can be specified using the TWINGATE_NETWORK\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The default is 'twingate.com' This is optional and shouldn't be changed under normal circumstances.\n"
            }
        }
    },
    "types": {
        "twingate:index/TwingateResourceAccess:TwingateResourceAccess": {
            "properties": {
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serviceAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "twingate:index/TwingateResourceProtocols:TwingateResourceProtocols": {
            "properties": {
                "allowIcmp": {
                    "type": "boolean"
                },
                "tcp": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocolsTcp:TwingateResourceProtocolsTcp"
                },
                "udp": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocolsUdp:TwingateResourceProtocolsUdp"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allowIcmp",
                        "tcp",
                        "udp"
                    ]
                }
            }
        },
        "twingate:index/TwingateResourceProtocolsTcp:TwingateResourceProtocolsTcp": {
            "properties": {
                "policy": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "policy",
                        "ports"
                    ]
                }
            }
        },
        "twingate:index/TwingateResourceProtocolsUdp:TwingateResourceProtocolsUdp": {
            "properties": {
                "policy": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "policy",
                        "ports"
                    ]
                }
            }
        },
        "twingate:index/getTwingateConnectorsConnector:getTwingateConnectorsConnector": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "remoteNetworkId": {
                    "type": "string"
                },
                "statusUpdatesEnabled": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "remoteNetworkId",
                "statusUpdatesEnabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateGroupsGroup:getTwingateGroupsGroup": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "securityPolicyId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "isActive",
                "name",
                "securityPolicyId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateRemoteNetworksRemoteNetwork:getTwingateRemoteNetworksRemoteNetwork": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "location",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourceProtocols:getTwingateResourceProtocols": {
            "properties": {
                "allowIcmp": {
                    "type": "boolean"
                },
                "tcp": {
                    "$ref": "#/types/twingate:index/getTwingateResourceProtocolsTcp:getTwingateResourceProtocolsTcp"
                },
                "udp": {
                    "$ref": "#/types/twingate:index/getTwingateResourceProtocolsUdp:getTwingateResourceProtocolsUdp"
                }
            },
            "type": "object",
            "required": [
                "allowIcmp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourceProtocolsTcp:getTwingateResourceProtocolsTcp": {
            "properties": {
                "policy": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "policy",
                "ports"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourceProtocolsUdp:getTwingateResourceProtocolsUdp": {
            "properties": {
                "policy": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "policy",
                "ports"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourcesResource:getTwingateResourcesResource": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "protocols": {
                    "$ref": "#/types/twingate:index/getTwingateResourcesResourceProtocols:getTwingateResourcesResourceProtocols"
                },
                "remoteNetworkId": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "address",
                "id",
                "name",
                "protocols",
                "remoteNetworkId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourcesResourceProtocols:getTwingateResourcesResourceProtocols": {
            "properties": {
                "allowIcmp": {
                    "type": "boolean"
                },
                "tcp": {
                    "$ref": "#/types/twingate:index/getTwingateResourcesResourceProtocolsTcp:getTwingateResourcesResourceProtocolsTcp"
                },
                "udp": {
                    "$ref": "#/types/twingate:index/getTwingateResourcesResourceProtocolsUdp:getTwingateResourcesResourceProtocolsUdp"
                }
            },
            "type": "object",
            "required": [
                "allowIcmp",
                "tcp",
                "udp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourcesResourceProtocolsTcp:getTwingateResourcesResourceProtocolsTcp": {
            "properties": {
                "policy": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "policy",
                "ports"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourcesResourceProtocolsUdp:getTwingateResourcesResourceProtocolsUdp": {
            "properties": {
                "policy": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "policy",
                "ports"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateSecurityPoliciesSecurityPolicy:getTwingateSecurityPoliciesSecurityPolicy": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateServiceAccountsServiceAccount:getTwingateServiceAccountsServiceAccount": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "keyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "resourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "keyIds",
                "name",
                "resourceIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateUsersUser:getTwingateUsersUser": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean",
                    "deprecationMessage": "This read-only Boolean value will be deprecated in a future release. You may use the `role` value instead."
                },
                "lastName": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "email",
                "firstName",
                "id",
                "isAdmin",
                "lastName",
                "role",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the twingate package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiToken": {
                "type": "string",
                "description": "The access key for API operations. You can retrieve this from the Twingate Admin Console\n([documentation](https://docs.twingate.com/docs/api-overview)). Alternatively, this can be specified using the\nTWINGATE_API_TOKEN environment variable.\n",
                "secret": true
            },
            "httpMaxRetry": {
                "type": "integer",
                "description": "Specifies a retry limit for the http requests made. The default value is 10. Alternatively, this can be specified using\nthe TWINGATE_HTTP_MAX_RETRY environment variable\n"
            },
            "httpTimeout": {
                "type": "integer",
                "description": "Specifies a time limit in seconds for the http requests made. The default value is 35 seconds. Alternatively, this can\nbe specified using the TWINGATE_HTTP_TIMEOUT environment variable\n"
            },
            "network": {
                "type": "string",
                "description": "Your Twingate network ID for API operations. You can find it in the Admin Console URL, for example:\n`autoco.twingate.com`, where `autoco` is your network ID Alternatively, this can be specified using the TWINGATE_NETWORK\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The default is 'twingate.com' This is optional and shouldn't be changed under normal circumstances.\n"
            }
        },
        "inputProperties": {
            "apiToken": {
                "type": "string",
                "description": "The access key for API operations. You can retrieve this from the Twingate Admin Console\n([documentation](https://docs.twingate.com/docs/api-overview)). Alternatively, this can be specified using the\nTWINGATE_API_TOKEN environment variable.\n",
                "secret": true
            },
            "httpMaxRetry": {
                "type": "integer",
                "description": "Specifies a retry limit for the http requests made. The default value is 10. Alternatively, this can be specified using\nthe TWINGATE_HTTP_MAX_RETRY environment variable\n",
                "default": 5
            },
            "httpTimeout": {
                "type": "integer",
                "description": "Specifies a time limit in seconds for the http requests made. The default value is 35 seconds. Alternatively, this can\nbe specified using the TWINGATE_HTTP_TIMEOUT environment variable\n",
                "default": 10
            },
            "network": {
                "type": "string",
                "description": "Your Twingate network ID for API operations. You can find it in the Admin Console URL, for example:\n`autoco.twingate.com`, where `autoco` is your network ID Alternatively, this can be specified using the TWINGATE_NETWORK\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The default is 'twingate.com' This is optional and shouldn't be changed under normal circumstances.\n"
            }
        }
    },
    "resources": {
        "twingate:index/twingateConnector:TwingateConnector": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Connector, if not provided one will be generated.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "The ID of the Remote Network the Connector is attached to.\n"
                },
                "statusUpdatesEnabled": {
                    "type": "boolean",
                    "description": "Determines whether status notifications are enabled for the Connector.\n"
                }
            },
            "required": [
                "name",
                "remoteNetworkId",
                "statusUpdatesEnabled"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Connector, if not provided one will be generated.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "The ID of the Remote Network the Connector is attached to.\n"
                },
                "statusUpdatesEnabled": {
                    "type": "boolean",
                    "description": "Determines whether status notifications are enabled for the Connector.\n"
                }
            },
            "requiredInputs": [
                "remoteNetworkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateConnector resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Connector, if not provided one will be generated.\n"
                    },
                    "remoteNetworkId": {
                        "type": "string",
                        "description": "The ID of the Remote Network the Connector is attached to.\n"
                    },
                    "statusUpdatesEnabled": {
                        "type": "boolean",
                        "description": "Determines whether status notifications are enabled for the Connector.\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateConnectorTokens:TwingateConnectorTokens": {
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The Access Token of the parent Connector\n",
                    "secret": true
                },
                "connectorId": {
                    "type": "string",
                    "description": "The ID of the parent Connector\n"
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. Use this to automatically rotate\nConnector tokens on a schedule.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The Refresh Token of the parent Connector\n",
                    "secret": true
                }
            },
            "required": [
                "accessToken",
                "connectorId",
                "refreshToken"
            ],
            "inputProperties": {
                "connectorId": {
                    "type": "string",
                    "description": "The ID of the parent Connector\n"
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. Use this to automatically rotate\nConnector tokens on a schedule.\n"
                }
            },
            "requiredInputs": [
                "connectorId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateConnectorTokens resources.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "The Access Token of the parent Connector\n",
                        "secret": true
                    },
                    "connectorId": {
                        "type": "string",
                        "description": "The ID of the parent Connector\n"
                    },
                    "keepers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. Use this to automatically rotate\nConnector tokens on a schedule.\n"
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "The Refresh Token of the parent Connector\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateGroup:TwingateGroup": {
            "properties": {
                "isAuthoritative": {
                    "type": "boolean",
                    "description": "Determines whether User assignments to this Group will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the group\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Defines which Security Policy applies to this Group. The Security Policy ID can be obtained from the\n`twingate_security_policy` and `twingate_security_policies` data sources.\n"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of User IDs that have permission to access the Group.\n"
                }
            },
            "required": [
                "isAuthoritative",
                "name",
                "securityPolicyId"
            ],
            "inputProperties": {
                "isAuthoritative": {
                    "type": "boolean",
                    "description": "Determines whether User assignments to this Group will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the group\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "Defines which Security Policy applies to this Group. The Security Policy ID can be obtained from the\n`twingate_security_policy` and `twingate_security_policies` data sources.\n"
                },
                "userIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of User IDs that have permission to access the Group.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateGroup resources.\n",
                "properties": {
                    "isAuthoritative": {
                        "type": "boolean",
                        "description": "Determines whether User assignments to this Group will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the group\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "Defines which Security Policy applies to this Group. The Security Policy ID can be obtained from the\n`twingate_security_policy` and `twingate_security_policies` data sources.\n"
                    },
                    "userIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of User IDs that have permission to access the Group.\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateRemoteNetwork:TwingateRemoteNetwork": {
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE_CLOUD, ON_PREMISE, OTHER.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Remote Network\n"
                }
            },
            "required": [
                "location",
                "name"
            ],
            "inputProperties": {
                "location": {
                    "type": "string",
                    "description": "The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE_CLOUD, ON_PREMISE, OTHER.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Remote Network\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateRemoteNetwork resources.\n",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE_CLOUD, ON_PREMISE, OTHER.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Remote Network\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateResource:TwingateResource": {
            "properties": {
                "access": {
                    "$ref": "#/types/twingate:index/TwingateResourceAccess:TwingateResourceAccess",
                    "description": "Restrict access to certain groups or service accounts\n"
                },
                "address": {
                    "type": "string",
                    "description": "The Resource's IP/CIDR or FQDN/DNS zone\n"
                },
                "alias": {
                    "type": "string",
                    "description": "Set a DNS alias address for the Resource. Must be a DNS-valid name string.\n"
                },
                "isAuthoritative": {
                    "type": "boolean",
                    "description": "Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                },
                "isBrowserShortcutEnabled": {
                    "type": "boolean",
                    "description": "Controls whether an \"Open in Browser\" shortcut will be shown for this Resource in the Twingate Client.\n"
                },
                "isVisible": {
                    "type": "boolean",
                    "description": "Controls whether this Resource will be visible in the main Resource list in the Twingate Client.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Resource\n"
                },
                "protocols": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocols:TwingateResourceProtocols",
                    "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no\nrestriction, and all protocols and ports are allowed.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "Remote Network ID where the Resource lives\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of a `twingate_security_policy` to set as this Resource's Security Policy.\n"
                }
            },
            "required": [
                "address",
                "isAuthoritative",
                "isBrowserShortcutEnabled",
                "isVisible",
                "name",
                "protocols",
                "remoteNetworkId",
                "securityPolicyId"
            ],
            "inputProperties": {
                "access": {
                    "$ref": "#/types/twingate:index/TwingateResourceAccess:TwingateResourceAccess",
                    "description": "Restrict access to certain groups or service accounts\n"
                },
                "address": {
                    "type": "string",
                    "description": "The Resource's IP/CIDR or FQDN/DNS zone\n"
                },
                "alias": {
                    "type": "string",
                    "description": "Set a DNS alias address for the Resource. Must be a DNS-valid name string.\n"
                },
                "isAuthoritative": {
                    "type": "boolean",
                    "description": "Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                },
                "isBrowserShortcutEnabled": {
                    "type": "boolean",
                    "description": "Controls whether an \"Open in Browser\" shortcut will be shown for this Resource in the Twingate Client.\n"
                },
                "isVisible": {
                    "type": "boolean",
                    "description": "Controls whether this Resource will be visible in the main Resource list in the Twingate Client.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Resource\n"
                },
                "protocols": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocols:TwingateResourceProtocols",
                    "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no\nrestriction, and all protocols and ports are allowed.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "Remote Network ID where the Resource lives\n"
                },
                "securityPolicyId": {
                    "type": "string",
                    "description": "The ID of a `twingate_security_policy` to set as this Resource's Security Policy.\n"
                }
            },
            "requiredInputs": [
                "address",
                "remoteNetworkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateResource resources.\n",
                "properties": {
                    "access": {
                        "$ref": "#/types/twingate:index/TwingateResourceAccess:TwingateResourceAccess",
                        "description": "Restrict access to certain groups or service accounts\n"
                    },
                    "address": {
                        "type": "string",
                        "description": "The Resource's IP/CIDR or FQDN/DNS zone\n"
                    },
                    "alias": {
                        "type": "string",
                        "description": "Set a DNS alias address for the Resource. Must be a DNS-valid name string.\n"
                    },
                    "isAuthoritative": {
                        "type": "boolean",
                        "description": "Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                    },
                    "isBrowserShortcutEnabled": {
                        "type": "boolean",
                        "description": "Controls whether an \"Open in Browser\" shortcut will be shown for this Resource in the Twingate Client.\n"
                    },
                    "isVisible": {
                        "type": "boolean",
                        "description": "Controls whether this Resource will be visible in the main Resource list in the Twingate Client.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Resource\n"
                    },
                    "protocols": {
                        "$ref": "#/types/twingate:index/TwingateResourceProtocols:TwingateResourceProtocols",
                        "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no\nrestriction, and all protocols and ports are allowed.\n"
                    },
                    "remoteNetworkId": {
                        "type": "string",
                        "description": "Remote Network ID where the Resource lives\n"
                    },
                    "securityPolicyId": {
                        "type": "string",
                        "description": "The ID of a `twingate_security_policy` to set as this Resource's Security Policy.\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateServiceAccount:TwingateServiceAccount": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Service Account in Twingate\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Service Account in Twingate\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateServiceAccount resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Service Account in Twingate\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateServiceAccountKey:TwingateServiceAccountKey": {
            "properties": {
                "expirationTime": {
                    "type": "integer",
                    "description": "Specifies how many days until a Service Account Key expires. This should be an integer between 0 and 365 representing\nthe number of days until the Service Account Key will expire. Defaults to 0, meaning the key will never expire.\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "If the value of this attribute changes to false, Terraform will destroy and recreate the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Service Key\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The id of the Service Account\n"
                },
                "token": {
                    "type": "string",
                    "description": "Autogenerated Service Key token. Used to configure a Twingate Client running in headless mode.\n",
                    "secret": true
                }
            },
            "required": [
                "expirationTime",
                "isActive",
                "name",
                "serviceAccountId",
                "token"
            ],
            "inputProperties": {
                "expirationTime": {
                    "type": "integer",
                    "description": "Specifies how many days until a Service Account Key expires. This should be an integer between 0 and 365 representing\nthe number of days until the Service Account Key will expire. Defaults to 0, meaning the key will never expire.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Service Key\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The id of the Service Account\n"
                }
            },
            "requiredInputs": [
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateServiceAccountKey resources.\n",
                "properties": {
                    "expirationTime": {
                        "type": "integer",
                        "description": "Specifies how many days until a Service Account Key expires. This should be an integer between 0 and 365 representing\nthe number of days until the Service Account Key will expire. Defaults to 0, meaning the key will never expire.\n"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "If the value of this attribute changes to false, Terraform will destroy and recreate the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Service Key\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "The id of the Service Account\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "Autogenerated Service Key token. Used to configure a Twingate Client running in headless mode.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateUser:TwingateUser": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The User's email address\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "The User's first name\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Determines whether the User is active or not. Inactive users will be not able to sign in.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "The User's last name\n"
                },
                "role": {
                    "type": "string",
                    "description": "Determines the User's role. Either ADMIN, DEVOPS, SUPPORT or MEMBER.\n"
                },
                "sendInvite": {
                    "type": "boolean",
                    "description": "Determines whether to send an email invitation to the User. True by default.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Indicates the User's type. Either MANUAL or SYNCED.\n"
                }
            },
            "required": [
                "email",
                "firstName",
                "isActive",
                "lastName",
                "role",
                "sendInvite",
                "type"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "The User's email address\n"
                },
                "firstName": {
                    "type": "string",
                    "description": "The User's first name\n"
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Determines whether the User is active or not. Inactive users will be not able to sign in.\n"
                },
                "lastName": {
                    "type": "string",
                    "description": "The User's last name\n"
                },
                "role": {
                    "type": "string",
                    "description": "Determines the User's role. Either ADMIN, DEVOPS, SUPPORT or MEMBER.\n"
                },
                "sendInvite": {
                    "type": "boolean",
                    "description": "Determines whether to send an email invitation to the User. True by default.\n"
                }
            },
            "requiredInputs": [
                "email"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateUser resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The User's email address\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The User's first name\n"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Determines whether the User is active or not. Inactive users will be not able to sign in.\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The User's last name\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "Determines the User's role. Either ADMIN, DEVOPS, SUPPORT or MEMBER.\n"
                    },
                    "sendInvite": {
                        "type": "boolean",
                        "description": "Determines whether to send an email invitation to the User. True by default.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Indicates the User's type. Either MANUAL or SYNCED.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "twingate:index/getTwingateConnector:getTwingateConnector": {
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateConnector.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateConnector.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "remoteNetworkId": {
                        "type": "string"
                    },
                    "statusUpdatesEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "remoteNetworkId",
                    "statusUpdatesEnabled"
                ]
            }
        },
        "twingate:index/getTwingateConnectors:getTwingateConnectors": {
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateConnectors.\n",
                "properties": {
                    "connectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateConnectorsConnector:getTwingateConnectorsConnector"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateConnectors.\n",
                "properties": {
                    "connectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateConnectorsConnector:getTwingateConnectorsConnector"
                        }
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "connectors",
                    "id"
                ]
            }
        },
        "twingate:index/getTwingateGroup:getTwingateGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "securityPolicyId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "isActive",
                    "name",
                    "securityPolicyId",
                    "type"
                ]
            }
        },
        "twingate:index/getTwingateGroups:getTwingateGroups": {
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateGroups.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateGroupsGroup:getTwingateGroupsGroup"
                        }
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateGroups.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateGroupsGroup:getTwingateGroupsGroup"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id"
                ]
            }
        },
        "twingate:index/getTwingateRemoteNetwork:getTwingateRemoteNetwork": {
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateRemoteNetwork.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateRemoteNetwork.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "location"
                ]
            }
        },
        "twingate:index/getTwingateRemoteNetworks:getTwingateRemoteNetworks": {
            "outputs": {
                "description": "A collection of values returned by getTwingateRemoteNetworks.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "remoteNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateRemoteNetworksRemoteNetwork:getTwingateRemoteNetworksRemoteNetwork"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "remoteNetworks"
                ]
            }
        },
        "twingate:index/getTwingateResource:getTwingateResource": {
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateResource.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "protocols": {
                        "$ref": "#/types/twingate:index/getTwingateResourceProtocols:getTwingateResourceProtocols"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateResource.\n",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocols": {
                        "$ref": "#/types/twingate:index/getTwingateResourceProtocols:getTwingateResourceProtocols"
                    },
                    "remoteNetworkId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "id",
                    "name",
                    "remoteNetworkId"
                ]
            }
        },
        "twingate:index/getTwingateResources:getTwingateResources": {
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateResources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateResources.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateResourcesResource:getTwingateResourcesResource"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "resources"
                ]
            }
        },
        "twingate:index/getTwingateSecurityPolicies:getTwingateSecurityPolicies": {
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateSecurityPolicies.\n",
                "properties": {
                    "securityPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateSecurityPoliciesSecurityPolicy:getTwingateSecurityPoliciesSecurityPolicy"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateSecurityPolicies.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "securityPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateSecurityPoliciesSecurityPolicy:getTwingateSecurityPoliciesSecurityPolicy"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "securityPolicies"
                ]
            }
        },
        "twingate:index/getTwingateSecurityPolicy:getTwingateSecurityPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateSecurityPolicy.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateSecurityPolicy.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/getTwingateServiceAccounts:getTwingateServiceAccounts": {
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateServiceAccounts.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateServiceAccounts.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateServiceAccountsServiceAccount:getTwingateServiceAccountsServiceAccount"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "serviceAccounts"
                ]
            }
        },
        "twingate:index/getTwingateUser:getTwingateUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateUser.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateUser.\n",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "isAdmin": {
                        "type": "boolean",
                        "deprecationMessage": "This read-only Boolean value will be deprecated in a future release. You may use the `role` value instead."
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "firstName",
                    "id",
                    "isAdmin",
                    "lastName",
                    "role",
                    "type"
                ]
            }
        },
        "twingate:index/getTwingateUsers:getTwingateUsers": {
            "outputs": {
                "description": "A collection of values returned by getTwingateUsers.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateUsersUser:getTwingateUsersUser"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "users"
                ]
            }
        }
    }
}