{
    "name": "twingate",
    "displayName": "Twingate",
    "description": "A Pulumi package for creating and managing Twingate cloud resources.",
    "keywords": [
        "pulumi",
        "twingate",
        "category/infrastructure"
    ],
    "homepage": "https://www.twingate.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`twingate` Terraform Provider](https://github.com/Twingate/terraform-provider-twingate).",
    "repository": "https://github.com/Twingate-Labs/pulumi-twingate",
    "pluginDownloadURL": "https://github.com/Twingate-Labs/pulumi-twingate/releases/download/v${VERSION}",
    "publisher": "Twingate",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "rootNamespace": "TwingateLabs"
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Twingate cloud resources.",
            "packageName": "@twingate-labs/pulumi-twingate",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Twingate/terraform-provider-twingate)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-twingate` repo](https://github.com/Twingate-Labs/pulumi-twingate/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-twingate` repo](https://github.com/Twingate/terraform-provider-twingate/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Twingate/terraform-provider-twingate)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-twingate` repo](https://github.com/Twingate-Labs/pulumi-twingate/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-twingate` repo](https://github.com/Twingate/terraform-provider-twingate/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "apiToken": {
                "type": "string",
                "description": "The access key for API operations. You can retrieve this from the Twingate Admin Console\n([documentation](https://docs.twingate.com/docs/api-overview)). Alternatively, this can be specified using the\nTWINGATE_API_TOKEN environment variable.\n",
                "secret": true
            },
            "httpMaxRetry": {
                "type": "integer",
                "description": "Specifies a retry limit for the http requests made. The default value is 10. Alternatively, this can be specified using\nthe TWINGATE_HTTP_MAX_RETRY environment variable\n",
                "default": 5
            },
            "httpTimeout": {
                "type": "integer",
                "description": "Specifies a time limit in seconds for the http requests made. The default value is 10 seconds. Alternatively, this can\nbe specified using the TWINGATE_HTTP_TIMEOUT environment variable\n",
                "default": 10
            },
            "network": {
                "type": "string",
                "description": "Your Twingate network ID for API operations. You can find it in the Admin Console URL, for example:\n`autoco.twingate.com`, where `autoco` is your network ID Alternatively, this can be specified using the TWINGATE_NETWORK\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The default is 'twingate.com' This is optional and shouldn't be changed under normal circumstances.\n"
            }
        }
    },
    "types": {
        "twingate:index/TwingateResourceAccess:TwingateResourceAccess": {
            "properties": {
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs that will have permission to access the Resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serviceAccountIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Service Account IDs that will have permission to access the Resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "twingate:index/TwingateResourceProtocols:TwingateResourceProtocols": {
            "properties": {
                "allowIcmp": {
                    "type": "boolean",
                    "description": "Whether to allow ICMP (ping) traffic\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcp": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocolsTcp:TwingateResourceProtocolsTcp",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "udp": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocolsUdp:TwingateResourceProtocolsUdp",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "tcp",
                "udp"
            ]
        },
        "twingate:index/TwingateResourceProtocolsTcp:TwingateResourceProtocolsTcp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policy"
            ]
        },
        "twingate:index/TwingateResourceProtocolsUdp:TwingateResourceProtocolsUdp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policy"
            ]
        },
        "twingate:index/getTwingateConnectorsConnector:getTwingateConnectorsConnector": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the Connector\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The Name of the Connector\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "The ID of the Remote Network attached to the Connector\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "remoteNetworkId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateGroupsGroup:getTwingateGroupsGroup": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the Group\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Indicates if the Group is active\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Group\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "description": "The type of the Group\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "isActive",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateRemoteNetworksRemoteNetwork:getTwingateRemoteNetworksRemoteNetwork": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the Remote Network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "location": {
                    "type": "string",
                    "description": "The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Remote Network\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "location",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourceProtocol:getTwingateResourceProtocol": {
            "properties": {
                "allowIcmp": {
                    "type": "boolean",
                    "description": "Whether to allow ICMP (ping) traffic\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/twingate:index/getTwingateResourceProtocolTcp:getTwingateResourceProtocolTcp"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "udps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/twingate:index/getTwingateResourceProtocolUdp:getTwingateResourceProtocolUdp"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowIcmp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourceProtocolTcp:getTwingateResourceProtocolTcp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policy",
                "ports"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourceProtocolUdp:getTwingateResourceProtocolUdp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policy",
                "ports"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourcesResource:getTwingateResourcesResource": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The Resource's IP/CIDR or FQDN/DNS zone\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The id of the Resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/twingate:index/getTwingateResourcesResourceProtocol:getTwingateResourcesResourceProtocol"
                    },
                    "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no restriction, and all protocols and ports are allowed.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "Remote Network ID where the Resource lives\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "id",
                "name",
                "remoteNetworkId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourcesResourceProtocol:getTwingateResourcesResourceProtocol": {
            "properties": {
                "allowIcmp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/twingate:index/getTwingateResourcesResourceProtocolTcp:getTwingateResourcesResourceProtocolTcp"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "udps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/twingate:index/getTwingateResourcesResourceProtocolUdp:getTwingateResourcesResourceProtocolUdp"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "allowIcmp"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourcesResourceProtocolTcp:getTwingateResourcesResourceProtocolTcp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policy",
                "ports"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateResourcesResourceProtocolUdp:getTwingateResourcesResourceProtocolUdp": {
            "properties": {
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "policy",
                "ports"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateSecurityPoliciesSecurityPolicy:getTwingateSecurityPoliciesSecurityPolicy": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Return a matching Security Policy by its ID. The ID for the Security Policy must be obtained from the Admin API.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Return a Security Policy that exactly matches this name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateServiceAccountsServiceAccount:getTwingateServiceAccountsServiceAccount": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the Service Account resource\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "keyIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of twingate*service*account_key IDs that are assigned to the Service Account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Service Account\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of twingate.TwingateResource IDs that the Service Account is assigned to.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id",
                "keyIds",
                "name",
                "resourceIds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "twingate:index/getTwingateUsersUser:getTwingateUsersUser": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email address of the User\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name of the User\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the User\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isAdmin": {
                    "type": "boolean",
                    "description": "Indicates whether the User is an admin\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the User\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "role": {
                    "type": "string",
                    "description": "Indicates the User's role. Either ADMIN, DEVOPS, SUPPORT, or MEMBER.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "email",
                "firstName",
                "id",
                "isAdmin",
                "lastName",
                "role"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the twingate package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiToken": {
                "type": "string",
                "description": "The access key for API operations. You can retrieve this from the Twingate Admin Console\n([documentation](https://docs.twingate.com/docs/api-overview)). Alternatively, this can be specified using the\nTWINGATE_API_TOKEN environment variable.\n",
                "secret": true
            },
            "httpMaxRetry": {
                "type": "integer",
                "description": "Specifies a retry limit for the http requests made. The default value is 10. Alternatively, this can be specified using\nthe TWINGATE_HTTP_MAX_RETRY environment variable\n"
            },
            "httpTimeout": {
                "type": "integer",
                "description": "Specifies a time limit in seconds for the http requests made. The default value is 10 seconds. Alternatively, this can\nbe specified using the TWINGATE_HTTP_TIMEOUT environment variable\n"
            },
            "network": {
                "type": "string",
                "description": "Your Twingate network ID for API operations. You can find it in the Admin Console URL, for example:\n`autoco.twingate.com`, where `autoco` is your network ID Alternatively, this can be specified using the TWINGATE_NETWORK\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The default is 'twingate.com' This is optional and shouldn't be changed under normal circumstances.\n"
            }
        },
        "inputProperties": {
            "apiToken": {
                "type": "string",
                "description": "The access key for API operations. You can retrieve this from the Twingate Admin Console\n([documentation](https://docs.twingate.com/docs/api-overview)). Alternatively, this can be specified using the\nTWINGATE_API_TOKEN environment variable.\n",
                "secret": true
            },
            "httpMaxRetry": {
                "type": "integer",
                "description": "Specifies a retry limit for the http requests made. The default value is 10. Alternatively, this can be specified using\nthe TWINGATE_HTTP_MAX_RETRY environment variable\n",
                "default": 5
            },
            "httpTimeout": {
                "type": "integer",
                "description": "Specifies a time limit in seconds for the http requests made. The default value is 10 seconds. Alternatively, this can\nbe specified using the TWINGATE_HTTP_TIMEOUT environment variable\n",
                "default": 10
            },
            "network": {
                "type": "string",
                "description": "Your Twingate network ID for API operations. You can find it in the Admin Console URL, for example:\n`autoco.twingate.com`, where `autoco` is your network ID Alternatively, this can be specified using the TWINGATE_NETWORK\nenvironment variable.\n"
            },
            "url": {
                "type": "string",
                "description": "The default is 'twingate.com' This is optional and shouldn't be changed under normal circumstances.\n"
            }
        }
    },
    "resources": {
        "twingate:index/twingateConnector:TwingateConnector": {
            "description": "Connectors provide connectivity to Remote Networks. This resource type will create the Connector in the Twingate Admin Console, but in order to successfully deploy it, you must also generate Connector tokens that authenticate the Connector with Twingate. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/understanding-access-nodes).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@twingate-labs/pulumi-twingate\";\n\nconst awsNetwork = new twingate.TwingateRemoteNetwork(\"awsNetwork\", {name: \"aws_remote_network\"});\nconst awsConnector = new twingate.TwingateConnector(\"awsConnector\", {remoteNetworkId: awsNetwork.id});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\naws_network = twingate.TwingateRemoteNetwork(\"awsNetwork\", name=\"aws_remote_network\")\naws_connector = twingate.TwingateConnector(\"awsConnector\", remote_network_id=aws_network.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = TwingateLabs.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var awsNetwork = new Twingate.TwingateRemoteNetwork(\"awsNetwork\", new()\n    {\n        Name = \"aws_remote_network\",\n    });\n\n    var awsConnector = new Twingate.TwingateConnector(\"awsConnector\", new()\n    {\n        RemoteNetworkId = awsNetwork.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tawsNetwork, err := twingate.NewTwingateRemoteNetwork(ctx, \"awsNetwork\", \u0026twingate.TwingateRemoteNetworkArgs{\n\t\t\tName: pulumi.String(\"aws_remote_network\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = twingate.NewTwingateConnector(ctx, \"awsConnector\", \u0026twingate.TwingateConnectorArgs{\n\t\t\tRemoteNetworkId: awsNetwork.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateRemoteNetwork;\nimport com.pulumi.twingate.TwingateRemoteNetworkArgs;\nimport com.pulumi.twingate.TwingateConnector;\nimport com.pulumi.twingate.TwingateConnectorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var awsNetwork = new TwingateRemoteNetwork(\"awsNetwork\", TwingateRemoteNetworkArgs.builder()        \n            .name(\"aws_remote_network\")\n            .build());\n\n        var awsConnector = new TwingateConnector(\"awsConnector\", TwingateConnectorArgs.builder()        \n            .remoteNetworkId(awsNetwork.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  awsNetwork:\n    type: twingate:TwingateRemoteNetwork\n    properties:\n      name: aws_remote_network\n  awsConnector:\n    type: twingate:TwingateConnector\n    properties:\n      remoteNetworkId: ${awsNetwork.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import twingate:index/twingateConnector:TwingateConnector aws_connector Q29ubmVjdG9yOjI2NzM=\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Connector, if not provided one will be generated\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "The ID of the Remote Network the Connector is attached to\n"
                }
            },
            "required": [
                "name",
                "remoteNetworkId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the Connector, if not provided one will be generated\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "The ID of the Remote Network the Connector is attached to\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "remoteNetworkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateConnector resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the Connector, if not provided one will be generated\n"
                    },
                    "remoteNetworkId": {
                        "type": "string",
                        "description": "The ID of the Remote Network the Connector is attached to\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateConnectorTokens:TwingateConnectorTokens": {
            "description": "This resource type will generate tokens for a Connector, which are needed to successfully provision one on your network. The Connector itself has its own resource type and must be created before you can provision tokens.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@twingate-labs/pulumi-twingate\";\n\nconst awsNetwork = new twingate.TwingateRemoteNetwork(\"awsNetwork\", {name: \"aws_remote_network\"});\nconst awsConnector = new twingate.TwingateConnector(\"awsConnector\", {remoteNetworkId: awsNetwork.id});\nconst awsConnectorTokens = new twingate.TwingateConnectorTokens(\"awsConnectorTokens\", {connectorId: awsConnector.id});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\naws_network = twingate.TwingateRemoteNetwork(\"awsNetwork\", name=\"aws_remote_network\")\naws_connector = twingate.TwingateConnector(\"awsConnector\", remote_network_id=aws_network.id)\naws_connector_tokens = twingate.TwingateConnectorTokens(\"awsConnectorTokens\", connector_id=aws_connector.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = TwingateLabs.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var awsNetwork = new Twingate.TwingateRemoteNetwork(\"awsNetwork\", new()\n    {\n        Name = \"aws_remote_network\",\n    });\n\n    var awsConnector = new Twingate.TwingateConnector(\"awsConnector\", new()\n    {\n        RemoteNetworkId = awsNetwork.Id,\n    });\n\n    var awsConnectorTokens = new Twingate.TwingateConnectorTokens(\"awsConnectorTokens\", new()\n    {\n        ConnectorId = awsConnector.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tawsNetwork, err := twingate.NewTwingateRemoteNetwork(ctx, \"awsNetwork\", \u0026twingate.TwingateRemoteNetworkArgs{\n\t\t\tName: pulumi.String(\"aws_remote_network\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tawsConnector, err := twingate.NewTwingateConnector(ctx, \"awsConnector\", \u0026twingate.TwingateConnectorArgs{\n\t\t\tRemoteNetworkId: awsNetwork.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = twingate.NewTwingateConnectorTokens(ctx, \"awsConnectorTokens\", \u0026twingate.TwingateConnectorTokensArgs{\n\t\t\tConnectorId: awsConnector.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateRemoteNetwork;\nimport com.pulumi.twingate.TwingateRemoteNetworkArgs;\nimport com.pulumi.twingate.TwingateConnector;\nimport com.pulumi.twingate.TwingateConnectorArgs;\nimport com.pulumi.twingate.TwingateConnectorTokens;\nimport com.pulumi.twingate.TwingateConnectorTokensArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var awsNetwork = new TwingateRemoteNetwork(\"awsNetwork\", TwingateRemoteNetworkArgs.builder()        \n            .name(\"aws_remote_network\")\n            .build());\n\n        var awsConnector = new TwingateConnector(\"awsConnector\", TwingateConnectorArgs.builder()        \n            .remoteNetworkId(awsNetwork.id())\n            .build());\n\n        var awsConnectorTokens = new TwingateConnectorTokens(\"awsConnectorTokens\", TwingateConnectorTokensArgs.builder()        \n            .connectorId(awsConnector.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  awsNetwork:\n    type: twingate:TwingateRemoteNetwork\n    properties:\n      name: aws_remote_network\n  awsConnector:\n    type: twingate:TwingateConnector\n    properties:\n      remoteNetworkId: ${awsNetwork.id}\n  awsConnectorTokens:\n    type: twingate:TwingateConnectorTokens\n    properties:\n      connectorId: ${awsConnector.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The Access Token of the parent Connector\n",
                    "secret": true
                },
                "connectorId": {
                    "type": "string",
                    "description": "The ID of the parent Connector\n"
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. Use this to automatically rotate Connector tokens on a schedule.\n"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The Refresh Token of the parent Connector\n",
                    "secret": true
                }
            },
            "required": [
                "accessToken",
                "connectorId",
                "refreshToken"
            ],
            "inputProperties": {
                "connectorId": {
                    "type": "string",
                    "description": "The ID of the parent Connector\n",
                    "willReplaceOnChanges": true
                },
                "keepers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. Use this to automatically rotate Connector tokens on a schedule.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "connectorId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateConnectorTokens resources.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "The Access Token of the parent Connector\n",
                        "secret": true
                    },
                    "connectorId": {
                        "type": "string",
                        "description": "The ID of the parent Connector\n",
                        "willReplaceOnChanges": true
                    },
                    "keepers": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Arbitrary map of values that, when changed, will trigger recreation of resource. Use this to automatically rotate Connector tokens on a schedule.\n",
                        "willReplaceOnChanges": true
                    },
                    "refreshToken": {
                        "type": "string",
                        "description": "The Refresh Token of the parent Connector\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateGroup:TwingateGroup": {
            "description": "Groups are how users are authorized to access Resources. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/groups).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@twingate-labs/pulumi-twingate\";\n\nconst aws = new twingate.TwingateGroup(\"aws\", {name: \"aws_group\"});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\naws = twingate.TwingateGroup(\"aws\", name=\"aws_group\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = TwingateLabs.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var aws = new Twingate.TwingateGroup(\"aws\", new()\n    {\n        Name = \"aws_group\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.NewTwingateGroup(ctx, \"aws\", \u0026twingate.TwingateGroupArgs{\n\t\t\tName: pulumi.String(\"aws_group\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateGroup;\nimport com.pulumi.twingate.TwingateGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var aws = new TwingateGroup(\"aws\", TwingateGroupArgs.builder()        \n            .name(\"aws_group\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  aws:\n    type: twingate:TwingateGroup\n    properties:\n      name: aws_group\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import twingate:index/twingateGroup:TwingateGroup aws R3JvdXA6MzQ4OTE=\n```\n\n ",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the group\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the group\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateGroup resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the group\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateRemoteNetwork:TwingateRemoteNetwork": {
            "description": "A Remote Network represents a single private network in Twingate that can have one or more Connectors and Resources assigned to it. You must create a Remote Network before creating Resources and Connectors that belong to it. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/remote-networks).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@twingate-labs/pulumi-twingate\";\n\nconst awsNetwork = new twingate.TwingateRemoteNetwork(\"awsNetwork\", {name: \"aws_remote_network\"});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\naws_network = twingate.TwingateRemoteNetwork(\"awsNetwork\", name=\"aws_remote_network\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = TwingateLabs.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var awsNetwork = new Twingate.TwingateRemoteNetwork(\"awsNetwork\", new()\n    {\n        Name = \"aws_remote_network\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.NewTwingateRemoteNetwork(ctx, \"awsNetwork\", \u0026twingate.TwingateRemoteNetworkArgs{\n\t\t\tName: pulumi.String(\"aws_remote_network\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateRemoteNetwork;\nimport com.pulumi.twingate.TwingateRemoteNetworkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var awsNetwork = new TwingateRemoteNetwork(\"awsNetwork\", TwingateRemoteNetworkArgs.builder()        \n            .name(\"aws_remote_network\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  awsNetwork:\n    type: twingate:TwingateRemoteNetwork\n    properties:\n      name: aws_remote_network\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import twingate:index/twingateRemoteNetwork:TwingateRemoteNetwork network UmVtb3RlTmV0d29zaipgMKIkNg==\n```\n\n ",
            "properties": {
                "location": {
                    "type": "string",
                    "description": "The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Remote Network\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "location": {
                    "type": "string",
                    "description": "The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Remote Network\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateRemoteNetwork resources.\n",
                "properties": {
                    "location": {
                        "type": "string",
                        "description": "The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Remote Network\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateResource:TwingateResource": {
            "description": "Resources in Twingate represent servers on the private network that clients can connect to. Resources can be defined by IP, CIDR range, FQDN, or DNS zone. For more information, see the Twingate [documentation](https://docs.twingate.com/docs/resources-and-access-nodes).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@twingate-labs/pulumi-twingate\";\n\nconst awsNetwork = new twingate.TwingateRemoteNetwork(\"awsNetwork\", {name: \"aws_remote_network\"});\nconst aws = new twingate.TwingateGroup(\"aws\", {name: \"aws_group\"});\nconst githubActionsProd = new twingate.TwingateServiceAccount(\"githubActionsProd\", {name: \"Github Actions PROD\"});\nconst resource = new twingate.TwingateResource(\"resource\", {\n    name: \"network\",\n    address: \"internal.int\",\n    remoteNetworkId: awsNetwork.id,\n    protocols: {\n        allowIcmp: true,\n        tcp: {\n            policy: \"RESTRICTED\",\n            ports: [\n                \"80\",\n                \"82-83\",\n            ],\n        },\n        udp: {\n            policy: \"ALLOW_ALL\",\n        },\n    },\n    access: {\n        groupIds: [aws.id],\n        serviceAccountIds: [githubActionsProd.id],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\naws_network = twingate.TwingateRemoteNetwork(\"awsNetwork\", name=\"aws_remote_network\")\naws = twingate.TwingateGroup(\"aws\", name=\"aws_group\")\ngithub_actions_prod = twingate.TwingateServiceAccount(\"githubActionsProd\", name=\"Github Actions PROD\")\nresource = twingate.TwingateResource(\"resource\",\n    name=\"network\",\n    address=\"internal.int\",\n    remote_network_id=aws_network.id,\n    protocols=twingate.TwingateResourceProtocolsArgs(\n        allow_icmp=True,\n        tcp=twingate.TwingateResourceProtocolsTcpArgs(\n            policy=\"RESTRICTED\",\n            ports=[\n                \"80\",\n                \"82-83\",\n            ],\n        ),\n        udp=twingate.TwingateResourceProtocolsUdpArgs(\n            policy=\"ALLOW_ALL\",\n        ),\n    ),\n    access=twingate.TwingateResourceAccessArgs(\n        group_ids=[aws.id],\n        service_account_ids=[github_actions_prod.id],\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = TwingateLabs.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var awsNetwork = new Twingate.TwingateRemoteNetwork(\"awsNetwork\", new()\n    {\n        Name = \"aws_remote_network\",\n    });\n\n    var aws = new Twingate.TwingateGroup(\"aws\", new()\n    {\n        Name = \"aws_group\",\n    });\n\n    var githubActionsProd = new Twingate.TwingateServiceAccount(\"githubActionsProd\", new()\n    {\n        Name = \"Github Actions PROD\",\n    });\n\n    var resource = new Twingate.TwingateResource(\"resource\", new()\n    {\n        Name = \"network\",\n        Address = \"internal.int\",\n        RemoteNetworkId = awsNetwork.Id,\n        Protocols = new Twingate.Inputs.TwingateResourceProtocolsArgs\n        {\n            AllowIcmp = true,\n            Tcp = new Twingate.Inputs.TwingateResourceProtocolsTcpArgs\n            {\n                Policy = \"RESTRICTED\",\n                Ports = new[]\n                {\n                    \"80\",\n                    \"82-83\",\n                },\n            },\n            Udp = new Twingate.Inputs.TwingateResourceProtocolsUdpArgs\n            {\n                Policy = \"ALLOW_ALL\",\n            },\n        },\n        Access = new Twingate.Inputs.TwingateResourceAccessArgs\n        {\n            GroupIds = new[]\n            {\n                aws.Id,\n            },\n            ServiceAccountIds = new[]\n            {\n                githubActionsProd.Id,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tawsNetwork, err := twingate.NewTwingateRemoteNetwork(ctx, \"awsNetwork\", \u0026twingate.TwingateRemoteNetworkArgs{\n\t\t\tName: pulumi.String(\"aws_remote_network\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\taws, err := twingate.NewTwingateGroup(ctx, \"aws\", \u0026twingate.TwingateGroupArgs{\n\t\t\tName: pulumi.String(\"aws_group\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tgithubActionsProd, err := twingate.NewTwingateServiceAccount(ctx, \"githubActionsProd\", \u0026twingate.TwingateServiceAccountArgs{\n\t\t\tName: pulumi.String(\"Github Actions PROD\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = twingate.NewTwingateResource(ctx, \"resource\", \u0026twingate.TwingateResourceArgs{\n\t\t\tName:            pulumi.String(\"network\"),\n\t\t\tAddress:         pulumi.String(\"internal.int\"),\n\t\t\tRemoteNetworkId: awsNetwork.ID(),\n\t\t\tProtocols: \u0026twingate.TwingateResourceProtocolsArgs{\n\t\t\t\tAllowIcmp: pulumi.Bool(true),\n\t\t\t\tTcp: \u0026twingate.TwingateResourceProtocolsTcpArgs{\n\t\t\t\t\tPolicy: pulumi.String(\"RESTRICTED\"),\n\t\t\t\t\tPorts: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"80\"),\n\t\t\t\t\t\tpulumi.String(\"82-83\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tUdp: \u0026twingate.TwingateResourceProtocolsUdpArgs{\n\t\t\t\t\tPolicy: pulumi.String(\"ALLOW_ALL\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAccess: \u0026twingate.TwingateResourceAccessArgs{\n\t\t\t\tGroupIds: pulumi.StringArray{\n\t\t\t\t\taws.ID(),\n\t\t\t\t},\n\t\t\t\tServiceAccountIds: pulumi.StringArray{\n\t\t\t\t\tgithubActionsProd.ID(),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateRemoteNetwork;\nimport com.pulumi.twingate.TwingateRemoteNetworkArgs;\nimport com.pulumi.twingate.TwingateGroup;\nimport com.pulumi.twingate.TwingateGroupArgs;\nimport com.pulumi.twingate.TwingateServiceAccount;\nimport com.pulumi.twingate.TwingateServiceAccountArgs;\nimport com.pulumi.twingate.TwingateResource;\nimport com.pulumi.twingate.TwingateResourceArgs;\nimport com.pulumi.twingate.inputs.TwingateResourceProtocolsArgs;\nimport com.pulumi.twingate.inputs.TwingateResourceProtocolsTcpArgs;\nimport com.pulumi.twingate.inputs.TwingateResourceProtocolsUdpArgs;\nimport com.pulumi.twingate.inputs.TwingateResourceAccessArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var awsNetwork = new TwingateRemoteNetwork(\"awsNetwork\", TwingateRemoteNetworkArgs.builder()        \n            .name(\"aws_remote_network\")\n            .build());\n\n        var aws = new TwingateGroup(\"aws\", TwingateGroupArgs.builder()        \n            .name(\"aws_group\")\n            .build());\n\n        var githubActionsProd = new TwingateServiceAccount(\"githubActionsProd\", TwingateServiceAccountArgs.builder()        \n            .name(\"Github Actions PROD\")\n            .build());\n\n        var resource = new TwingateResource(\"resource\", TwingateResourceArgs.builder()        \n            .name(\"network\")\n            .address(\"internal.int\")\n            .remoteNetworkId(awsNetwork.id())\n            .protocols(TwingateResourceProtocolsArgs.builder()\n                .allowIcmp(true)\n                .tcp(TwingateResourceProtocolsTcpArgs.builder()\n                    .policy(\"RESTRICTED\")\n                    .ports(                    \n                        \"80\",\n                        \"82-83\")\n                    .build())\n                .udp(TwingateResourceProtocolsUdpArgs.builder()\n                    .policy(\"ALLOW_ALL\")\n                    .build())\n                .build())\n            .access(TwingateResourceAccessArgs.builder()\n                .groupIds(aws.id())\n                .serviceAccountIds(githubActionsProd.id())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  awsNetwork:\n    type: twingate:TwingateRemoteNetwork\n    properties:\n      name: aws_remote_network\n  aws:\n    type: twingate:TwingateGroup\n    properties:\n      name: aws_group\n  githubActionsProd:\n    type: twingate:TwingateServiceAccount\n    properties:\n      name: Github Actions PROD\n  resource:\n    type: twingate:TwingateResource\n    properties:\n      name: network\n      address: internal.int\n      remoteNetworkId: ${awsNetwork.id}\n      protocols:\n        allowIcmp: true\n        tcp:\n          policy: RESTRICTED\n          ports:\n            - '80'\n            - 82-83\n        udp:\n          policy: ALLOW_ALL\n      access:\n        groupIds:\n          - ${aws.id}\n        serviceAccountIds:\n          - ${githubActionsProd.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import twingate:index/twingateResource:TwingateResource resource UmVzb3VyY2U6MzQwNDQ3\n```\n\n ",
            "properties": {
                "access": {
                    "$ref": "#/types/twingate:index/TwingateResourceAccess:TwingateResourceAccess",
                    "description": "Restrict access to certain groups or service accounts\n"
                },
                "address": {
                    "type": "string",
                    "description": "The Resource's IP/CIDR or FQDN/DNS zone\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs that have permission to access the Resource, cannot be generated by Terraform and must be retrieved\nfrom the Twingate Admin Console or API\n",
                    "deprecationMessage": "The group_ids argument is now deprecated, and the new access block argument should be used instead. The group_ids argument will be removed in a future version of the provider."
                },
                "isAuthoritative": {
                    "type": "boolean",
                    "description": "Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                },
                "isBrowserShortcutEnabled": {
                    "type": "boolean",
                    "description": "Controls whether an \"Open in Browser\" shortcut will be shown for this Resource in the Twingate Client.\n"
                },
                "isVisible": {
                    "type": "boolean",
                    "description": "Controls whether this Resource will be visible in the main Resource list in the Twingate Client.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Resource\n"
                },
                "protocols": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocols:TwingateResourceProtocols",
                    "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no restriction, and all protocols and ports are allowed.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "Remote Network ID where the Resource lives\n"
                }
            },
            "required": [
                "address",
                "isAuthoritative",
                "isBrowserShortcutEnabled",
                "isVisible",
                "name",
                "remoteNetworkId"
            ],
            "inputProperties": {
                "access": {
                    "$ref": "#/types/twingate:index/TwingateResourceAccess:TwingateResourceAccess",
                    "description": "Restrict access to certain groups or service accounts\n"
                },
                "address": {
                    "type": "string",
                    "description": "The Resource's IP/CIDR or FQDN/DNS zone\n"
                },
                "groupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Group IDs that have permission to access the Resource, cannot be generated by Terraform and must be retrieved\nfrom the Twingate Admin Console or API\n",
                    "deprecationMessage": "The group_ids argument is now deprecated, and the new access block argument should be used instead. The group_ids argument will be removed in a future version of the provider."
                },
                "isAuthoritative": {
                    "type": "boolean",
                    "description": "Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                },
                "isBrowserShortcutEnabled": {
                    "type": "boolean",
                    "description": "Controls whether an \"Open in Browser\" shortcut will be shown for this Resource in the Twingate Client.\n"
                },
                "isVisible": {
                    "type": "boolean",
                    "description": "Controls whether this Resource will be visible in the main Resource list in the Twingate Client.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Resource\n"
                },
                "protocols": {
                    "$ref": "#/types/twingate:index/TwingateResourceProtocols:TwingateResourceProtocols",
                    "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no restriction, and all protocols and ports are allowed.\n"
                },
                "remoteNetworkId": {
                    "type": "string",
                    "description": "Remote Network ID where the Resource lives\n"
                }
            },
            "requiredInputs": [
                "address",
                "name",
                "remoteNetworkId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateResource resources.\n",
                "properties": {
                    "access": {
                        "$ref": "#/types/twingate:index/TwingateResourceAccess:TwingateResourceAccess",
                        "description": "Restrict access to certain groups or service accounts\n"
                    },
                    "address": {
                        "type": "string",
                        "description": "The Resource's IP/CIDR or FQDN/DNS zone\n"
                    },
                    "groupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Group IDs that have permission to access the Resource, cannot be generated by Terraform and must be retrieved\nfrom the Twingate Admin Console or API\n",
                        "deprecationMessage": "The group_ids argument is now deprecated, and the new access block argument should be used instead. The group_ids argument will be removed in a future version of the provider."
                    },
                    "isAuthoritative": {
                        "type": "boolean",
                        "description": "Determines whether assignments in the access block will override any existing assignments. Default is `true`. If set to\n`false`, assignments made outside of Terraform will be ignored.\n"
                    },
                    "isBrowserShortcutEnabled": {
                        "type": "boolean",
                        "description": "Controls whether an \"Open in Browser\" shortcut will be shown for this Resource in the Twingate Client.\n"
                    },
                    "isVisible": {
                        "type": "boolean",
                        "description": "Controls whether this Resource will be visible in the main Resource list in the Twingate Client.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Resource\n"
                    },
                    "protocols": {
                        "$ref": "#/types/twingate:index/TwingateResourceProtocols:TwingateResourceProtocols",
                        "description": "Restrict access to certain protocols and ports. By default or when this argument is not defined, there is no restriction, and all protocols and ports are allowed.\n"
                    },
                    "remoteNetworkId": {
                        "type": "string",
                        "description": "Remote Network ID where the Resource lives\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateServiceAccount:TwingateServiceAccount": {
            "description": "Service Accounts offer a way to provide programmatic, centrally-controlled, and consistent access controls.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@twingate-labs/pulumi-twingate\";\n\nconst githubActionsProd = new twingate.TwingateServiceAccount(\"githubActionsProd\", {name: \"Github Actions PROD\"});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\ngithub_actions_prod = twingate.TwingateServiceAccount(\"githubActionsProd\", name=\"Github Actions PROD\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = TwingateLabs.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var githubActionsProd = new Twingate.TwingateServiceAccount(\"githubActionsProd\", new()\n    {\n        Name = \"Github Actions PROD\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.NewTwingateServiceAccount(ctx, \"githubActionsProd\", \u0026twingate.TwingateServiceAccountArgs{\n\t\t\tName: pulumi.String(\"Github Actions PROD\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateServiceAccount;\nimport com.pulumi.twingate.TwingateServiceAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var githubActionsProd = new TwingateServiceAccount(\"githubActionsProd\", TwingateServiceAccountArgs.builder()        \n            .name(\"Github Actions PROD\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  githubActionsProd:\n    type: twingate:TwingateServiceAccount\n    properties:\n      name: Github Actions PROD\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Service Account in Twingate\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Service Account in Twingate\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateServiceAccount resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Service Account in Twingate\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/twingateServiceAccountKey:TwingateServiceAccountKey": {
            "description": "A Service Key authorizes access to all Resources assigned to a Service Account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@twingate-labs/pulumi-twingate\";\n\nconst githubActionsProd = new twingate.TwingateServiceAccount(\"githubActionsProd\", {name: \"Github Actions PROD\"});\nconst githubKey = new twingate.TwingateServiceAccountKey(\"githubKey\", {\n    name: \"Github Actions PROD key\",\n    serviceAccountId: githubActionsProd.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\ngithub_actions_prod = twingate.TwingateServiceAccount(\"githubActionsProd\", name=\"Github Actions PROD\")\ngithub_key = twingate.TwingateServiceAccountKey(\"githubKey\",\n    name=\"Github Actions PROD key\",\n    service_account_id=github_actions_prod.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = TwingateLabs.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var githubActionsProd = new Twingate.TwingateServiceAccount(\"githubActionsProd\", new()\n    {\n        Name = \"Github Actions PROD\",\n    });\n\n    var githubKey = new Twingate.TwingateServiceAccountKey(\"githubKey\", new()\n    {\n        Name = \"Github Actions PROD key\",\n        ServiceAccountId = githubActionsProd.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tgithubActionsProd, err := twingate.NewTwingateServiceAccount(ctx, \"githubActionsProd\", \u0026twingate.TwingateServiceAccountArgs{\n\t\t\tName: pulumi.String(\"Github Actions PROD\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = twingate.NewTwingateServiceAccountKey(ctx, \"githubKey\", \u0026twingate.TwingateServiceAccountKeyArgs{\n\t\t\tName:             pulumi.String(\"Github Actions PROD key\"),\n\t\t\tServiceAccountId: githubActionsProd.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateServiceAccount;\nimport com.pulumi.twingate.TwingateServiceAccountArgs;\nimport com.pulumi.twingate.TwingateServiceAccountKey;\nimport com.pulumi.twingate.TwingateServiceAccountKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var githubActionsProd = new TwingateServiceAccount(\"githubActionsProd\", TwingateServiceAccountArgs.builder()        \n            .name(\"Github Actions PROD\")\n            .build());\n\n        var githubKey = new TwingateServiceAccountKey(\"githubKey\", TwingateServiceAccountKeyArgs.builder()        \n            .name(\"Github Actions PROD key\")\n            .serviceAccountId(githubActionsProd.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  githubActionsProd:\n    type: twingate:TwingateServiceAccount\n    properties:\n      name: Github Actions PROD\n  githubKey:\n    type: twingate:TwingateServiceAccountKey\n    properties:\n      name: Github Actions PROD key\n      serviceAccountId: ${githubActionsProd.id}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Service Key\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The id of the Service Account\n"
                },
                "token": {
                    "type": "string",
                    "description": "Autogenerated Service Key token. Used to configure a Twingate Client running in headless mode.\n",
                    "secret": true
                }
            },
            "required": [
                "name",
                "serviceAccountId",
                "token"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Service Key\n"
                },
                "serviceAccountId": {
                    "type": "string",
                    "description": "The id of the Service Account\n"
                }
            },
            "requiredInputs": [
                "serviceAccountId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TwingateServiceAccountKey resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Service Key\n"
                    },
                    "serviceAccountId": {
                        "type": "string",
                        "description": "The id of the Service Account\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "Autogenerated Service Key token. Used to configure a Twingate Client running in headless mode.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "twingate:index/getTwingateConnector:getTwingateConnector": {
            "description": "Connectors provide connectivity to Remote Networks. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/understanding-access-nodes).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateConnector({\n    id: \"\u003cyour connector's id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_connector(id=\"\u003cyour connector's id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateConnector.Invoke(new()\n    {\n        Id = \"\u003cyour connector's id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.LookupTwingateConnector(ctx, \u0026twingate.LookupTwingateConnectorArgs{\n\t\t\tId: \"\u003cyour connector's id\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateConnectorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateConnector(GetTwingateConnectorArgs.builder()\n            .id(\"\u003cyour connector's id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateConnector\n      Arguments:\n        id: \u003cyour connector's id\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateConnector.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Connector. The ID for the Connector must be obtained from the Admin API.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateConnector.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Connector. The ID for the Connector must be obtained from the Admin API.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Connector\n"
                    },
                    "remoteNetworkId": {
                        "type": "string",
                        "description": "The ID of the Remote Network the Connector is attached to\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "remoteNetworkId"
                ]
            }
        },
        "twingate:index/getTwingateConnectors:getTwingateConnectors": {
            "description": "Connectors provide connectivity to Remote Networks. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/understanding-access-nodes).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst all = twingate.getTwingateConnectors({});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nall = twingate.get_twingate_connectors()\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Twingate.GetTwingateConnectors.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateConnectors(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateConnectorsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = TwingateFunctions.getTwingateConnectors();\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: twingate:getTwingateConnectors\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateConnectors.\n",
                "properties": {
                    "connectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateConnectorsConnector:getTwingateConnectorsConnector"
                        },
                        "description": "List of Connectors\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateConnectors.\n",
                "properties": {
                    "connectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateConnectorsConnector:getTwingateConnectorsConnector"
                        },
                        "description": "List of Connectors\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "twingate:index/getTwingateGroup:getTwingateGroup": {
            "description": "Groups are how users are authorized to access Resources. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/groups).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateGroup({\n    id: \"\u003cyour group's id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_group(id=\"\u003cyour group's id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateGroup.Invoke(new()\n    {\n        Id = \"\u003cyour group's id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.LookupTwingateGroup(ctx, \u0026twingate.LookupTwingateGroupArgs{\n\t\t\tId: \"\u003cyour group's id\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateGroup(GetTwingateGroupArgs.builder()\n            .id(\"\u003cyour group's id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateGroup\n      Arguments:\n        id: \u003cyour group's id\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateGroup.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Group. The ID for the Group must be obtained from the Admin API.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateGroup.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Group. The ID for the Group must be obtained from the Admin API.\n"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Indicates if the Group is active\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Group\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the Group\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "isActive",
                    "name",
                    "type"
                ]
            }
        },
        "twingate:index/getTwingateGroups:getTwingateGroups": {
            "description": "Groups are how users are authorized to access Resources. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/groups).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateGroups({\n    name: \"\u003cyour group's name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_groups(name=\"\u003cyour group's name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateGroups.Invoke(new()\n    {\n        Name = \"\u003cyour group's name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateGroups(ctx, \u0026twingate.GetTwingateGroupsArgs{\n\t\t\tName: pulumi.StringRef(\"\u003cyour group's name\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateGroupsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateGroups(GetTwingateGroupsArgs.builder()\n            .name(\"\u003cyour group's name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateGroups\n      Arguments:\n        name: \u003cyour group's name\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateGroups.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateGroupsGroup:getTwingateGroupsGroup"
                        },
                        "description": "List of Groups\n"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Returns only Groups matching the specified state.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Returns only Groups that exactly match this name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Returns only Groups of the specified type (valid: `MANUAL`, `SYNCED`, `SYSTEM`).\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateGroups.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateGroupsGroup:getTwingateGroupsGroup"
                        },
                        "description": "List of Groups\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Returns only Groups matching the specified state.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Returns only Groups that exactly match this name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Returns only Groups of the specified type (valid: `MANUAL`, `SYNCED`, `SYSTEM`).\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "twingate:index/getTwingateRemoteNetwork:getTwingateRemoteNetwork": {
            "description": "A Remote Network represents a single private network in Twingate that can have one or more Connectors and Resources assigned to it. You must create a Remote Network before creating Resources and Connectors that belong to it. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/remote-networks).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateRemoteNetwork({\n    name: \"\u003cyour network's name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_remote_network(name=\"\u003cyour network's name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateRemoteNetwork.Invoke(new()\n    {\n        Name = \"\u003cyour network's name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.LookupTwingateRemoteNetwork(ctx, \u0026twingate.LookupTwingateRemoteNetworkArgs{\n\t\t\tName: pulumi.StringRef(\"\u003cyour network's name\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateRemoteNetworkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateRemoteNetwork(GetTwingateRemoteNetworkArgs.builder()\n            .name(\"\u003cyour network's name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateRemoteNetwork\n      Arguments:\n        name: \u003cyour network's name\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateRemoteNetwork.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Remote Network\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Remote Network\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateRemoteNetwork.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Remote Network\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The location of the Remote Network. Must be one of the following: AWS, AZURE, GOOGLE*CLOUD, ON*PREMISE, OTHER.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Remote Network\n"
                    }
                },
                "type": "object",
                "required": [
                    "location"
                ]
            }
        },
        "twingate:index/getTwingateRemoteNetworks:getTwingateRemoteNetworks": {
            "description": "A Remote Network represents a single private network in Twingate that can have one or more Connectors and Resources assigned to it. You must create a Remote Network before creating Resources and Connectors that belong to it. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/remote-networks).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst all = twingate.getTwingateRemoteNetworks({});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nall = twingate.get_twingate_remote_networks()\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Twingate.GetTwingateRemoteNetworks.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateRemoteNetworks(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateRemoteNetworksArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = TwingateFunctions.getTwingateRemoteNetworks();\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: twingate:getTwingateRemoteNetworks\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateRemoteNetworks.\n",
                "properties": {
                    "remoteNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateRemoteNetworksRemoteNetwork:getTwingateRemoteNetworksRemoteNetwork"
                        },
                        "description": "List of Remote Networks\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateRemoteNetworks.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "remoteNetworks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateRemoteNetworksRemoteNetwork:getTwingateRemoteNetworksRemoteNetwork"
                        },
                        "description": "List of Remote Networks\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "twingate:index/getTwingateResource:getTwingateResource": {
            "description": "Resources in Twingate represent any network destination address that you wish to provide private access to for users authorized via the Twingate Client application. Resources can be defined by either IP or DNS address, and all private DNS addresses will be automatically resolved with no client configuration changes. For more information, see the Twingate [documentation](https://docs.twingate.com/docs/resources-and-access-nodes).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateResource({\n    id: \"\u003cyour resource's id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_resource(id=\"\u003cyour resource's id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateResource.Invoke(new()\n    {\n        Id = \"\u003cyour resource's id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.LookupTwingateResource(ctx, \u0026twingate.LookupTwingateResourceArgs{\n\t\t\tId: \"\u003cyour resource's id\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateResourceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateResource(GetTwingateResourceArgs.builder()\n            .id(\"\u003cyour resource's id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateResource\n      Arguments:\n        id: \u003cyour resource's id\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateResource.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the Resource. The ID for the Resource must be obtained from the Admin API.\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateResourceProtocol:getTwingateResourceProtocol"
                        },
                        "description": "By default (when this argument is not defined) no restriction is applied, and all protocols and ports are allowed.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateResource.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The Resource's address, which may be an IP address, CIDR range, or DNS address\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the Resource. The ID for the Resource must be obtained from the Admin API.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Resource\n"
                    },
                    "protocols": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateResourceProtocol:getTwingateResourceProtocol"
                        },
                        "description": "By default (when this argument is not defined) no restriction is applied, and all protocols and ports are allowed.\n"
                    },
                    "remoteNetworkId": {
                        "type": "string",
                        "description": "The Remote Network ID that the Resource is associated with. Resources may only be associated with a single Remote Network.\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "id",
                    "name",
                    "remoteNetworkId"
                ]
            }
        },
        "twingate:index/getTwingateResources:getTwingateResources": {
            "description": "Resources in Twingate represent servers on the private network that clients can connect to. Resources can be defined by IP, CIDR range, FQDN, or DNS zone. For more information, see the Twingate [documentation](https://docs.twingate.com/docs/resources-and-access-nodes).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateResources({\n    name: \"\u003cyour resource's name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_resources(name=\"\u003cyour resource's name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateResources.Invoke(new()\n    {\n        Name = \"\u003cyour resource's name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateResources(ctx, \u0026twingate.GetTwingateResourcesArgs{\n\t\t\tName: \"\u003cyour resource's name\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateResourcesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateResources(GetTwingateResourcesArgs.builder()\n            .name(\"\u003cyour resource's name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateResources\n      Arguments:\n        name: \u003cyour resource's name\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateResources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Resource\n"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateResourcesResource:getTwingateResourcesResource"
                        },
                        "description": "List of Resources\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateResources.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Resource\n"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateResourcesResource:getTwingateResourcesResource"
                        },
                        "description": "List of Resources\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "twingate:index/getTwingateSecurityPolicies:getTwingateSecurityPolicies": {
            "description": "Security Policies are defined in the Twingate Admin Console and determine user and device authentication requirements for Resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst all = twingate.getTwingateSecurityPolicies({});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nall = twingate.get_twingate_security_policies()\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Twingate.GetTwingateSecurityPolicies.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateSecurityPolicies(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateSecurityPoliciesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = TwingateFunctions.getTwingateSecurityPolicies();\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: twingate:getTwingateSecurityPolicies\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateSecurityPolicies.\n",
                "properties": {
                    "securityPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateSecurityPoliciesSecurityPolicy:getTwingateSecurityPoliciesSecurityPolicy"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateSecurityPolicies.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "securityPolicies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateSecurityPoliciesSecurityPolicy:getTwingateSecurityPoliciesSecurityPolicy"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "twingate:index/getTwingateSecurityPolicy:getTwingateSecurityPolicy": {
            "description": "Security Policies are defined in the Twingate Admin Console and determine user and device authentication requirements for Resources.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateSecurityPolicy({\n    name: \"\u003cyour security policy name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_security_policy(name=\"\u003cyour security policy name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateSecurityPolicy.Invoke(new()\n    {\n        Name = \"\u003cyour security policy name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateSecurityPolicy(ctx, \u0026twingate.GetTwingateSecurityPolicyArgs{\n\t\t\tName: pulumi.StringRef(\"\u003cyour security policy name\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateSecurityPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateSecurityPolicy(GetTwingateSecurityPolicyArgs.builder()\n            .name(\"\u003cyour security policy name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateSecurityPolicy\n      Arguments:\n        name: \u003cyour security policy name\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateSecurityPolicy.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Return a Security Policy by its ID. The ID for the Security Policy must be obtained from the Admin API.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Return a Security Policy that exactly matches this name.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateSecurityPolicy.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Return a Security Policy by its ID. The ID for the Security Policy must be obtained from the Admin API.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Return a Security Policy that exactly matches this name.\n"
                    }
                },
                "type": "object"
            }
        },
        "twingate:index/getTwingateServiceAccounts:getTwingateServiceAccounts": {
            "description": "Service Accounts offer a way to provide programmatic, centrally-controlled, and consistent access controls.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateServiceAccounts({\n    name: \"\u003cyour service account's name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_service_accounts(name=\"\u003cyour service account's name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateServiceAccounts.Invoke(new()\n    {\n        Name = \"\u003cyour service account's name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateServiceAccounts(ctx, \u0026twingate.GetTwingateServiceAccountsArgs{\n\t\t\tName: pulumi.StringRef(\"\u003cyour service account's name\u003e\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateServiceAccountsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateServiceAccounts(GetTwingateServiceAccountsArgs.builder()\n            .name(\"\u003cyour service account's name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateServiceAccounts\n      Arguments:\n        name: \u003cyour service account's name\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateServiceAccounts.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Filter results by the name of the Service Account.\n"
                    },
                    "serviceAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateServiceAccountsServiceAccount:getTwingateServiceAccountsServiceAccount"
                        },
                        "description": "List of Service Accounts\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateServiceAccounts.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Filter results by the name of the Service Account.\n"
                    },
                    "serviceAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateServiceAccountsServiceAccount:getTwingateServiceAccountsServiceAccount"
                        },
                        "description": "List of Service Accounts\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        },
        "twingate:index/getTwingateUser:getTwingateUser": {
            "description": "Users in Twingate can be given access to Twingate Resources and may either be added manually or automatically synchronized with a 3rd party identity provider. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/users).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst foo = twingate.getTwingateUser({\n    id: \"\u003cyour user's id\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nfoo = twingate.get_twingate_user(id=\"\u003cyour user's id\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var foo = Twingate.GetTwingateUser.Invoke(new()\n    {\n        Id = \"\u003cyour user's id\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateUser(ctx, \u0026twingate.GetTwingateUserArgs{\n\t\t\tId: \"\u003cyour user's id\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var foo = TwingateFunctions.getTwingateUser(GetTwingateUserArgs.builder()\n            .id(\"\u003cyour user's id\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  foo:\n    fn::invoke:\n      Function: twingate:getTwingateUser\n      Arguments:\n        id: \u003cyour user's id\u003e\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateUser.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The ID of the User. The ID for the User must be obtained from the Admin API.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateUser.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "The email address of the User\n"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "The first name of the User\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of the User. The ID for the User must be obtained from the Admin API.\n"
                    },
                    "isAdmin": {
                        "type": "boolean",
                        "description": "Indicates whether the User is an admin\n"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "The last name of the User\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "Indicates the User's role. Either ADMIN, DEVOPS, SUPPORT, or MEMBER\n"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "firstName",
                    "id",
                    "isAdmin",
                    "lastName",
                    "role"
                ]
            }
        },
        "twingate:index/getTwingateUsers:getTwingateUsers": {
            "description": "Users in Twingate can be given access to Twingate Resources and may either be added manually or automatically synchronized with a 3rd party identity provider. For more information, see Twingate's [documentation](https://docs.twingate.com/docs/users).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as twingate from \"@pulumi/twingate\";\n\nconst all = twingate.getTwingateUsers({});\n```\n```python\nimport pulumi\nimport pulumi_twingate as twingate\n\nall = twingate.get_twingate_users()\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Twingate = Pulumi.Twingate;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var all = Twingate.GetTwingateUsers.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/Twingate-Labs/pulumi-twingate/sdk/go/twingate\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := twingate.GetTwingateUsers(ctx, nil, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.twingate.TwingateFunctions;\nimport com.pulumi.twingate.inputs.GetTwingateUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var all = TwingateFunctions.getTwingateUsers();\n\n    }\n}\n```\n```yaml\nvariables:\n  all:\n    fn::invoke:\n      Function: twingate:getTwingateUsers\n      Arguments: {}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getTwingateUsers.\n",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateUsersUser:getTwingateUsersUser"
                        }
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getTwingateUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/twingate:index/getTwingateUsersUser:getTwingateUsersUser"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            }
        }
    }
}